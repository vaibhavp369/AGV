
5_Position_Control_Interrupts.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800200  000024ee  00002582  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000024ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800210  00800210  00002592  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002592  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000025c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00002604  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019ee  00000000  00000000  00002774  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e71  00000000  00000000  00004162  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001331  00000000  00000000  00004fd3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000520  00000000  00000000  00006304  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008b4  00000000  00000000  00006824  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a13  00000000  00000000  000070d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00007aeb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	1a c5       	rjmp	.+2612   	; 0xa4a <__vector_5>
      16:	00 00       	nop
      18:	ea c4       	rjmp	.+2516   	; 0x9ee <__vector_6>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee ee       	ldi	r30, 0xEE	; 238
      fc:	f4 e2       	ldi	r31, 0x24	; 36
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 31       	cpi	r26, 0x10	; 16
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a0 e1       	ldi	r26, 0x10	; 16
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a6 32       	cpi	r26, 0x26	; 38
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	f8 d1       	rcall	.+1008   	; 0x510 <main>
     120:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <adc_init>:
unsigned char  Flag;
unsigned char node_detected;
int Node_count = -2;


void adc_init(){
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
	
	// enable ADC and pre-scalar = 64 (ADEN = 1, ADPS2 = 1, ADPS1 = 1, ADPS0 = 0)
	// and clear ADC start conversion bit, auto trigger enable bit, interrupt flag bit and interrupt enable bit
	ADCSRA_reg	|= ( (1 << ADEN_bit) | (1 << ADPS2_bit) | (1 << ADPS1_bit) );
     12e:	8a e7       	ldi	r24, 0x7A	; 122
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	2a e7       	ldi	r18, 0x7A	; 122
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	f9 01       	movw	r30, r18
     138:	20 81       	ld	r18, Z
     13a:	26 68       	ori	r18, 0x86	; 134
     13c:	fc 01       	movw	r30, r24
     13e:	20 83       	st	Z, r18
	ADCSRA_reg	&= ~( (1 << ADSC_bit) | (1 << ADATE_bit) | (1 << ADIF_bit) | (1 << ADIE_bit) | (1 << ADPS0_bit) );
     140:	8a e7       	ldi	r24, 0x7A	; 122
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	2a e7       	ldi	r18, 0x7A	; 122
     146:	30 e0       	ldi	r19, 0x00	; 0
     148:	f9 01       	movw	r30, r18
     14a:	20 81       	ld	r18, Z
     14c:	26 78       	andi	r18, 0x86	; 134
     14e:	fc 01       	movw	r30, r24
     150:	20 83       	st	Z, r18
	
	// In ADCSRB, disable Analog Comparator Multiplexer, MUX5 bit and ADC Auto Trigger Source bits
	ADCSRB_reg	&= ~( (1 << ACME_bit) | (1 << MUX5_bit) | (1 << ADTS2_bit) | (1 << ADTS1_bit) | (1 << ADTS0_bit) );
     152:	8b e7       	ldi	r24, 0x7B	; 123
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	2b e7       	ldi	r18, 0x7B	; 123
     158:	30 e0       	ldi	r19, 0x00	; 0
     15a:	f9 01       	movw	r30, r18
     15c:	20 81       	ld	r18, Z
     15e:	20 7b       	andi	r18, 0xB0	; 176
     160:	fc 01       	movw	r30, r24
     162:	20 83       	st	Z, r18
	
	// In ADMUX, set the Reference Selection bits to use the AVCC as reference, and disable the channel selection bits MUX[4:0]
	ADMUX_reg	&= ~( (1 << REFS1_bit) | (1 << MUX4_bit) | (1 << MUX3_bit) | (1 << MUX2_bit) | (1 << MUX1_bit) | (1 << MUX0_bit) );
     164:	8c e7       	ldi	r24, 0x7C	; 124
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	2c e7       	ldi	r18, 0x7C	; 124
     16a:	30 e0       	ldi	r19, 0x00	; 0
     16c:	f9 01       	movw	r30, r18
     16e:	20 81       	ld	r18, Z
     170:	20 76       	andi	r18, 0x60	; 96
     172:	fc 01       	movw	r30, r24
     174:	20 83       	st	Z, r18
	ADMUX_reg	|= (1 << REFS0_bit);
     176:	8c e7       	ldi	r24, 0x7C	; 124
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	2c e7       	ldi	r18, 0x7C	; 124
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	f9 01       	movw	r30, r18
     180:	20 81       	ld	r18, Z
     182:	20 64       	ori	r18, 0x40	; 64
     184:	fc 01       	movw	r30, r24
     186:	20 83       	st	Z, r18
	
	// In ADMUX, enable the ADLAR bit for 8-bit ADC result
	ADMUX_reg	|= (1 << ADLAR_bit);
     188:	8c e7       	ldi	r24, 0x7C	; 124
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	2c e7       	ldi	r18, 0x7C	; 124
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	f9 01       	movw	r30, r18
     192:	20 81       	ld	r18, Z
     194:	20 62       	ori	r18, 0x20	; 32
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18
	
	// In ACSR, disable the Analog Comparator by writing 1 to ACD_bit
	ACSR_reg	|= ( 1 << ACD_bit );
     19a:	80 e5       	ldi	r24, 0x50	; 80
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	20 e5       	ldi	r18, 0x50	; 80
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	f9 01       	movw	r30, r18
     1a4:	20 81       	ld	r18, Z
     1a6:	20 68       	ori	r18, 0x80	; 128
     1a8:	fc 01       	movw	r30, r24
     1aa:	20 83       	st	Z, r18
}
     1ac:	00 00       	nop
     1ae:	df 91       	pop	r29
     1b0:	cf 91       	pop	r28
     1b2:	08 95       	ret

000001b4 <ADC_Conversion>:




unsigned char ADC_Conversion(unsigned char channel_num)
{
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	1f 92       	push	r1
     1ba:	1f 92       	push	r1
     1bc:	cd b7       	in	r28, 0x3d	; 61
     1be:	de b7       	in	r29, 0x3e	; 62
     1c0:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char adc_8bit_data;
	
	// MUX[5:0] bits to select the ADC channel number
	if ( channel_num > 7 )
     1c2:	8a 81       	ldd	r24, Y+2	; 0x02
     1c4:	88 30       	cpi	r24, 0x08	; 8
     1c6:	48 f0       	brcs	.+18     	; 0x1da <ADC_Conversion+0x26>
	{
		ADCSRB_reg |= ( 1 << MUX5_bit );
     1c8:	8b e7       	ldi	r24, 0x7B	; 123
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	2b e7       	ldi	r18, 0x7B	; 123
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	f9 01       	movw	r30, r18
     1d2:	20 81       	ld	r18, Z
     1d4:	28 60       	ori	r18, 0x08	; 8
     1d6:	fc 01       	movw	r30, r24
     1d8:	20 83       	st	Z, r18
	}
	channel_num	= channel_num & 0x07;
     1da:	8a 81       	ldd	r24, Y+2	; 0x02
     1dc:	87 70       	andi	r24, 0x07	; 7
     1de:	8a 83       	std	Y+2, r24	; 0x02
	ADMUX_reg	= ( ADMUX_reg | channel_num );
     1e0:	8c e7       	ldi	r24, 0x7C	; 124
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	2c e7       	ldi	r18, 0x7C	; 124
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	f9 01       	movw	r30, r18
     1ea:	30 81       	ld	r19, Z
     1ec:	2a 81       	ldd	r18, Y+2	; 0x02
     1ee:	23 2b       	or	r18, r19
     1f0:	fc 01       	movw	r30, r24
     1f2:	20 83       	st	Z, r18
	
	// set the ADSC bit in ADCSRA register
	ADCSRA_reg		|= ( 1 << ADSC_bit );
     1f4:	8a e7       	ldi	r24, 0x7A	; 122
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	2a e7       	ldi	r18, 0x7A	; 122
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	f9 01       	movw	r30, r18
     1fe:	20 81       	ld	r18, Z
     200:	20 64       	ori	r18, 0x40	; 64
     202:	fc 01       	movw	r30, r24
     204:	20 83       	st	Z, r18
	
	//Wait for ADC conversion to complete
	while( ( ADCSRA_reg & ( 1 << ADIF_bit ) ) == 0x00 );
     206:	00 00       	nop
     208:	8a e7       	ldi	r24, 0x7A	; 122
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	fc 01       	movw	r30, r24
     20e:	80 81       	ld	r24, Z
     210:	88 2f       	mov	r24, r24
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	80 71       	andi	r24, 0x10	; 16
     216:	99 27       	eor	r25, r25
     218:	89 2b       	or	r24, r25
     21a:	b1 f3       	breq	.-20     	; 0x208 <ADC_Conversion+0x54>
	
	adc_8bit_data = ADCH_reg;
     21c:	89 e7       	ldi	r24, 0x79	; 121
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	fc 01       	movw	r30, r24
     222:	80 81       	ld	r24, Z
     224:	89 83       	std	Y+1, r24	; 0x01
	
	// clear ADIF bit by writing 1 to it
	ADCSRA_reg		|= ( 1 << ADIF_bit );
     226:	8a e7       	ldi	r24, 0x7A	; 122
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	2a e7       	ldi	r18, 0x7A	; 122
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	f9 01       	movw	r30, r18
     230:	20 81       	ld	r18, Z
     232:	20 61       	ori	r18, 0x10	; 16
     234:	fc 01       	movw	r30, r24
     236:	20 83       	st	Z, r18
	
	// clear the MUX5 bit
	ADCSRB_reg		&= ~( 1 << MUX5_bit );
     238:	8b e7       	ldi	r24, 0x7B	; 123
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	2b e7       	ldi	r18, 0x7B	; 123
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	f9 01       	movw	r30, r18
     242:	20 81       	ld	r18, Z
     244:	27 7f       	andi	r18, 0xF7	; 247
     246:	fc 01       	movw	r30, r24
     248:	20 83       	st	Z, r18
	
	// clear the MUX[4:0] bits
	ADMUX_reg		&= ~( (1 << MUX4_bit) | (1 << MUX3_bit) | (1 << MUX2_bit) | (1 << MUX1_bit) | (1 << MUX0_bit) );
     24a:	8c e7       	ldi	r24, 0x7C	; 124
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	2c e7       	ldi	r18, 0x7C	; 124
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	f9 01       	movw	r30, r18
     254:	20 81       	ld	r18, Z
     256:	20 7e       	andi	r18, 0xE0	; 224
     258:	fc 01       	movw	r30, r24
     25a:	20 83       	st	Z, r18
	
	return adc_8bit_data;
     25c:	89 81       	ldd	r24, Y+1	; 0x01
}
     25e:	0f 90       	pop	r0
     260:	0f 90       	pop	r0
     262:	df 91       	pop	r29
     264:	cf 91       	pop	r28
     266:	08 95       	ret

00000268 <adc_port_config>:



void adc_port_config (void)
{
     268:	cf 93       	push	r28
     26a:	df 93       	push	r29
     26c:	cd b7       	in	r28, 0x3d	; 61
     26e:	de b7       	in	r29, 0x3e	; 62
	adc_sensor_low_ddr_reg		= 0x00;				// set PORTF direction as input
     270:	80 e3       	ldi	r24, 0x30	; 48
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	fc 01       	movw	r30, r24
     276:	10 82       	st	Z, r1
	adc_sensor_low_port_reg		= 0x00;				// set PORTF pins floating
     278:	81 e3       	ldi	r24, 0x31	; 49
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	fc 01       	movw	r30, r24
     27e:	10 82       	st	Z, r1
	adc_sensor_high_ddr_reg		= 0x00;				// set PORTK direction as input
     280:	87 e0       	ldi	r24, 0x07	; 7
     282:	91 e0       	ldi	r25, 0x01	; 1
     284:	fc 01       	movw	r30, r24
     286:	10 82       	st	Z, r1
	adc_sensor_high_port_reg	= 0x00;				// set PORTK pins floating
     288:	88 e0       	ldi	r24, 0x08	; 8
     28a:	91 e0       	ldi	r25, 0x01	; 1
     28c:	fc 01       	movw	r30, r24
     28e:	10 82       	st	Z, r1
}
     290:	00 00       	nop
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	08 95       	ret

00000298 <path_follow>:




void path_follow(unsigned char L_sen, unsigned char C_sen, unsigned char R_sen)
{
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62
     2a0:	61 97       	sbiw	r28, 0x11	; 17
     2a2:	0f b6       	in	r0, 0x3f	; 63
     2a4:	f8 94       	cli
     2a6:	de bf       	out	0x3e, r29	; 62
     2a8:	0f be       	out	0x3f, r0	; 63
     2aa:	cd bf       	out	0x3d, r28	; 61
     2ac:	8f 87       	std	Y+15, r24	; 0x0f
     2ae:	68 8b       	std	Y+16, r22	; 0x10
     2b0:	49 8b       	std	Y+17, r20	; 0x11
	Flag = 0;
     2b2:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <Flag>
	
	if ( (L_sen > min_thresh) && (C_sen > min_thresh) && (R_sen > min_thresh) )													//Node
     2b6:	8f 85       	ldd	r24, Y+15	; 0x0f
     2b8:	83 33       	cpi	r24, 0x33	; 51
     2ba:	78 f0       	brcs	.+30     	; 0x2da <path_follow+0x42>
     2bc:	88 89       	ldd	r24, Y+16	; 0x10
     2be:	83 33       	cpi	r24, 0x33	; 51
     2c0:	60 f0       	brcs	.+24     	; 0x2da <path_follow+0x42>
     2c2:	89 89       	ldd	r24, Y+17	; 0x11
     2c4:	83 33       	cpi	r24, 0x33	; 51
     2c6:	48 f0       	brcs	.+18     	; 0x2da <path_follow+0x42>
	{
		velocity(0,0);
     2c8:	60 e0       	ldi	r22, 0x00	; 0
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	03 d2       	rcall	.+1030   	; 0x6d4 <velocity>
		Flag = 1;
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <Flag>
		node_detected = 1;
     2d4:	81 e0       	ldi	r24, 0x01	; 1
     2d6:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <node_detected>
	}
	
	if( (L_sen >= min_thresh) && (node_detected == 0) && ( Flag == 0 ) )
     2da:	8f 85       	ldd	r24, Y+15	; 0x0f
     2dc:	82 33       	cpi	r24, 0x32	; 50
     2de:	78 f0       	brcs	.+30     	; 0x2fe <path_follow+0x66>
     2e0:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <node_detected>
     2e4:	88 23       	and	r24, r24
     2e6:	59 f4       	brne	.+22     	; 0x2fe <path_follow+0x66>
     2e8:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <Flag>
     2ec:	88 23       	and	r24, r24
	{
		forward();
     2ee:	39 f4       	brne	.+14     	; 0x2fe <path_follow+0x66>
     2f0:	2e d2       	rcall	.+1116   	; 0x74e <forward>
		velocity(80,180);
     2f2:	64 eb       	ldi	r22, 0xB4	; 180
     2f4:	80 e5       	ldi	r24, 0x50	; 80
     2f6:	ee d1       	rcall	.+988    	; 0x6d4 <velocity>
		Flag = 1;
     2f8:	81 e0       	ldi	r24, 0x01	; 1
     2fa:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <Flag>
	}

	if( (R_sen >= min_thresh) && (node_detected == 0) && ( Flag == 0 ) )
     2fe:	89 89       	ldd	r24, Y+17	; 0x11
     300:	82 33       	cpi	r24, 0x32	; 50
     302:	78 f0       	brcs	.+30     	; 0x322 <path_follow+0x8a>
     304:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <node_detected>
     308:	88 23       	and	r24, r24
     30a:	59 f4       	brne	.+22     	; 0x322 <path_follow+0x8a>
     30c:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <Flag>
     310:	88 23       	and	r24, r24
	{
		forward();
     312:	39 f4       	brne	.+14     	; 0x322 <path_follow+0x8a>
		velocity(180,80);																									// increase Left motor speed
     314:	1c d2       	rcall	.+1080   	; 0x74e <forward>
     316:	60 e5       	ldi	r22, 0x50	; 80
     318:	84 eb       	ldi	r24, 0xB4	; 180
     31a:	dc d1       	rcall	.+952    	; 0x6d4 <velocity>
		Flag = 1;
     31c:	81 e0       	ldi	r24, 0x01	; 1
     31e:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <Flag>
		//lcd_wr_char(2,3,'R');
	}
	

	if ( (C_sen >= min_thresh) && (node_detected == 0) && ( Flag == 0 ) )		// Forward
     322:	88 89       	ldd	r24, Y+16	; 0x10
     324:	82 33       	cpi	r24, 0x32	; 50
     326:	78 f0       	brcs	.+30     	; 0x346 <path_follow+0xae>
     328:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <node_detected>
     32c:	88 23       	and	r24, r24
     32e:	59 f4       	brne	.+22     	; 0x346 <path_follow+0xae>
     330:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <Flag>
	{
		forward();
     334:	88 23       	and	r24, r24
     336:	39 f4       	brne	.+14     	; 0x346 <path_follow+0xae>
		velocity(200,212);																									// keep same speed
     338:	0a d2       	rcall	.+1044   	; 0x74e <forward>
     33a:	64 ed       	ldi	r22, 0xD4	; 212
     33c:	88 ec       	ldi	r24, 0xC8	; 200
     33e:	ca d1       	rcall	.+916    	; 0x6d4 <velocity>
		Flag =1;
     340:	81 e0       	ldi	r24, 0x01	; 1
     342:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <Flag>
		//lcd_wr_char(2,3,'F');
	}
	
	if (node_detected)
     346:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <node_detected>
     34a:	88 23       	and	r24, r24
     34c:	09 f4       	brne	.+2      	; 0x350 <path_follow+0xb8>
	{
		//lcd_wr_char(2,1,'1');
		node_detected = 0;
     34e:	d1 c0       	rjmp	.+418    	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
     350:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <node_detected>
		buzzer_on();
     354:	01 d4       	rcall	.+2050   	; 0xb58 <buzzer_on>
     356:	80 e0       	ldi	r24, 0x00	; 0
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	aa e7       	ldi	r26, 0x7A	; 122
     35c:	b4 e4       	ldi	r27, 0x44	; 68
     35e:	89 83       	std	Y+1, r24	; 0x01
     360:	9a 83       	std	Y+2, r25	; 0x02
     362:	ab 83       	std	Y+3, r26	; 0x03
     364:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     366:	26 e6       	ldi	r18, 0x66	; 102
     368:	36 e6       	ldi	r19, 0x66	; 102
     36a:	46 e6       	ldi	r20, 0x66	; 102
     36c:	55 e4       	ldi	r21, 0x45	; 69
     36e:	69 81       	ldd	r22, Y+1	; 0x01
     370:	7a 81       	ldd	r23, Y+2	; 0x02
     372:	8b 81       	ldd	r24, Y+3	; 0x03
     374:	9c 81       	ldd	r25, Y+4	; 0x04
     376:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
     37a:	dc 01       	movw	r26, r24
     37c:	cb 01       	movw	r24, r22
     37e:	8d 83       	std	Y+5, r24	; 0x05
     380:	9e 83       	std	Y+6, r25	; 0x06
     382:	af 83       	std	Y+7, r26	; 0x07
     384:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	40 e8       	ldi	r20, 0x80	; 128
     38c:	5f e3       	ldi	r21, 0x3F	; 63
     38e:	6d 81       	ldd	r22, Y+5	; 0x05
     390:	7e 81       	ldd	r23, Y+6	; 0x06
     392:	8f 81       	ldd	r24, Y+7	; 0x07
     394:	98 85       	ldd	r25, Y+8	; 0x08
     396:	0e 94 8e 10 	call	0x211c	; 0x211c <__cmpsf2>
     39a:	88 23       	and	r24, r24
     39c:	2c f4       	brge	.+10     	; 0x3a8 <path_follow+0x110>
		__ticks = 1;
     39e:	81 e0       	ldi	r24, 0x01	; 1
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	9a 87       	std	Y+10, r25	; 0x0a
     3a4:	89 87       	std	Y+9, r24	; 0x09
     3a6:	3f c0       	rjmp	.+126    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
	else if (__tmp > 65535)
     3a8:	20 e0       	ldi	r18, 0x00	; 0
     3aa:	3f ef       	ldi	r19, 0xFF	; 255
     3ac:	4f e7       	ldi	r20, 0x7F	; 127
     3ae:	57 e4       	ldi	r21, 0x47	; 71
     3b0:	6d 81       	ldd	r22, Y+5	; 0x05
     3b2:	7e 81       	ldd	r23, Y+6	; 0x06
     3b4:	8f 81       	ldd	r24, Y+7	; 0x07
     3b6:	98 85       	ldd	r25, Y+8	; 0x08
     3b8:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <__gesf2>
     3bc:	18 16       	cp	r1, r24
     3be:	4c f5       	brge	.+82     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3c0:	20 e0       	ldi	r18, 0x00	; 0
     3c2:	30 e0       	ldi	r19, 0x00	; 0
     3c4:	40 e2       	ldi	r20, 0x20	; 32
     3c6:	51 e4       	ldi	r21, 0x41	; 65
     3c8:	69 81       	ldd	r22, Y+1	; 0x01
     3ca:	7a 81       	ldd	r23, Y+2	; 0x02
     3cc:	8b 81       	ldd	r24, Y+3	; 0x03
     3ce:	9c 81       	ldd	r25, Y+4	; 0x04
     3d0:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
     3d4:	dc 01       	movw	r26, r24
     3d6:	cb 01       	movw	r24, r22
     3d8:	bc 01       	movw	r22, r24
     3da:	cd 01       	movw	r24, r26
     3dc:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
     3e0:	dc 01       	movw	r26, r24
     3e2:	cb 01       	movw	r24, r22
     3e4:	9a 87       	std	Y+10, r25	; 0x0a
     3e6:	89 87       	std	Y+9, r24	; 0x09
     3e8:	0f c0       	rjmp	.+30     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3ea:	80 e7       	ldi	r24, 0x70	; 112
     3ec:	91 e0       	ldi	r25, 0x01	; 1
     3ee:	9c 87       	std	Y+12, r25	; 0x0c
     3f0:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3f2:	8b 85       	ldd	r24, Y+11	; 0x0b
     3f4:	9c 85       	ldd	r25, Y+12	; 0x0c
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	f1 f7       	brne	.-4      	; 0x3f6 <path_follow+0x15e>
     3fa:	9c 87       	std	Y+12, r25	; 0x0c
     3fc:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3fe:	89 85       	ldd	r24, Y+9	; 0x09
     400:	9a 85       	ldd	r25, Y+10	; 0x0a
     402:	01 97       	sbiw	r24, 0x01	; 1
     404:	9a 87       	std	Y+10, r25	; 0x0a
     406:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     408:	89 85       	ldd	r24, Y+9	; 0x09
     40a:	9a 85       	ldd	r25, Y+10	; 0x0a
     40c:	89 2b       	or	r24, r25
     40e:	69 f7       	brne	.-38     	; 0x3ea <path_follow+0x152>
     410:	14 c0       	rjmp	.+40     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     412:	6d 81       	ldd	r22, Y+5	; 0x05
     414:	7e 81       	ldd	r23, Y+6	; 0x06
     416:	8f 81       	ldd	r24, Y+7	; 0x07
     418:	98 85       	ldd	r25, Y+8	; 0x08
     41a:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
     41e:	dc 01       	movw	r26, r24
     420:	cb 01       	movw	r24, r22
     422:	9a 87       	std	Y+10, r25	; 0x0a
     424:	89 87       	std	Y+9, r24	; 0x09
     426:	89 85       	ldd	r24, Y+9	; 0x09
     428:	9a 85       	ldd	r25, Y+10	; 0x0a
     42a:	9e 87       	std	Y+14, r25	; 0x0e
     42c:	8d 87       	std	Y+13, r24	; 0x0d
     42e:	8d 85       	ldd	r24, Y+13	; 0x0d
     430:	9e 85       	ldd	r25, Y+14	; 0x0e
     432:	01 97       	sbiw	r24, 0x01	; 1
     434:	f1 f7       	brne	.-4      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     436:	9e 87       	std	Y+14, r25	; 0x0e
		_delay_ms(1000);
		buzzer_off();
     438:	8d 87       	std	Y+13, r24	; 0x0d
     43a:	9f d3       	rcall	.+1854   	; 0xb7a <buzzer_off>
		bar_graph_led_port_reg = 0x80;
     43c:	85 e0       	ldi	r24, 0x05	; 5
     43e:	91 e0       	ldi	r25, 0x01	; 1
     440:	20 e8       	ldi	r18, 0x80	; 128
     442:	fc 01       	movw	r30, r24
     444:	20 83       	st	Z, r18
		Node_count +=1;
     446:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Node_count>
     44a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Node_count+0x1>
     44e:	01 96       	adiw	r24, 0x01	; 1
     450:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <Node_count+0x1>
     454:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <Node_count>
				if (Node_count < 8)	
     458:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Node_count>
     45c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Node_count+0x1>
     460:	08 97       	sbiw	r24, 0x08	; 8
     462:	0c f0       	brlt	.+2      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     464:	4b c0       	rjmp	.+150    	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
				 {	
					 lcd_string(1,1,"Node Count:");
     466:	42 e0       	ldi	r20, 0x02	; 2
     468:	52 e0       	ldi	r21, 0x02	; 2
     46a:	61 e0       	ldi	r22, 0x01	; 1
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <lcd_string>
					 lcd_numeric_value(2,1,(Node_count+1),2);
     472:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Node_count>
     476:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Node_count+0x1>
     47a:	01 96       	adiw	r24, 0x01	; 1
     47c:	22 e0       	ldi	r18, 0x02	; 2
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	ac 01       	movw	r20, r24
     482:	61 e0       	ldi	r22, 0x01	; 1
     484:	82 e0       	ldi	r24, 0x02	; 2
     486:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <lcd_numeric_value>
					 switch(Node_count)
     48a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <Node_count>
     48e:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <Node_count+0x1>
     492:	83 30       	cpi	r24, 0x03	; 3
     494:	91 05       	cpc	r25, r1
     496:	99 f0       	breq	.+38     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
     498:	84 30       	cpi	r24, 0x04	; 4
     49a:	91 05       	cpc	r25, r1
     49c:	1c f4       	brge	.+6      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     49e:	89 2b       	or	r24, r25
     4a0:	39 f0       	breq	.+14     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
     4a2:	22 c0       	rjmp	.+68     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
     4a4:	84 30       	cpi	r24, 0x04	; 4
     4a6:	91 05       	cpc	r25, r1
     4a8:	89 f0       	breq	.+34     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4aa:	07 97       	sbiw	r24, 0x07	; 7
					{
						case 0:
						forward_mm(65);
     4ac:	b1 f0       	breq	.+44     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4ae:	1c c0       	rjmp	.+56     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
     4b0:	81 e4       	ldi	r24, 0x41	; 65
						right_degrees(90);
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	f8 d2       	rcall	.+1520   	; 0xaa6 <forward_mm>
     4b6:	8a e5       	ldi	r24, 0x5A	; 90
						break;
     4b8:	90 e0       	ldi	r25, 0x00	; 0
						
						case 3: 
						forward_mm(65);
     4ba:	1f d3       	rcall	.+1598   	; 0xafa <right_degrees>
     4bc:	1f c0       	rjmp	.+62     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
     4be:	81 e4       	ldi	r24, 0x41	; 65
						left_degrees(90);
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	f1 d2       	rcall	.+1506   	; 0xaa6 <forward_mm>
     4c4:	8a e5       	ldi	r24, 0x5A	; 90
						break;
						
						case 4: 
						forward_mm(65);
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	03 d3       	rcall	.+1542   	; 0xad0 <left_degrees>
     4ca:	18 c0       	rjmp	.+48     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
						left_degrees(90);
     4cc:	81 e4       	ldi	r24, 0x41	; 65
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	ea d2       	rcall	.+1492   	; 0xaa6 <forward_mm>
     4d2:	8a e5       	ldi	r24, 0x5A	; 90
						break;
     4d4:	90 e0       	ldi	r25, 0x00	; 0
						
						case 7: 
						forward_mm(65);
     4d6:	fc d2       	rcall	.+1528   	; 0xad0 <left_degrees>
     4d8:	11 c0       	rjmp	.+34     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
     4da:	81 e4       	ldi	r24, 0x41	; 65
     4dc:	90 e0       	ldi	r25, 0x00	; 0
						left_degrees(90);
     4de:	e3 d2       	rcall	.+1478   	; 0xaa6 <forward_mm>
     4e0:	8a e5       	ldi	r24, 0x5A	; 90
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	f5 d2       	rcall	.+1514   	; 0xad0 <left_degrees>
						break;
     4e6:	0a c0       	rjmp	.+20     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
						
						default:
						forward_mm(65);
     4e8:	81 e4       	ldi	r24, 0x41	; 65
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	dc d2       	rcall	.+1464   	; 0xaa6 <forward_mm>
     4ee:	00 00       	nop
						break;
     4f0:	05 c0       	rjmp	.+10     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
     4f2:	85 e0       	ldi	r24, 0x05	; 5
				 }
	}
	else
	{
		//lcd_wr_char(2,1,'0');
		bar_graph_led_port_reg = 0x00;
     4f4:	91 e0       	ldi	r25, 0x01	; 1
     4f6:	fc 01       	movw	r30, r24
     4f8:	10 82       	st	Z, r1
     4fa:	00 c0       	rjmp	.+0      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
	}
	
	
}
     4fc:	00 00       	nop
     4fe:	61 96       	adiw	r28, 0x11	; 17
     500:	0f b6       	in	r0, 0x3f	; 63
     502:	f8 94       	cli
     504:	de bf       	out	0x3e, r29	; 62
     506:	0f be       	out	0x3f, r0	; 63
     508:	cd bf       	out	0x3d, r28	; 61
     50a:	df 91       	pop	r29
     50c:	cf 91       	pop	r28
     50e:	08 95       	ret

00000510 <main>:
     510:	cf 93       	push	r28



int main(void)
{
     512:	df 93       	push	r29
     514:	00 d0       	rcall	.+0      	; 0x516 <main+0x6>
     516:	cd b7       	in	r28, 0x3d	; 61
     518:	de b7       	in	r29, 0x3e	; 62
	unsigned char R_sense,C_sense,L_sense;
	R_sense = 0;
     51a:	19 82       	std	Y+1, r1	; 0x01
	C_sense = 0;
     51c:	1a 82       	std	Y+2, r1	; 0x02
	L_sense = 0;
     51e:	1b 82       	std	Y+3, r1	; 0x03
	lcd_port_config();
     520:	3d d3       	rcall	.+1658   	; 0xb9c <lcd_port_config>
	lcd_init();
     522:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <lcd_init>
	motors_pin_config();
	pwm_pin_config();
     526:	18 d0       	rcall	.+48     	; 0x558 <motors_pin_config>
	position_encoder_pin_config();
     528:	31 d0       	rcall	.+98     	; 0x58c <pwm_pin_config>
	position_encoder_interrupt_config();
     52a:	4a d0       	rcall	.+148    	; 0x5c0 <position_encoder_pin_config>
     52c:	eb d0       	rcall	.+470    	; 0x704 <position_encoder_interrupt_config>
	adc_port_config();					// Initialize the ADC port
     52e:	9c de       	rcall	.-712    	; 0x268 <adc_port_config>
	adc_init();							// Initialize the ADC
     530:	fa dd       	rcall	.-1036   	; 0x126 <adc_init>
	timer5_init();
     532:	60 d0       	rcall	.+192    	; 0x5f4 <timer5_init>
     534:	68 ec       	ldi	r22, 0xC8	; 200
	velocity(200,200);
     536:	88 ec       	ldi	r24, 0xC8	; 200
     538:	cd d0       	rcall	.+410    	; 0x6d4 <velocity>
     53a:	f4 d2       	rcall	.+1512   	; 0xb24 <buzzer_init>
	buzzer_init();
     53c:	83 e0       	ldi	r24, 0x03	; 3
     53e:	3a de       	rcall	.-908    	; 0x1b4 <ADC_Conversion>
	while(1)
	{
		L_sense = ADC_Conversion(left_wl_sensor_channel);
     540:	8b 83       	std	Y+3, r24	; 0x03
     542:	82 e0       	ldi	r24, 0x02	; 2
     544:	37 de       	rcall	.-914    	; 0x1b4 <ADC_Conversion>
		C_sense = ADC_Conversion(center_wl_sensor_channel);
     546:	8a 83       	std	Y+2, r24	; 0x02
     548:	81 e0       	ldi	r24, 0x01	; 1
     54a:	34 de       	rcall	.-920    	; 0x1b4 <ADC_Conversion>
     54c:	89 83       	std	Y+1, r24	; 0x01
		R_sense = ADC_Conversion(right_wl_sensor_channel);
     54e:	49 81       	ldd	r20, Y+1	; 0x01
     550:	6a 81       	ldd	r22, Y+2	; 0x02
     552:	8b 81       	ldd	r24, Y+3	; 0x03
     554:	a1 de       	rcall	.-702    	; 0x298 <path_follow>
		path_follow(L_sense, C_sense, R_sense);
     556:	f2 cf       	rjmp	.-28     	; 0x53c <main+0x2c>

00000558 <motors_pin_config>:
     558:	cf 93       	push	r28
     55a:	df 93       	push	r29
     55c:	cd b7       	in	r28, 0x3d	; 61
     55e:	de b7       	in	r29, 0x3e	; 62
	}
     560:	81 e2       	ldi	r24, 0x21	; 33
void back_mm(unsigned int DistanceInMM)
{
	velocity(200,212);
	 back();
	 linear_distance_mm(DistanceInMM);
}
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	21 e2       	ldi	r18, 0x21	; 33
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	f9 01       	movw	r30, r18
     56a:	20 81       	ld	r18, Z
     56c:	2f 60       	ori	r18, 0x0F	; 15
     56e:	fc 01       	movw	r30, r24
     570:	20 83       	st	Z, r18
     572:	82 e2       	ldi	r24, 0x22	; 34
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	22 e2       	ldi	r18, 0x22	; 34
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	f9 01       	movw	r30, r18
     57c:	20 81       	ld	r18, Z
     57e:	20 7f       	andi	r18, 0xF0	; 240
     580:	fc 01       	movw	r30, r24
     582:	20 83       	st	Z, r18
     584:	00 00       	nop
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <pwm_pin_config>:
     58c:	cf 93       	push	r28
     58e:	df 93       	push	r29
     590:	cd b7       	in	r28, 0x3d	; 61
     592:	de b7       	in	r29, 0x3e	; 62
     594:	8a e0       	ldi	r24, 0x0A	; 10
     596:	91 e0       	ldi	r25, 0x01	; 1
     598:	2a e0       	ldi	r18, 0x0A	; 10
     59a:	31 e0       	ldi	r19, 0x01	; 1
     59c:	f9 01       	movw	r30, r18
     59e:	20 81       	ld	r18, Z
     5a0:	28 61       	ori	r18, 0x18	; 24
     5a2:	fc 01       	movw	r30, r24
     5a4:	20 83       	st	Z, r18
     5a6:	8b e0       	ldi	r24, 0x0B	; 11
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	2b e0       	ldi	r18, 0x0B	; 11
     5ac:	31 e0       	ldi	r19, 0x01	; 1
     5ae:	f9 01       	movw	r30, r18
     5b0:	20 81       	ld	r18, Z
     5b2:	28 61       	ori	r18, 0x18	; 24
     5b4:	fc 01       	movw	r30, r24
     5b6:	20 83       	st	Z, r18
     5b8:	00 00       	nop
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	08 95       	ret

000005c0 <position_encoder_pin_config>:
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	cd b7       	in	r28, 0x3d	; 61
     5c6:	de b7       	in	r29, 0x3e	; 62
     5c8:	8d e2       	ldi	r24, 0x2D	; 45
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	2d e2       	ldi	r18, 0x2D	; 45
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	f9 01       	movw	r30, r18
     5d2:	20 81       	ld	r18, Z
     5d4:	2f 7c       	andi	r18, 0xCF	; 207
     5d6:	fc 01       	movw	r30, r24
     5d8:	20 83       	st	Z, r18
     5da:	8e e2       	ldi	r24, 0x2E	; 46
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	2e e2       	ldi	r18, 0x2E	; 46
     5e0:	30 e0       	ldi	r19, 0x00	; 0
     5e2:	f9 01       	movw	r30, r18
     5e4:	20 81       	ld	r18, Z
     5e6:	20 63       	ori	r18, 0x30	; 48
     5e8:	fc 01       	movw	r30, r24
     5ea:	20 83       	st	Z, r18
     5ec:	00 00       	nop
     5ee:	df 91       	pop	r29
     5f0:	cf 91       	pop	r28
     5f2:	08 95       	ret

000005f4 <timer5_init>:
     5f4:	cf 93       	push	r28
     5f6:	df 93       	push	r29
     5f8:	cd b7       	in	r28, 0x3d	; 61
     5fa:	de b7       	in	r29, 0x3e	; 62
     5fc:	81 e2       	ldi	r24, 0x21	; 33
     5fe:	91 e0       	ldi	r25, 0x01	; 1
     600:	fc 01       	movw	r30, r24
     602:	10 82       	st	Z, r1
     604:	85 e2       	ldi	r24, 0x25	; 37
     606:	91 e0       	ldi	r25, 0x01	; 1
     608:	2f ef       	ldi	r18, 0xFF	; 255
     60a:	fc 01       	movw	r30, r24
     60c:	20 83       	st	Z, r18
     60e:	84 e2       	ldi	r24, 0x24	; 36
     610:	91 e0       	ldi	r25, 0x01	; 1
     612:	21 e0       	ldi	r18, 0x01	; 1
     614:	fc 01       	movw	r30, r24
     616:	20 83       	st	Z, r18
     618:	89 e2       	ldi	r24, 0x29	; 41
     61a:	91 e0       	ldi	r25, 0x01	; 1
     61c:	fc 01       	movw	r30, r24
     61e:	10 82       	st	Z, r1
     620:	88 e2       	ldi	r24, 0x28	; 40
     622:	91 e0       	ldi	r25, 0x01	; 1
     624:	2f ef       	ldi	r18, 0xFF	; 255
     626:	fc 01       	movw	r30, r24
     628:	20 83       	st	Z, r18
     62a:	8b e2       	ldi	r24, 0x2B	; 43
     62c:	91 e0       	ldi	r25, 0x01	; 1
     62e:	fc 01       	movw	r30, r24
     630:	10 82       	st	Z, r1
     632:	8a e2       	ldi	r24, 0x2A	; 42
     634:	91 e0       	ldi	r25, 0x01	; 1
     636:	2f ef       	ldi	r18, 0xFF	; 255
     638:	fc 01       	movw	r30, r24
     63a:	20 83       	st	Z, r18
     63c:	80 e2       	ldi	r24, 0x20	; 32
     63e:	91 e0       	ldi	r25, 0x01	; 1
     640:	20 e2       	ldi	r18, 0x20	; 32
     642:	31 e0       	ldi	r19, 0x01	; 1
     644:	f9 01       	movw	r30, r18
     646:	20 81       	ld	r18, Z
     648:	20 6a       	ori	r18, 0xA0	; 160
     64a:	fc 01       	movw	r30, r24
     64c:	20 83       	st	Z, r18
     64e:	80 e2       	ldi	r24, 0x20	; 32
     650:	91 e0       	ldi	r25, 0x01	; 1
     652:	20 e2       	ldi	r18, 0x20	; 32
     654:	31 e0       	ldi	r19, 0x01	; 1
     656:	f9 01       	movw	r30, r18
     658:	20 81       	ld	r18, Z
     65a:	2f 7a       	andi	r18, 0xAF	; 175
     65c:	fc 01       	movw	r30, r24
     65e:	20 83       	st	Z, r18
     660:	80 e2       	ldi	r24, 0x20	; 32
     662:	91 e0       	ldi	r25, 0x01	; 1
     664:	20 e2       	ldi	r18, 0x20	; 32
     666:	31 e0       	ldi	r19, 0x01	; 1
     668:	f9 01       	movw	r30, r18
     66a:	20 81       	ld	r18, Z
     66c:	21 60       	ori	r18, 0x01	; 1
     66e:	fc 01       	movw	r30, r24
     670:	20 83       	st	Z, r18
     672:	80 e2       	ldi	r24, 0x20	; 32
     674:	91 e0       	ldi	r25, 0x01	; 1
     676:	20 e2       	ldi	r18, 0x20	; 32
     678:	31 e0       	ldi	r19, 0x01	; 1
     67a:	f9 01       	movw	r30, r18
     67c:	20 81       	ld	r18, Z
     67e:	2d 7f       	andi	r18, 0xFD	; 253
     680:	fc 01       	movw	r30, r24
     682:	20 83       	st	Z, r18
     684:	81 e2       	ldi	r24, 0x21	; 33
     686:	91 e0       	ldi	r25, 0x01	; 1
     688:	21 e2       	ldi	r18, 0x21	; 33
     68a:	31 e0       	ldi	r19, 0x01	; 1
     68c:	f9 01       	movw	r30, r18
     68e:	20 81       	ld	r18, Z
     690:	28 60       	ori	r18, 0x08	; 8
     692:	fc 01       	movw	r30, r24
     694:	20 83       	st	Z, r18
     696:	81 e2       	ldi	r24, 0x21	; 33
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	21 e2       	ldi	r18, 0x21	; 33
     69c:	31 e0       	ldi	r19, 0x01	; 1
     69e:	f9 01       	movw	r30, r18
     6a0:	20 81       	ld	r18, Z
     6a2:	2f 7e       	andi	r18, 0xEF	; 239
     6a4:	fc 01       	movw	r30, r24
     6a6:	20 83       	st	Z, r18
     6a8:	81 e2       	ldi	r24, 0x21	; 33
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	21 e2       	ldi	r18, 0x21	; 33
     6ae:	31 e0       	ldi	r19, 0x01	; 1
     6b0:	f9 01       	movw	r30, r18
     6b2:	20 81       	ld	r18, Z
     6b4:	23 60       	ori	r18, 0x03	; 3
     6b6:	fc 01       	movw	r30, r24
     6b8:	20 83       	st	Z, r18
     6ba:	81 e2       	ldi	r24, 0x21	; 33
     6bc:	91 e0       	ldi	r25, 0x01	; 1
     6be:	21 e2       	ldi	r18, 0x21	; 33
     6c0:	31 e0       	ldi	r19, 0x01	; 1
     6c2:	f9 01       	movw	r30, r18
     6c4:	20 81       	ld	r18, Z
     6c6:	2b 7f       	andi	r18, 0xFB	; 251
     6c8:	fc 01       	movw	r30, r24
     6ca:	20 83       	st	Z, r18
     6cc:	00 00       	nop
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	08 95       	ret

000006d4 <velocity>:
     6d4:	cf 93       	push	r28
     6d6:	df 93       	push	r29
     6d8:	1f 92       	push	r1
     6da:	1f 92       	push	r1
     6dc:	cd b7       	in	r28, 0x3d	; 61
     6de:	de b7       	in	r29, 0x3e	; 62
     6e0:	89 83       	std	Y+1, r24	; 0x01
     6e2:	6a 83       	std	Y+2, r22	; 0x02
     6e4:	88 e2       	ldi	r24, 0x28	; 40
     6e6:	91 e0       	ldi	r25, 0x01	; 1
     6e8:	29 81       	ldd	r18, Y+1	; 0x01
     6ea:	fc 01       	movw	r30, r24
     6ec:	20 83       	st	Z, r18
     6ee:	8a e2       	ldi	r24, 0x2A	; 42
     6f0:	91 e0       	ldi	r25, 0x01	; 1
     6f2:	2a 81       	ldd	r18, Y+2	; 0x02
     6f4:	fc 01       	movw	r30, r24
     6f6:	20 83       	st	Z, r18
     6f8:	00 00       	nop
     6fa:	0f 90       	pop	r0
     6fc:	0f 90       	pop	r0
     6fe:	df 91       	pop	r29
     700:	cf 91       	pop	r28
     702:	08 95       	ret

00000704 <position_encoder_interrupt_config>:
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	cd b7       	in	r28, 0x3d	; 61
     70a:	de b7       	in	r29, 0x3e	; 62
     70c:	f8 94       	cli
     70e:	8d e3       	ldi	r24, 0x3D	; 61
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	2d e3       	ldi	r18, 0x3D	; 61
     714:	30 e0       	ldi	r19, 0x00	; 0
     716:	f9 01       	movw	r30, r18
     718:	20 81       	ld	r18, Z
     71a:	20 63       	ori	r18, 0x30	; 48
     71c:	fc 01       	movw	r30, r24
     71e:	20 83       	st	Z, r18
     720:	8a e6       	ldi	r24, 0x6A	; 106
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	2a e6       	ldi	r18, 0x6A	; 106
     726:	30 e0       	ldi	r19, 0x00	; 0
     728:	f9 01       	movw	r30, r18
     72a:	20 81       	ld	r18, Z
     72c:	2a 60       	ori	r18, 0x0A	; 10
     72e:	fc 01       	movw	r30, r24
     730:	20 83       	st	Z, r18
     732:	8a e6       	ldi	r24, 0x6A	; 106
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	2a e6       	ldi	r18, 0x6A	; 106
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	f9 01       	movw	r30, r18
     73c:	20 81       	ld	r18, Z
     73e:	2a 7f       	andi	r18, 0xFA	; 250
     740:	fc 01       	movw	r30, r24
     742:	20 83       	st	Z, r18
     744:	78 94       	sei
     746:	00 00       	nop
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	08 95       	ret

0000074e <forward>:
     74e:	cf 93       	push	r28
     750:	df 93       	push	r29
     752:	cd b7       	in	r28, 0x3d	; 61
     754:	de b7       	in	r29, 0x3e	; 62
     756:	82 e2       	ldi	r24, 0x22	; 34
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	22 e2       	ldi	r18, 0x22	; 34
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	f9 01       	movw	r30, r18
     760:	20 81       	ld	r18, Z
     762:	26 7f       	andi	r18, 0xF6	; 246
     764:	fc 01       	movw	r30, r24
     766:	20 83       	st	Z, r18
     768:	82 e2       	ldi	r24, 0x22	; 34
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	22 e2       	ldi	r18, 0x22	; 34
     76e:	30 e0       	ldi	r19, 0x00	; 0
     770:	f9 01       	movw	r30, r18
     772:	20 81       	ld	r18, Z
     774:	26 60       	ori	r18, 0x06	; 6
     776:	fc 01       	movw	r30, r24
     778:	20 83       	st	Z, r18
     77a:	00 00       	nop
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	08 95       	ret

00000782 <left>:
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
     786:	cd b7       	in	r28, 0x3d	; 61
     788:	de b7       	in	r29, 0x3e	; 62
     78a:	82 e2       	ldi	r24, 0x22	; 34
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	22 e2       	ldi	r18, 0x22	; 34
     790:	30 e0       	ldi	r19, 0x00	; 0
     792:	f9 01       	movw	r30, r18
     794:	20 81       	ld	r18, Z
     796:	25 7f       	andi	r18, 0xF5	; 245
     798:	fc 01       	movw	r30, r24
     79a:	20 83       	st	Z, r18
     79c:	82 e2       	ldi	r24, 0x22	; 34
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	22 e2       	ldi	r18, 0x22	; 34
     7a2:	30 e0       	ldi	r19, 0x00	; 0
     7a4:	f9 01       	movw	r30, r18
     7a6:	20 81       	ld	r18, Z
     7a8:	25 60       	ori	r18, 0x05	; 5
     7aa:	fc 01       	movw	r30, r24
     7ac:	20 83       	st	Z, r18
     7ae:	00 00       	nop
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	08 95       	ret

000007b6 <right>:
     7b6:	cf 93       	push	r28
     7b8:	df 93       	push	r29
     7ba:	cd b7       	in	r28, 0x3d	; 61
     7bc:	de b7       	in	r29, 0x3e	; 62
     7be:	82 e2       	ldi	r24, 0x22	; 34
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	22 e2       	ldi	r18, 0x22	; 34
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	f9 01       	movw	r30, r18
     7c8:	20 81       	ld	r18, Z
     7ca:	2a 7f       	andi	r18, 0xFA	; 250
     7cc:	fc 01       	movw	r30, r24
     7ce:	20 83       	st	Z, r18
     7d0:	82 e2       	ldi	r24, 0x22	; 34
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	22 e2       	ldi	r18, 0x22	; 34
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	f9 01       	movw	r30, r18
     7da:	20 81       	ld	r18, Z
     7dc:	2a 60       	ori	r18, 0x0A	; 10
     7de:	fc 01       	movw	r30, r24
     7e0:	20 83       	st	Z, r18
     7e2:	00 00       	nop
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	08 95       	ret

000007ea <stop>:
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	cd b7       	in	r28, 0x3d	; 61
     7f0:	de b7       	in	r29, 0x3e	; 62
     7f2:	82 e2       	ldi	r24, 0x22	; 34
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	22 e2       	ldi	r18, 0x22	; 34
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	f9 01       	movw	r30, r18
     7fc:	20 81       	ld	r18, Z
     7fe:	20 7f       	andi	r18, 0xF0	; 240
     800:	fc 01       	movw	r30, r24
     802:	20 83       	st	Z, r18
     804:	00 00       	nop
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	08 95       	ret

0000080c <angle_rotate>:
     80c:	cf 93       	push	r28
     80e:	df 93       	push	r29
     810:	cd b7       	in	r28, 0x3d	; 61
     812:	de b7       	in	r29, 0x3e	; 62
     814:	2a 97       	sbiw	r28, 0x0a	; 10
     816:	0f b6       	in	r0, 0x3f	; 63
     818:	f8 94       	cli
     81a:	de bf       	out	0x3e, r29	; 62
     81c:	0f be       	out	0x3f, r0	; 63
     81e:	cd bf       	out	0x3d, r28	; 61
     820:	9a 87       	std	Y+10, r25	; 0x0a
     822:	89 87       	std	Y+9, r24	; 0x09
     824:	19 82       	std	Y+1, r1	; 0x01
     826:	1a 82       	std	Y+2, r1	; 0x02
     828:	1b 82       	std	Y+3, r1	; 0x03
     82a:	1c 82       	std	Y+4, r1	; 0x04
     82c:	1d 82       	std	Y+5, r1	; 0x05
     82e:	1e 82       	std	Y+6, r1	; 0x06
     830:	1f 82       	std	Y+7, r1	; 0x07
     832:	18 86       	std	Y+8, r1	; 0x08
     834:	89 85       	ldd	r24, Y+9	; 0x09
     836:	9a 85       	ldd	r25, Y+10	; 0x0a
     838:	cc 01       	movw	r24, r24
     83a:	a0 e0       	ldi	r26, 0x00	; 0
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	bc 01       	movw	r22, r24
     840:	cd 01       	movw	r24, r26
     842:	0e 94 26 11 	call	0x224c	; 0x224c <__floatunsisf>
     846:	dc 01       	movw	r26, r24
     848:	cb 01       	movw	r24, r22
     84a:	28 e4       	ldi	r18, 0x48	; 72
     84c:	31 ee       	ldi	r19, 0xE1	; 225
     84e:	42 e8       	ldi	r20, 0x82	; 130
     850:	50 e4       	ldi	r21, 0x40	; 64
     852:	bc 01       	movw	r22, r24
     854:	cd 01       	movw	r24, r26
     856:	0e 94 92 10 	call	0x2124	; 0x2124 <__divsf3>
     85a:	dc 01       	movw	r26, r24
     85c:	cb 01       	movw	r24, r22
     85e:	89 83       	std	Y+1, r24	; 0x01
     860:	9a 83       	std	Y+2, r25	; 0x02
     862:	ab 83       	std	Y+3, r26	; 0x03
     864:	bc 83       	std	Y+4, r27	; 0x04
     866:	69 81       	ldd	r22, Y+1	; 0x01
     868:	7a 81       	ldd	r23, Y+2	; 0x02
     86a:	8b 81       	ldd	r24, Y+3	; 0x03
     86c:	9c 81       	ldd	r25, Y+4	; 0x04
     86e:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
     872:	dc 01       	movw	r26, r24
     874:	cb 01       	movw	r24, r22
     876:	cc 01       	movw	r24, r24
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	8d 83       	std	Y+5, r24	; 0x05
     87e:	9e 83       	std	Y+6, r25	; 0x06
     880:	af 83       	std	Y+7, r26	; 0x07
     882:	b8 87       	std	Y+8, r27	; 0x08
     884:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <ShaftCountRight>
     888:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <ShaftCountRight+0x1>
     88c:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <ShaftCountRight+0x2>
     890:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <ShaftCountRight+0x3>
     894:	10 92 10 02 	sts	0x0210, r1	; 0x800210 <__data_end>
     898:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <__data_end+0x1>
     89c:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <__data_end+0x2>
     8a0:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <__data_end+0x3>
     8a4:	20 91 14 02 	lds	r18, 0x0214	; 0x800214 <ShaftCountRight>
     8a8:	30 91 15 02 	lds	r19, 0x0215	; 0x800215 <ShaftCountRight+0x1>
     8ac:	40 91 16 02 	lds	r20, 0x0216	; 0x800216 <ShaftCountRight+0x2>
     8b0:	50 91 17 02 	lds	r21, 0x0217	; 0x800217 <ShaftCountRight+0x3>
     8b4:	8d 81       	ldd	r24, Y+5	; 0x05
     8b6:	9e 81       	ldd	r25, Y+6	; 0x06
     8b8:	af 81       	ldd	r26, Y+7	; 0x07
     8ba:	b8 85       	ldd	r27, Y+8	; 0x08
     8bc:	28 17       	cp	r18, r24
     8be:	39 07       	cpc	r19, r25
     8c0:	4a 07       	cpc	r20, r26
     8c2:	5b 07       	cpc	r21, r27
     8c4:	90 f4       	brcc	.+36     	; 0x8ea <angle_rotate+0xde>
     8c6:	20 91 10 02 	lds	r18, 0x0210	; 0x800210 <__data_end>
     8ca:	30 91 11 02 	lds	r19, 0x0211	; 0x800211 <__data_end+0x1>
     8ce:	40 91 12 02 	lds	r20, 0x0212	; 0x800212 <__data_end+0x2>
     8d2:	50 91 13 02 	lds	r21, 0x0213	; 0x800213 <__data_end+0x3>
     8d6:	8d 81       	ldd	r24, Y+5	; 0x05
     8d8:	9e 81       	ldd	r25, Y+6	; 0x06
     8da:	af 81       	ldd	r26, Y+7	; 0x07
     8dc:	b8 85       	ldd	r27, Y+8	; 0x08
     8de:	28 17       	cp	r18, r24
     8e0:	39 07       	cpc	r19, r25
     8e2:	4a 07       	cpc	r20, r26
     8e4:	5b 07       	cpc	r21, r27
     8e6:	08 f4       	brcc	.+2      	; 0x8ea <angle_rotate+0xde>
     8e8:	dd cf       	rjmp	.-70     	; 0x8a4 <angle_rotate+0x98>
     8ea:	7f df       	rcall	.-258    	; 0x7ea <stop>
     8ec:	00 00       	nop
     8ee:	2a 96       	adiw	r28, 0x0a	; 10
     8f0:	0f b6       	in	r0, 0x3f	; 63
     8f2:	f8 94       	cli
     8f4:	de bf       	out	0x3e, r29	; 62
     8f6:	0f be       	out	0x3f, r0	; 63
     8f8:	cd bf       	out	0x3d, r28	; 61
     8fa:	df 91       	pop	r29
     8fc:	cf 91       	pop	r28
     8fe:	08 95       	ret

00000900 <linear_distance_mm>:
     900:	cf 93       	push	r28
     902:	df 93       	push	r29
     904:	cd b7       	in	r28, 0x3d	; 61
     906:	de b7       	in	r29, 0x3e	; 62
     908:	2a 97       	sbiw	r28, 0x0a	; 10
     90a:	0f b6       	in	r0, 0x3f	; 63
     90c:	f8 94       	cli
     90e:	de bf       	out	0x3e, r29	; 62
     910:	0f be       	out	0x3f, r0	; 63
     912:	cd bf       	out	0x3d, r28	; 61
     914:	9a 87       	std	Y+10, r25	; 0x0a
     916:	89 87       	std	Y+9, r24	; 0x09
     918:	19 82       	std	Y+1, r1	; 0x01
     91a:	1a 82       	std	Y+2, r1	; 0x02
     91c:	1b 82       	std	Y+3, r1	; 0x03
     91e:	1c 82       	std	Y+4, r1	; 0x04
     920:	1d 82       	std	Y+5, r1	; 0x05
     922:	1e 82       	std	Y+6, r1	; 0x06
     924:	1f 82       	std	Y+7, r1	; 0x07
     926:	18 86       	std	Y+8, r1	; 0x08
     928:	89 85       	ldd	r24, Y+9	; 0x09
     92a:	9a 85       	ldd	r25, Y+10	; 0x0a
     92c:	cc 01       	movw	r24, r24
     92e:	a0 e0       	ldi	r26, 0x00	; 0
     930:	b0 e0       	ldi	r27, 0x00	; 0
     932:	bc 01       	movw	r22, r24
     934:	cd 01       	movw	r24, r26
     936:	0e 94 26 11 	call	0x224c	; 0x224c <__floatunsisf>
     93a:	dc 01       	movw	r26, r24
     93c:	cb 01       	movw	r24, r22
     93e:	25 ee       	ldi	r18, 0xE5	; 229
     940:	30 ed       	ldi	r19, 0xD0	; 208
     942:	4a ea       	ldi	r20, 0xAA	; 170
     944:	50 e4       	ldi	r21, 0x40	; 64
     946:	bc 01       	movw	r22, r24
     948:	cd 01       	movw	r24, r26
     94a:	0e 94 92 10 	call	0x2124	; 0x2124 <__divsf3>
     94e:	dc 01       	movw	r26, r24
     950:	cb 01       	movw	r24, r22
     952:	89 83       	std	Y+1, r24	; 0x01
     954:	9a 83       	std	Y+2, r25	; 0x02
     956:	ab 83       	std	Y+3, r26	; 0x03
     958:	bc 83       	std	Y+4, r27	; 0x04
     95a:	69 81       	ldd	r22, Y+1	; 0x01
     95c:	7a 81       	ldd	r23, Y+2	; 0x02
     95e:	8b 81       	ldd	r24, Y+3	; 0x03
     960:	9c 81       	ldd	r25, Y+4	; 0x04
     962:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
     966:	dc 01       	movw	r26, r24
     968:	cb 01       	movw	r24, r22
     96a:	8d 83       	std	Y+5, r24	; 0x05
     96c:	9e 83       	std	Y+6, r25	; 0x06
     96e:	af 83       	std	Y+7, r26	; 0x07
     970:	b8 87       	std	Y+8, r27	; 0x08
     972:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <ShaftCountRight>
     976:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <ShaftCountRight+0x1>
     97a:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <ShaftCountRight+0x2>
     97e:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <ShaftCountRight+0x3>
     982:	10 92 10 02 	sts	0x0210, r1	; 0x800210 <__data_end>
     986:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <__data_end+0x1>
     98a:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <__data_end+0x2>
     98e:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <__data_end+0x3>
     992:	20 91 14 02 	lds	r18, 0x0214	; 0x800214 <ShaftCountRight>
     996:	30 91 15 02 	lds	r19, 0x0215	; 0x800215 <ShaftCountRight+0x1>
     99a:	40 91 16 02 	lds	r20, 0x0216	; 0x800216 <ShaftCountRight+0x2>
     99e:	50 91 17 02 	lds	r21, 0x0217	; 0x800217 <ShaftCountRight+0x3>
     9a2:	8d 81       	ldd	r24, Y+5	; 0x05
     9a4:	9e 81       	ldd	r25, Y+6	; 0x06
     9a6:	af 81       	ldd	r26, Y+7	; 0x07
     9a8:	b8 85       	ldd	r27, Y+8	; 0x08
     9aa:	28 17       	cp	r18, r24
     9ac:	39 07       	cpc	r19, r25
     9ae:	4a 07       	cpc	r20, r26
     9b0:	5b 07       	cpc	r21, r27
     9b2:	90 f4       	brcc	.+36     	; 0x9d8 <linear_distance_mm+0xd8>
     9b4:	20 91 10 02 	lds	r18, 0x0210	; 0x800210 <__data_end>
     9b8:	30 91 11 02 	lds	r19, 0x0211	; 0x800211 <__data_end+0x1>
     9bc:	40 91 12 02 	lds	r20, 0x0212	; 0x800212 <__data_end+0x2>
     9c0:	50 91 13 02 	lds	r21, 0x0213	; 0x800213 <__data_end+0x3>
     9c4:	8d 81       	ldd	r24, Y+5	; 0x05
     9c6:	9e 81       	ldd	r25, Y+6	; 0x06
     9c8:	af 81       	ldd	r26, Y+7	; 0x07
     9ca:	b8 85       	ldd	r27, Y+8	; 0x08
     9cc:	28 17       	cp	r18, r24
     9ce:	39 07       	cpc	r19, r25
     9d0:	4a 07       	cpc	r20, r26
     9d2:	5b 07       	cpc	r21, r27
     9d4:	08 f4       	brcc	.+2      	; 0x9d8 <linear_distance_mm+0xd8>
     9d6:	dd cf       	rjmp	.-70     	; 0x992 <linear_distance_mm+0x92>
     9d8:	08 df       	rcall	.-496    	; 0x7ea <stop>
     9da:	00 00       	nop
     9dc:	2a 96       	adiw	r28, 0x0a	; 10
     9de:	0f b6       	in	r0, 0x3f	; 63
     9e0:	f8 94       	cli
     9e2:	de bf       	out	0x3e, r29	; 62
     9e4:	0f be       	out	0x3f, r0	; 63
     9e6:	cd bf       	out	0x3d, r28	; 61
     9e8:	df 91       	pop	r29
     9ea:	cf 91       	pop	r28
     9ec:	08 95       	ret

000009ee <__vector_6>:
     9ee:	1f 92       	push	r1
     9f0:	0f 92       	push	r0
     9f2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     9f6:	0f 92       	push	r0
     9f8:	11 24       	eor	r1, r1
     9fa:	8f 93       	push	r24
     9fc:	9f 93       	push	r25
     9fe:	af 93       	push	r26
     a00:	bf 93       	push	r27
     a02:	cf 93       	push	r28
     a04:	df 93       	push	r29
     a06:	cd b7       	in	r28, 0x3d	; 61
     a08:	de b7       	in	r29, 0x3e	; 62
     a0a:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <ShaftCountRight>
     a0e:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <ShaftCountRight+0x1>
     a12:	a0 91 16 02 	lds	r26, 0x0216	; 0x800216 <ShaftCountRight+0x2>
     a16:	b0 91 17 02 	lds	r27, 0x0217	; 0x800217 <ShaftCountRight+0x3>
     a1a:	01 96       	adiw	r24, 0x01	; 1
     a1c:	a1 1d       	adc	r26, r1
     a1e:	b1 1d       	adc	r27, r1
     a20:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <ShaftCountRight>
     a24:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <ShaftCountRight+0x1>
     a28:	a0 93 16 02 	sts	0x0216, r26	; 0x800216 <ShaftCountRight+0x2>
     a2c:	b0 93 17 02 	sts	0x0217, r27	; 0x800217 <ShaftCountRight+0x3>
     a30:	00 00       	nop
     a32:	df 91       	pop	r29
     a34:	cf 91       	pop	r28
     a36:	bf 91       	pop	r27
     a38:	af 91       	pop	r26
     a3a:	9f 91       	pop	r25
     a3c:	8f 91       	pop	r24
     a3e:	0f 90       	pop	r0
     a40:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     a44:	0f 90       	pop	r0
     a46:	1f 90       	pop	r1
     a48:	18 95       	reti

00000a4a <__vector_5>:
     a4a:	1f 92       	push	r1
     a4c:	0f 92       	push	r0
     a4e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     a52:	0f 92       	push	r0
     a54:	11 24       	eor	r1, r1
     a56:	8f 93       	push	r24
     a58:	9f 93       	push	r25
     a5a:	af 93       	push	r26
     a5c:	bf 93       	push	r27
     a5e:	cf 93       	push	r28
     a60:	df 93       	push	r29
     a62:	cd b7       	in	r28, 0x3d	; 61
     a64:	de b7       	in	r29, 0x3e	; 62
     a66:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <__data_end>
     a6a:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <__data_end+0x1>
     a6e:	a0 91 12 02 	lds	r26, 0x0212	; 0x800212 <__data_end+0x2>
     a72:	b0 91 13 02 	lds	r27, 0x0213	; 0x800213 <__data_end+0x3>
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	a1 1d       	adc	r26, r1
     a7a:	b1 1d       	adc	r27, r1
     a7c:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <__data_end>
     a80:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <__data_end+0x1>
     a84:	a0 93 12 02 	sts	0x0212, r26	; 0x800212 <__data_end+0x2>
     a88:	b0 93 13 02 	sts	0x0213, r27	; 0x800213 <__data_end+0x3>
     a8c:	00 00       	nop
     a8e:	df 91       	pop	r29
     a90:	cf 91       	pop	r28
     a92:	bf 91       	pop	r27
     a94:	af 91       	pop	r26
     a96:	9f 91       	pop	r25
     a98:	8f 91       	pop	r24
     a9a:	0f 90       	pop	r0
     a9c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     aa0:	0f 90       	pop	r0
     aa2:	1f 90       	pop	r1
     aa4:	18 95       	reti

00000aa6 <forward_mm>:
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	1f 92       	push	r1
     aac:	1f 92       	push	r1
     aae:	cd b7       	in	r28, 0x3d	; 61
     ab0:	de b7       	in	r29, 0x3e	; 62
     ab2:	9a 83       	std	Y+2, r25	; 0x02
     ab4:	89 83       	std	Y+1, r24	; 0x01
     ab6:	64 ed       	ldi	r22, 0xD4	; 212
     ab8:	88 ec       	ldi	r24, 0xC8	; 200
     aba:	0c de       	rcall	.-1000   	; 0x6d4 <velocity>
     abc:	48 de       	rcall	.-880    	; 0x74e <forward>
     abe:	89 81       	ldd	r24, Y+1	; 0x01
     ac0:	9a 81       	ldd	r25, Y+2	; 0x02
     ac2:	1e df       	rcall	.-452    	; 0x900 <linear_distance_mm>
     ac4:	00 00       	nop
     ac6:	0f 90       	pop	r0
     ac8:	0f 90       	pop	r0
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	08 95       	ret

00000ad0 <left_degrees>:
/**
 * @brief      Function to rotate Firebird-V left by specified degrees
 * @param[in]  Degrees   Rotation angle 0 to 360
 */
void left_degrees(unsigned int Degrees) 
{
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	1f 92       	push	r1
     ad6:	1f 92       	push	r1
     ad8:	cd b7       	in	r28, 0x3d	; 61
     ada:	de b7       	in	r29, 0x3e	; 62
     adc:	9a 83       	std	Y+2, r25	; 0x02
     ade:	89 83       	std	Y+1, r24	; 0x01
	 // 88 pulses for 360 degrees rotation 4.090 degrees per count
	 velocity(200,212);
     ae0:	64 ed       	ldi	r22, 0xD4	; 212
     ae2:	88 ec       	ldi	r24, 0xC8	; 200
     ae4:	f7 dd       	rcall	.-1042   	; 0x6d4 <velocity>
	 left(); //Turn left
     ae6:	4d de       	rcall	.-870    	; 0x782 <left>
     ae8:	89 81       	ldd	r24, Y+1	; 0x01
	 angle_rotate(Degrees);
     aea:	9a 81       	ldd	r25, Y+2	; 0x02
     aec:	8f de       	rcall	.-738    	; 0x80c <angle_rotate>
     aee:	00 00       	nop
}
     af0:	0f 90       	pop	r0
     af2:	0f 90       	pop	r0
     af4:	df 91       	pop	r29
     af6:	cf 91       	pop	r28
     af8:	08 95       	ret

00000afa <right_degrees>:
     afa:	cf 93       	push	r28
/**
 * @brief      Function to rotate Firebird-V right by specified degrees
 * @param[in]  Degrees   Rotation angle 0 to 360
 */
void right_degrees(unsigned int Degrees)
{
     afc:	df 93       	push	r29
     afe:	1f 92       	push	r1
     b00:	1f 92       	push	r1
     b02:	cd b7       	in	r28, 0x3d	; 61
     b04:	de b7       	in	r29, 0x3e	; 62
     b06:	9a 83       	std	Y+2, r25	; 0x02
     b08:	89 83       	std	Y+1, r24	; 0x01
	 // 88 pulses for 360 degrees rotation 4.090 degrees per count
	 velocity(200,212);
     b0a:	64 ed       	ldi	r22, 0xD4	; 212
     b0c:	88 ec       	ldi	r24, 0xC8	; 200
     b0e:	e2 dd       	rcall	.-1084   	; 0x6d4 <velocity>
	 right(); //Turn right
     b10:	52 de       	rcall	.-860    	; 0x7b6 <right>
     b12:	89 81       	ldd	r24, Y+1	; 0x01
	 angle_rotate(Degrees);
     b14:	9a 81       	ldd	r25, Y+2	; 0x02
     b16:	7a de       	rcall	.-780    	; 0x80c <angle_rotate>
     b18:	00 00       	nop
}
     b1a:	0f 90       	pop	r0
     b1c:	0f 90       	pop	r0
     b1e:	df 91       	pop	r29
     b20:	cf 91       	pop	r28
     b22:	08 95       	ret

00000b24 <buzzer_init>:
     b24:	cf 93       	push	r28


void buzzer_init()
{
     b26:	df 93       	push	r29
     b28:	cd b7       	in	r28, 0x3d	; 61
     b2a:	de b7       	in	r29, 0x3e	; 62
	buzzer_ddr_reg |= (1<<buzzer_pin);
     b2c:	87 e2       	ldi	r24, 0x27	; 39
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	27 e2       	ldi	r18, 0x27	; 39
     b32:	30 e0       	ldi	r19, 0x00	; 0
     b34:	f9 01       	movw	r30, r18
     b36:	20 81       	ld	r18, Z
     b38:	28 60       	ori	r18, 0x08	; 8
     b3a:	fc 01       	movw	r30, r24
     b3c:	20 83       	st	Z, r18
	buzzer_port_reg &=~(1<<buzzer_pin);
     b3e:	88 e2       	ldi	r24, 0x28	; 40
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	28 e2       	ldi	r18, 0x28	; 40
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	f9 01       	movw	r30, r18
     b48:	20 81       	ld	r18, Z
     b4a:	27 7f       	andi	r18, 0xF7	; 247
     b4c:	fc 01       	movw	r30, r24
     b4e:	20 83       	st	Z, r18
}
     b50:	00 00       	nop
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	08 95       	ret

00000b58 <buzzer_on>:

void buzzer_on()
{
     b58:	cf 93       	push	r28
     b5a:	df 93       	push	r29
     b5c:	cd b7       	in	r28, 0x3d	; 61
     b5e:	de b7       	in	r29, 0x3e	; 62
	buzzer_port_reg |=(1<<buzzer_pin);
     b60:	88 e2       	ldi	r24, 0x28	; 40
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	28 e2       	ldi	r18, 0x28	; 40
     b66:	30 e0       	ldi	r19, 0x00	; 0
     b68:	f9 01       	movw	r30, r18
     b6a:	20 81       	ld	r18, Z
     b6c:	28 60       	ori	r18, 0x08	; 8
     b6e:	fc 01       	movw	r30, r24
     b70:	20 83       	st	Z, r18
}
     b72:	00 00       	nop
     b74:	df 91       	pop	r29
     b76:	cf 91       	pop	r28
     b78:	08 95       	ret

00000b7a <buzzer_off>:

void buzzer_off()
{
     b7a:	cf 93       	push	r28
     b7c:	df 93       	push	r29
     b7e:	cd b7       	in	r28, 0x3d	; 61
     b80:	de b7       	in	r29, 0x3e	; 62
	buzzer_port_reg &=~(1<<buzzer_pin);
     b82:	88 e2       	ldi	r24, 0x28	; 40
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	28 e2       	ldi	r18, 0x28	; 40
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	f9 01       	movw	r30, r18
     b8c:	20 81       	ld	r18, Z
     b8e:	27 7f       	andi	r18, 0xF7	; 247
     b90:	fc 01       	movw	r30, r24
     b92:	20 83       	st	Z, r18
}
     b94:	00 00       	nop
     b96:	df 91       	pop	r29
     b98:	cf 91       	pop	r28
     b9a:	08 95       	ret

00000b9c <lcd_port_config>:
 * Example Call: lcd_clear();
 */
void lcd_clear (void)
{
	lcd_wr_command(0x01);
}
     b9c:	cf 93       	push	r28
     b9e:	df 93       	push	r29
     ba0:	cd b7       	in	r28, 0x3d	; 61
     ba2:	de b7       	in	r29, 0x3e	; 62
     ba4:	87 e2       	ldi	r24, 0x27	; 39
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	27 e2       	ldi	r18, 0x27	; 39
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	f9 01       	movw	r30, r18
     bae:	20 81       	ld	r18, Z
     bb0:	27 60       	ori	r18, 0x07	; 7
     bb2:	fc 01       	movw	r30, r24
     bb4:	20 83       	st	Z, r18
     bb6:	87 e2       	ldi	r24, 0x27	; 39
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	27 e2       	ldi	r18, 0x27	; 39
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	f9 01       	movw	r30, r18
     bc0:	20 81       	ld	r18, Z
     bc2:	20 6f       	ori	r18, 0xF0	; 240
     bc4:	fc 01       	movw	r30, r24
     bc6:	20 83       	st	Z, r18
     bc8:	88 e2       	ldi	r24, 0x28	; 40
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	28 e2       	ldi	r18, 0x28	; 40
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	f9 01       	movw	r30, r18
     bd2:	20 81       	ld	r18, Z
     bd4:	28 7f       	andi	r18, 0xF8	; 248
     bd6:	fc 01       	movw	r30, r24
     bd8:	20 83       	st	Z, r18
     bda:	88 e2       	ldi	r24, 0x28	; 40
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	28 e2       	ldi	r18, 0x28	; 40
     be0:	30 e0       	ldi	r19, 0x00	; 0
     be2:	f9 01       	movw	r30, r18
     be4:	20 81       	ld	r18, Z
     be6:	2f 70       	andi	r18, 0x0F	; 15
     be8:	fc 01       	movw	r30, r24
     bea:	20 83       	st	Z, r18
     bec:	00 00       	nop
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	08 95       	ret

00000bf4 <lcd_set_4bit>:
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	cd b7       	in	r28, 0x3d	; 61
     bfe:	de b7       	in	r29, 0x3e	; 62
     c00:	c0 57       	subi	r28, 0x70	; 112
     c02:	d1 09       	sbc	r29, r1
     c04:	0f b6       	in	r0, 0x3f	; 63
     c06:	f8 94       	cli
     c08:	de bf       	out	0x3e, r29	; 62
     c0a:	0f be       	out	0x3f, r0	; 63
     c0c:	cd bf       	out	0x3d, r28	; 61
     c0e:	80 e0       	ldi	r24, 0x00	; 0
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	a0 e8       	ldi	r26, 0x80	; 128
     c14:	bf e3       	ldi	r27, 0x3F	; 63
     c16:	89 83       	std	Y+1, r24	; 0x01
     c18:	9a 83       	std	Y+2, r25	; 0x02
     c1a:	ab 83       	std	Y+3, r26	; 0x03
     c1c:	bc 83       	std	Y+4, r27	; 0x04
     c1e:	8e 01       	movw	r16, r28
     c20:	09 59       	subi	r16, 0x99	; 153
     c22:	1f 4f       	sbci	r17, 0xFF	; 255
     c24:	26 e6       	ldi	r18, 0x66	; 102
     c26:	36 e6       	ldi	r19, 0x66	; 102
     c28:	46 e6       	ldi	r20, 0x66	; 102
     c2a:	55 e4       	ldi	r21, 0x45	; 69
     c2c:	69 81       	ldd	r22, Y+1	; 0x01
     c2e:	7a 81       	ldd	r23, Y+2	; 0x02
     c30:	8b 81       	ldd	r24, Y+3	; 0x03
     c32:	9c 81       	ldd	r25, Y+4	; 0x04
     c34:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
     c38:	dc 01       	movw	r26, r24
     c3a:	cb 01       	movw	r24, r22
     c3c:	f8 01       	movw	r30, r16
     c3e:	80 83       	st	Z, r24
     c40:	91 83       	std	Z+1, r25	; 0x01
     c42:	a2 83       	std	Z+2, r26	; 0x02
     c44:	b3 83       	std	Z+3, r27	; 0x03
     c46:	ce 01       	movw	r24, r28
     c48:	89 59       	subi	r24, 0x99	; 153
     c4a:	9f 4f       	sbci	r25, 0xFF	; 255
     c4c:	20 e0       	ldi	r18, 0x00	; 0
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	40 e8       	ldi	r20, 0x80	; 128
     c52:	5f e3       	ldi	r21, 0x3F	; 63
     c54:	fc 01       	movw	r30, r24
     c56:	60 81       	ld	r22, Z
     c58:	71 81       	ldd	r23, Z+1	; 0x01
     c5a:	82 81       	ldd	r24, Z+2	; 0x02
     c5c:	93 81       	ldd	r25, Z+3	; 0x03
     c5e:	0e 94 8e 10 	call	0x211c	; 0x211c <__cmpsf2>
     c62:	88 23       	and	r24, r24
     c64:	4c f4       	brge	.+18     	; 0xc78 <lcd_set_4bit+0x84>
     c66:	ce 01       	movw	r24, r28
     c68:	85 59       	subi	r24, 0x95	; 149
     c6a:	9f 4f       	sbci	r25, 0xFF	; 255
     c6c:	21 e0       	ldi	r18, 0x01	; 1
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	fc 01       	movw	r30, r24
     c72:	31 83       	std	Z+1, r19	; 0x01
     c74:	20 83       	st	Z, r18
     c76:	69 c0       	rjmp	.+210    	; 0xd4a <lcd_set_4bit+0x156>
     c78:	ce 01       	movw	r24, r28
     c7a:	89 59       	subi	r24, 0x99	; 153
     c7c:	9f 4f       	sbci	r25, 0xFF	; 255
     c7e:	20 e0       	ldi	r18, 0x00	; 0
     c80:	3f ef       	ldi	r19, 0xFF	; 255
     c82:	4f e7       	ldi	r20, 0x7F	; 127
     c84:	57 e4       	ldi	r21, 0x47	; 71
     c86:	fc 01       	movw	r30, r24
     c88:	60 81       	ld	r22, Z
     c8a:	71 81       	ldd	r23, Z+1	; 0x01
     c8c:	82 81       	ldd	r24, Z+2	; 0x02
     c8e:	93 81       	ldd	r25, Z+3	; 0x03
     c90:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <__gesf2>
     c94:	18 16       	cp	r1, r24
     c96:	0c f0       	brlt	.+2      	; 0xc9a <lcd_set_4bit+0xa6>
     c98:	46 c0       	rjmp	.+140    	; 0xd26 <lcd_set_4bit+0x132>
     c9a:	20 e0       	ldi	r18, 0x00	; 0
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	40 e2       	ldi	r20, 0x20	; 32
     ca0:	51 e4       	ldi	r21, 0x41	; 65
     ca2:	69 81       	ldd	r22, Y+1	; 0x01
     ca4:	7a 81       	ldd	r23, Y+2	; 0x02
     ca6:	8b 81       	ldd	r24, Y+3	; 0x03
     ca8:	9c 81       	ldd	r25, Y+4	; 0x04
     caa:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
     cae:	dc 01       	movw	r26, r24
     cb0:	cb 01       	movw	r24, r22
     cb2:	8e 01       	movw	r16, r28
     cb4:	05 59       	subi	r16, 0x95	; 149
     cb6:	1f 4f       	sbci	r17, 0xFF	; 255
     cb8:	bc 01       	movw	r22, r24
     cba:	cd 01       	movw	r24, r26
     cbc:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
     cc0:	dc 01       	movw	r26, r24
     cc2:	cb 01       	movw	r24, r22
     cc4:	f8 01       	movw	r30, r16
     cc6:	91 83       	std	Z+1, r25	; 0x01
     cc8:	80 83       	st	Z, r24
     cca:	24 c0       	rjmp	.+72     	; 0xd14 <lcd_set_4bit+0x120>
     ccc:	ce 01       	movw	r24, r28
     cce:	83 59       	subi	r24, 0x93	; 147
     cd0:	9f 4f       	sbci	r25, 0xFF	; 255
     cd2:	20 e7       	ldi	r18, 0x70	; 112
     cd4:	31 e0       	ldi	r19, 0x01	; 1
     cd6:	fc 01       	movw	r30, r24
     cd8:	31 83       	std	Z+1, r19	; 0x01
     cda:	20 83       	st	Z, r18
     cdc:	ce 01       	movw	r24, r28
     cde:	83 59       	subi	r24, 0x93	; 147
     ce0:	9f 4f       	sbci	r25, 0xFF	; 255
     ce2:	fc 01       	movw	r30, r24
     ce4:	80 81       	ld	r24, Z
     ce6:	91 81       	ldd	r25, Z+1	; 0x01
     ce8:	01 97       	sbiw	r24, 0x01	; 1
     cea:	f1 f7       	brne	.-4      	; 0xce8 <lcd_set_4bit+0xf4>
     cec:	9e 01       	movw	r18, r28
     cee:	23 59       	subi	r18, 0x93	; 147
     cf0:	3f 4f       	sbci	r19, 0xFF	; 255
     cf2:	f9 01       	movw	r30, r18
     cf4:	91 83       	std	Z+1, r25	; 0x01
     cf6:	80 83       	st	Z, r24
     cf8:	ce 01       	movw	r24, r28
     cfa:	85 59       	subi	r24, 0x95	; 149
     cfc:	9f 4f       	sbci	r25, 0xFF	; 255
     cfe:	9e 01       	movw	r18, r28
     d00:	25 59       	subi	r18, 0x95	; 149
     d02:	3f 4f       	sbci	r19, 0xFF	; 255
     d04:	f9 01       	movw	r30, r18
     d06:	20 81       	ld	r18, Z
     d08:	31 81       	ldd	r19, Z+1	; 0x01
     d0a:	21 50       	subi	r18, 0x01	; 1
     d0c:	31 09       	sbc	r19, r1
     d0e:	fc 01       	movw	r30, r24
     d10:	31 83       	std	Z+1, r19	; 0x01
     d12:	20 83       	st	Z, r18
     d14:	ce 01       	movw	r24, r28
     d16:	85 59       	subi	r24, 0x95	; 149
     d18:	9f 4f       	sbci	r25, 0xFF	; 255
     d1a:	fc 01       	movw	r30, r24
     d1c:	80 81       	ld	r24, Z
     d1e:	91 81       	ldd	r25, Z+1	; 0x01
     d20:	89 2b       	or	r24, r25
     d22:	a1 f6       	brne	.-88     	; 0xccc <lcd_set_4bit+0xd8>
     d24:	2c c0       	rjmp	.+88     	; 0xd7e <lcd_set_4bit+0x18a>
     d26:	8e 01       	movw	r16, r28
     d28:	05 59       	subi	r16, 0x95	; 149
     d2a:	1f 4f       	sbci	r17, 0xFF	; 255
     d2c:	ce 01       	movw	r24, r28
     d2e:	89 59       	subi	r24, 0x99	; 153
     d30:	9f 4f       	sbci	r25, 0xFF	; 255
     d32:	fc 01       	movw	r30, r24
     d34:	60 81       	ld	r22, Z
     d36:	71 81       	ldd	r23, Z+1	; 0x01
     d38:	82 81       	ldd	r24, Z+2	; 0x02
     d3a:	93 81       	ldd	r25, Z+3	; 0x03
     d3c:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
     d40:	dc 01       	movw	r26, r24
     d42:	cb 01       	movw	r24, r22
     d44:	f8 01       	movw	r30, r16
     d46:	91 83       	std	Z+1, r25	; 0x01
     d48:	80 83       	st	Z, r24
     d4a:	ce 01       	movw	r24, r28
     d4c:	81 59       	subi	r24, 0x91	; 145
     d4e:	9f 4f       	sbci	r25, 0xFF	; 255
     d50:	9e 01       	movw	r18, r28
     d52:	25 59       	subi	r18, 0x95	; 149
     d54:	3f 4f       	sbci	r19, 0xFF	; 255
     d56:	f9 01       	movw	r30, r18
     d58:	20 81       	ld	r18, Z
     d5a:	31 81       	ldd	r19, Z+1	; 0x01
     d5c:	fc 01       	movw	r30, r24
     d5e:	31 83       	std	Z+1, r19	; 0x01
     d60:	20 83       	st	Z, r18
     d62:	ce 01       	movw	r24, r28
     d64:	81 59       	subi	r24, 0x91	; 145
     d66:	9f 4f       	sbci	r25, 0xFF	; 255
     d68:	fc 01       	movw	r30, r24
     d6a:	80 81       	ld	r24, Z
     d6c:	91 81       	ldd	r25, Z+1	; 0x01
     d6e:	01 97       	sbiw	r24, 0x01	; 1
     d70:	f1 f7       	brne	.-4      	; 0xd6e <lcd_set_4bit+0x17a>
     d72:	9e 01       	movw	r18, r28
     d74:	21 59       	subi	r18, 0x91	; 145
     d76:	3f 4f       	sbci	r19, 0xFF	; 255
     d78:	f9 01       	movw	r30, r18
     d7a:	91 83       	std	Z+1, r25	; 0x01
     d7c:	80 83       	st	Z, r24
     d7e:	88 e2       	ldi	r24, 0x28	; 40
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	28 e2       	ldi	r18, 0x28	; 40
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	f9 01       	movw	r30, r18
     d88:	20 81       	ld	r18, Z
     d8a:	2e 7f       	andi	r18, 0xFE	; 254
     d8c:	fc 01       	movw	r30, r24
     d8e:	20 83       	st	Z, r18
     d90:	88 e2       	ldi	r24, 0x28	; 40
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	28 e2       	ldi	r18, 0x28	; 40
     d96:	30 e0       	ldi	r19, 0x00	; 0
     d98:	f9 01       	movw	r30, r18
     d9a:	20 81       	ld	r18, Z
     d9c:	2d 7f       	andi	r18, 0xFD	; 253
     d9e:	fc 01       	movw	r30, r24
     da0:	20 83       	st	Z, r18
     da2:	88 e2       	ldi	r24, 0x28	; 40
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	20 e3       	ldi	r18, 0x30	; 48
     da8:	fc 01       	movw	r30, r24
     daa:	20 83       	st	Z, r18
     dac:	88 e2       	ldi	r24, 0x28	; 40
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	28 e2       	ldi	r18, 0x28	; 40
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	f9 01       	movw	r30, r18
     db6:	20 81       	ld	r18, Z
     db8:	24 60       	ori	r18, 0x04	; 4
     dba:	fc 01       	movw	r30, r24
     dbc:	20 83       	st	Z, r18
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	a0 ea       	ldi	r26, 0xA0	; 160
     dc4:	b0 e4       	ldi	r27, 0x40	; 64
     dc6:	8d 83       	std	Y+5, r24	; 0x05
     dc8:	9e 83       	std	Y+6, r25	; 0x06
     dca:	af 83       	std	Y+7, r26	; 0x07
     dcc:	b8 87       	std	Y+8, r27	; 0x08
     dce:	8e 01       	movw	r16, r28
     dd0:	03 5a       	subi	r16, 0xA3	; 163
     dd2:	1f 4f       	sbci	r17, 0xFF	; 255
     dd4:	26 e6       	ldi	r18, 0x66	; 102
     dd6:	36 e6       	ldi	r19, 0x66	; 102
     dd8:	46 e6       	ldi	r20, 0x66	; 102
     dda:	55 e4       	ldi	r21, 0x45	; 69
     ddc:	6d 81       	ldd	r22, Y+5	; 0x05
     dde:	7e 81       	ldd	r23, Y+6	; 0x06
     de0:	8f 81       	ldd	r24, Y+7	; 0x07
     de2:	98 85       	ldd	r25, Y+8	; 0x08
     de4:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
     de8:	dc 01       	movw	r26, r24
     dea:	cb 01       	movw	r24, r22
     dec:	f8 01       	movw	r30, r16
     dee:	80 83       	st	Z, r24
     df0:	91 83       	std	Z+1, r25	; 0x01
     df2:	a2 83       	std	Z+2, r26	; 0x02
     df4:	b3 83       	std	Z+3, r27	; 0x03
     df6:	ce 01       	movw	r24, r28
     df8:	83 5a       	subi	r24, 0xA3	; 163
     dfa:	9f 4f       	sbci	r25, 0xFF	; 255
     dfc:	20 e0       	ldi	r18, 0x00	; 0
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	40 e8       	ldi	r20, 0x80	; 128
     e02:	5f e3       	ldi	r21, 0x3F	; 63
     e04:	fc 01       	movw	r30, r24
     e06:	60 81       	ld	r22, Z
     e08:	71 81       	ldd	r23, Z+1	; 0x01
     e0a:	82 81       	ldd	r24, Z+2	; 0x02
     e0c:	93 81       	ldd	r25, Z+3	; 0x03
     e0e:	0e 94 8e 10 	call	0x211c	; 0x211c <__cmpsf2>
     e12:	88 23       	and	r24, r24
     e14:	4c f4       	brge	.+18     	; 0xe28 <lcd_set_4bit+0x234>
     e16:	ce 01       	movw	r24, r28
     e18:	8f 59       	subi	r24, 0x9F	; 159
     e1a:	9f 4f       	sbci	r25, 0xFF	; 255
     e1c:	21 e0       	ldi	r18, 0x01	; 1
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	fc 01       	movw	r30, r24
     e22:	31 83       	std	Z+1, r19	; 0x01
     e24:	20 83       	st	Z, r18
     e26:	69 c0       	rjmp	.+210    	; 0xefa <lcd_set_4bit+0x306>
     e28:	ce 01       	movw	r24, r28
     e2a:	83 5a       	subi	r24, 0xA3	; 163
     e2c:	9f 4f       	sbci	r25, 0xFF	; 255
     e2e:	20 e0       	ldi	r18, 0x00	; 0
     e30:	3f ef       	ldi	r19, 0xFF	; 255
     e32:	4f e7       	ldi	r20, 0x7F	; 127
     e34:	57 e4       	ldi	r21, 0x47	; 71
     e36:	fc 01       	movw	r30, r24
     e38:	60 81       	ld	r22, Z
     e3a:	71 81       	ldd	r23, Z+1	; 0x01
     e3c:	82 81       	ldd	r24, Z+2	; 0x02
     e3e:	93 81       	ldd	r25, Z+3	; 0x03
     e40:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <__gesf2>
     e44:	18 16       	cp	r1, r24
     e46:	0c f0       	brlt	.+2      	; 0xe4a <lcd_set_4bit+0x256>
     e48:	46 c0       	rjmp	.+140    	; 0xed6 <lcd_set_4bit+0x2e2>
     e4a:	20 e0       	ldi	r18, 0x00	; 0
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	40 e2       	ldi	r20, 0x20	; 32
     e50:	51 e4       	ldi	r21, 0x41	; 65
     e52:	6d 81       	ldd	r22, Y+5	; 0x05
     e54:	7e 81       	ldd	r23, Y+6	; 0x06
     e56:	8f 81       	ldd	r24, Y+7	; 0x07
     e58:	98 85       	ldd	r25, Y+8	; 0x08
     e5a:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
     e5e:	dc 01       	movw	r26, r24
     e60:	cb 01       	movw	r24, r22
     e62:	8e 01       	movw	r16, r28
     e64:	0f 59       	subi	r16, 0x9F	; 159
     e66:	1f 4f       	sbci	r17, 0xFF	; 255
     e68:	bc 01       	movw	r22, r24
     e6a:	cd 01       	movw	r24, r26
     e6c:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
     e70:	dc 01       	movw	r26, r24
     e72:	cb 01       	movw	r24, r22
     e74:	f8 01       	movw	r30, r16
     e76:	91 83       	std	Z+1, r25	; 0x01
     e78:	80 83       	st	Z, r24
     e7a:	24 c0       	rjmp	.+72     	; 0xec4 <lcd_set_4bit+0x2d0>
     e7c:	ce 01       	movw	r24, r28
     e7e:	8d 59       	subi	r24, 0x9D	; 157
     e80:	9f 4f       	sbci	r25, 0xFF	; 255
     e82:	20 e7       	ldi	r18, 0x70	; 112
     e84:	31 e0       	ldi	r19, 0x01	; 1
     e86:	fc 01       	movw	r30, r24
     e88:	31 83       	std	Z+1, r19	; 0x01
     e8a:	20 83       	st	Z, r18
     e8c:	ce 01       	movw	r24, r28
     e8e:	8d 59       	subi	r24, 0x9D	; 157
     e90:	9f 4f       	sbci	r25, 0xFF	; 255
     e92:	fc 01       	movw	r30, r24
     e94:	80 81       	ld	r24, Z
     e96:	91 81       	ldd	r25, Z+1	; 0x01
     e98:	01 97       	sbiw	r24, 0x01	; 1
     e9a:	f1 f7       	brne	.-4      	; 0xe98 <lcd_set_4bit+0x2a4>
     e9c:	9e 01       	movw	r18, r28
     e9e:	2d 59       	subi	r18, 0x9D	; 157
     ea0:	3f 4f       	sbci	r19, 0xFF	; 255
     ea2:	f9 01       	movw	r30, r18
     ea4:	91 83       	std	Z+1, r25	; 0x01
     ea6:	80 83       	st	Z, r24
     ea8:	ce 01       	movw	r24, r28
     eaa:	8f 59       	subi	r24, 0x9F	; 159
     eac:	9f 4f       	sbci	r25, 0xFF	; 255
     eae:	9e 01       	movw	r18, r28
     eb0:	2f 59       	subi	r18, 0x9F	; 159
     eb2:	3f 4f       	sbci	r19, 0xFF	; 255
     eb4:	f9 01       	movw	r30, r18
     eb6:	20 81       	ld	r18, Z
     eb8:	31 81       	ldd	r19, Z+1	; 0x01
     eba:	21 50       	subi	r18, 0x01	; 1
     ebc:	31 09       	sbc	r19, r1
     ebe:	fc 01       	movw	r30, r24
     ec0:	31 83       	std	Z+1, r19	; 0x01
     ec2:	20 83       	st	Z, r18
     ec4:	ce 01       	movw	r24, r28
     ec6:	8f 59       	subi	r24, 0x9F	; 159
     ec8:	9f 4f       	sbci	r25, 0xFF	; 255
     eca:	fc 01       	movw	r30, r24
     ecc:	80 81       	ld	r24, Z
     ece:	91 81       	ldd	r25, Z+1	; 0x01
     ed0:	89 2b       	or	r24, r25
     ed2:	a1 f6       	brne	.-88     	; 0xe7c <lcd_set_4bit+0x288>
     ed4:	2c c0       	rjmp	.+88     	; 0xf2e <lcd_set_4bit+0x33a>
     ed6:	8e 01       	movw	r16, r28
     ed8:	0f 59       	subi	r16, 0x9F	; 159
     eda:	1f 4f       	sbci	r17, 0xFF	; 255
     edc:	ce 01       	movw	r24, r28
     ede:	83 5a       	subi	r24, 0xA3	; 163
     ee0:	9f 4f       	sbci	r25, 0xFF	; 255
     ee2:	fc 01       	movw	r30, r24
     ee4:	60 81       	ld	r22, Z
     ee6:	71 81       	ldd	r23, Z+1	; 0x01
     ee8:	82 81       	ldd	r24, Z+2	; 0x02
     eea:	93 81       	ldd	r25, Z+3	; 0x03
     eec:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
     ef0:	dc 01       	movw	r26, r24
     ef2:	cb 01       	movw	r24, r22
     ef4:	f8 01       	movw	r30, r16
     ef6:	91 83       	std	Z+1, r25	; 0x01
     ef8:	80 83       	st	Z, r24
     efa:	ce 01       	movw	r24, r28
     efc:	8b 59       	subi	r24, 0x9B	; 155
     efe:	9f 4f       	sbci	r25, 0xFF	; 255
     f00:	9e 01       	movw	r18, r28
     f02:	2f 59       	subi	r18, 0x9F	; 159
     f04:	3f 4f       	sbci	r19, 0xFF	; 255
     f06:	f9 01       	movw	r30, r18
     f08:	20 81       	ld	r18, Z
     f0a:	31 81       	ldd	r19, Z+1	; 0x01
     f0c:	fc 01       	movw	r30, r24
     f0e:	31 83       	std	Z+1, r19	; 0x01
     f10:	20 83       	st	Z, r18
     f12:	ce 01       	movw	r24, r28
     f14:	8b 59       	subi	r24, 0x9B	; 155
     f16:	9f 4f       	sbci	r25, 0xFF	; 255
     f18:	fc 01       	movw	r30, r24
     f1a:	80 81       	ld	r24, Z
     f1c:	91 81       	ldd	r25, Z+1	; 0x01
     f1e:	01 97       	sbiw	r24, 0x01	; 1
     f20:	f1 f7       	brne	.-4      	; 0xf1e <lcd_set_4bit+0x32a>
     f22:	9e 01       	movw	r18, r28
     f24:	2b 59       	subi	r18, 0x9B	; 155
     f26:	3f 4f       	sbci	r19, 0xFF	; 255
     f28:	f9 01       	movw	r30, r18
     f2a:	91 83       	std	Z+1, r25	; 0x01
     f2c:	80 83       	st	Z, r24
     f2e:	88 e2       	ldi	r24, 0x28	; 40
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	28 e2       	ldi	r18, 0x28	; 40
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	f9 01       	movw	r30, r18
     f38:	20 81       	ld	r18, Z
     f3a:	2b 7f       	andi	r18, 0xFB	; 251
     f3c:	fc 01       	movw	r30, r24
     f3e:	20 83       	st	Z, r18
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	a0 e8       	ldi	r26, 0x80	; 128
     f46:	bf e3       	ldi	r27, 0x3F	; 63
     f48:	89 87       	std	Y+9, r24	; 0x09
     f4a:	9a 87       	std	Y+10, r25	; 0x0a
     f4c:	ab 87       	std	Y+11, r26	; 0x0b
     f4e:	bc 87       	std	Y+12, r27	; 0x0c
     f50:	8e 01       	movw	r16, r28
     f52:	0d 5a       	subi	r16, 0xAD	; 173
     f54:	1f 4f       	sbci	r17, 0xFF	; 255
     f56:	26 e6       	ldi	r18, 0x66	; 102
     f58:	36 e6       	ldi	r19, 0x66	; 102
     f5a:	46 e6       	ldi	r20, 0x66	; 102
     f5c:	55 e4       	ldi	r21, 0x45	; 69
     f5e:	69 85       	ldd	r22, Y+9	; 0x09
     f60:	7a 85       	ldd	r23, Y+10	; 0x0a
     f62:	8b 85       	ldd	r24, Y+11	; 0x0b
     f64:	9c 85       	ldd	r25, Y+12	; 0x0c
     f66:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
     f6a:	dc 01       	movw	r26, r24
     f6c:	cb 01       	movw	r24, r22
     f6e:	f8 01       	movw	r30, r16
     f70:	80 83       	st	Z, r24
     f72:	91 83       	std	Z+1, r25	; 0x01
     f74:	a2 83       	std	Z+2, r26	; 0x02
     f76:	b3 83       	std	Z+3, r27	; 0x03
     f78:	ce 01       	movw	r24, r28
     f7a:	8d 5a       	subi	r24, 0xAD	; 173
     f7c:	9f 4f       	sbci	r25, 0xFF	; 255
     f7e:	20 e0       	ldi	r18, 0x00	; 0
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	40 e8       	ldi	r20, 0x80	; 128
     f84:	5f e3       	ldi	r21, 0x3F	; 63
     f86:	fc 01       	movw	r30, r24
     f88:	60 81       	ld	r22, Z
     f8a:	71 81       	ldd	r23, Z+1	; 0x01
     f8c:	82 81       	ldd	r24, Z+2	; 0x02
     f8e:	93 81       	ldd	r25, Z+3	; 0x03
     f90:	0e 94 8e 10 	call	0x211c	; 0x211c <__cmpsf2>
     f94:	88 23       	and	r24, r24
     f96:	4c f4       	brge	.+18     	; 0xfaa <lcd_set_4bit+0x3b6>
     f98:	ce 01       	movw	r24, r28
     f9a:	89 5a       	subi	r24, 0xA9	; 169
     f9c:	9f 4f       	sbci	r25, 0xFF	; 255
     f9e:	21 e0       	ldi	r18, 0x01	; 1
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	fc 01       	movw	r30, r24
     fa4:	31 83       	std	Z+1, r19	; 0x01
     fa6:	20 83       	st	Z, r18
     fa8:	69 c0       	rjmp	.+210    	; 0x107c <lcd_set_4bit+0x488>
     faa:	ce 01       	movw	r24, r28
     fac:	8d 5a       	subi	r24, 0xAD	; 173
     fae:	9f 4f       	sbci	r25, 0xFF	; 255
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	3f ef       	ldi	r19, 0xFF	; 255
     fb4:	4f e7       	ldi	r20, 0x7F	; 127
     fb6:	57 e4       	ldi	r21, 0x47	; 71
     fb8:	fc 01       	movw	r30, r24
     fba:	60 81       	ld	r22, Z
     fbc:	71 81       	ldd	r23, Z+1	; 0x01
     fbe:	82 81       	ldd	r24, Z+2	; 0x02
     fc0:	93 81       	ldd	r25, Z+3	; 0x03
     fc2:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <__gesf2>
     fc6:	18 16       	cp	r1, r24
     fc8:	0c f0       	brlt	.+2      	; 0xfcc <lcd_set_4bit+0x3d8>
     fca:	46 c0       	rjmp	.+140    	; 0x1058 <lcd_set_4bit+0x464>
     fcc:	20 e0       	ldi	r18, 0x00	; 0
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	40 e2       	ldi	r20, 0x20	; 32
     fd2:	51 e4       	ldi	r21, 0x41	; 65
     fd4:	69 85       	ldd	r22, Y+9	; 0x09
     fd6:	7a 85       	ldd	r23, Y+10	; 0x0a
     fd8:	8b 85       	ldd	r24, Y+11	; 0x0b
     fda:	9c 85       	ldd	r25, Y+12	; 0x0c
     fdc:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
     fe0:	dc 01       	movw	r26, r24
     fe2:	cb 01       	movw	r24, r22
     fe4:	8e 01       	movw	r16, r28
     fe6:	09 5a       	subi	r16, 0xA9	; 169
     fe8:	1f 4f       	sbci	r17, 0xFF	; 255
     fea:	bc 01       	movw	r22, r24
     fec:	cd 01       	movw	r24, r26
     fee:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
     ff2:	dc 01       	movw	r26, r24
     ff4:	cb 01       	movw	r24, r22
     ff6:	f8 01       	movw	r30, r16
     ff8:	91 83       	std	Z+1, r25	; 0x01
     ffa:	80 83       	st	Z, r24
     ffc:	24 c0       	rjmp	.+72     	; 0x1046 <lcd_set_4bit+0x452>
     ffe:	ce 01       	movw	r24, r28
    1000:	87 5a       	subi	r24, 0xA7	; 167
    1002:	9f 4f       	sbci	r25, 0xFF	; 255
    1004:	20 e7       	ldi	r18, 0x70	; 112
    1006:	31 e0       	ldi	r19, 0x01	; 1
    1008:	fc 01       	movw	r30, r24
    100a:	31 83       	std	Z+1, r19	; 0x01
    100c:	20 83       	st	Z, r18
    100e:	ce 01       	movw	r24, r28
    1010:	87 5a       	subi	r24, 0xA7	; 167
    1012:	9f 4f       	sbci	r25, 0xFF	; 255
    1014:	fc 01       	movw	r30, r24
    1016:	80 81       	ld	r24, Z
    1018:	91 81       	ldd	r25, Z+1	; 0x01
    101a:	01 97       	sbiw	r24, 0x01	; 1
    101c:	f1 f7       	brne	.-4      	; 0x101a <lcd_set_4bit+0x426>
    101e:	9e 01       	movw	r18, r28
    1020:	27 5a       	subi	r18, 0xA7	; 167
    1022:	3f 4f       	sbci	r19, 0xFF	; 255
    1024:	f9 01       	movw	r30, r18
    1026:	91 83       	std	Z+1, r25	; 0x01
    1028:	80 83       	st	Z, r24
    102a:	ce 01       	movw	r24, r28
    102c:	89 5a       	subi	r24, 0xA9	; 169
    102e:	9f 4f       	sbci	r25, 0xFF	; 255
    1030:	9e 01       	movw	r18, r28
    1032:	29 5a       	subi	r18, 0xA9	; 169
    1034:	3f 4f       	sbci	r19, 0xFF	; 255
    1036:	f9 01       	movw	r30, r18
    1038:	20 81       	ld	r18, Z
    103a:	31 81       	ldd	r19, Z+1	; 0x01
    103c:	21 50       	subi	r18, 0x01	; 1
    103e:	31 09       	sbc	r19, r1
    1040:	fc 01       	movw	r30, r24
    1042:	31 83       	std	Z+1, r19	; 0x01
    1044:	20 83       	st	Z, r18
    1046:	ce 01       	movw	r24, r28
    1048:	89 5a       	subi	r24, 0xA9	; 169
    104a:	9f 4f       	sbci	r25, 0xFF	; 255
    104c:	fc 01       	movw	r30, r24
    104e:	80 81       	ld	r24, Z
    1050:	91 81       	ldd	r25, Z+1	; 0x01
    1052:	89 2b       	or	r24, r25
    1054:	a1 f6       	brne	.-88     	; 0xffe <lcd_set_4bit+0x40a>
    1056:	2c c0       	rjmp	.+88     	; 0x10b0 <lcd_set_4bit+0x4bc>
    1058:	8e 01       	movw	r16, r28
    105a:	09 5a       	subi	r16, 0xA9	; 169
    105c:	1f 4f       	sbci	r17, 0xFF	; 255
    105e:	ce 01       	movw	r24, r28
    1060:	8d 5a       	subi	r24, 0xAD	; 173
    1062:	9f 4f       	sbci	r25, 0xFF	; 255
    1064:	fc 01       	movw	r30, r24
    1066:	60 81       	ld	r22, Z
    1068:	71 81       	ldd	r23, Z+1	; 0x01
    106a:	82 81       	ldd	r24, Z+2	; 0x02
    106c:	93 81       	ldd	r25, Z+3	; 0x03
    106e:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
    1072:	dc 01       	movw	r26, r24
    1074:	cb 01       	movw	r24, r22
    1076:	f8 01       	movw	r30, r16
    1078:	91 83       	std	Z+1, r25	; 0x01
    107a:	80 83       	st	Z, r24
    107c:	ce 01       	movw	r24, r28
    107e:	85 5a       	subi	r24, 0xA5	; 165
    1080:	9f 4f       	sbci	r25, 0xFF	; 255
    1082:	9e 01       	movw	r18, r28
    1084:	29 5a       	subi	r18, 0xA9	; 169
    1086:	3f 4f       	sbci	r19, 0xFF	; 255
    1088:	f9 01       	movw	r30, r18
    108a:	20 81       	ld	r18, Z
    108c:	31 81       	ldd	r19, Z+1	; 0x01
    108e:	fc 01       	movw	r30, r24
    1090:	31 83       	std	Z+1, r19	; 0x01
    1092:	20 83       	st	Z, r18
    1094:	ce 01       	movw	r24, r28
    1096:	85 5a       	subi	r24, 0xA5	; 165
    1098:	9f 4f       	sbci	r25, 0xFF	; 255
    109a:	fc 01       	movw	r30, r24
    109c:	80 81       	ld	r24, Z
    109e:	91 81       	ldd	r25, Z+1	; 0x01
    10a0:	01 97       	sbiw	r24, 0x01	; 1
    10a2:	f1 f7       	brne	.-4      	; 0x10a0 <lcd_set_4bit+0x4ac>
    10a4:	9e 01       	movw	r18, r28
    10a6:	25 5a       	subi	r18, 0xA5	; 165
    10a8:	3f 4f       	sbci	r19, 0xFF	; 255
    10aa:	f9 01       	movw	r30, r18
    10ac:	91 83       	std	Z+1, r25	; 0x01
    10ae:	80 83       	st	Z, r24
    10b0:	88 e2       	ldi	r24, 0x28	; 40
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	28 e2       	ldi	r18, 0x28	; 40
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	f9 01       	movw	r30, r18
    10ba:	20 81       	ld	r18, Z
    10bc:	2e 7f       	andi	r18, 0xFE	; 254
    10be:	fc 01       	movw	r30, r24
    10c0:	20 83       	st	Z, r18
    10c2:	88 e2       	ldi	r24, 0x28	; 40
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	28 e2       	ldi	r18, 0x28	; 40
    10c8:	30 e0       	ldi	r19, 0x00	; 0
    10ca:	f9 01       	movw	r30, r18
    10cc:	20 81       	ld	r18, Z
    10ce:	2d 7f       	andi	r18, 0xFD	; 253
    10d0:	fc 01       	movw	r30, r24
    10d2:	20 83       	st	Z, r18
    10d4:	88 e2       	ldi	r24, 0x28	; 40
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	20 e3       	ldi	r18, 0x30	; 48
    10da:	fc 01       	movw	r30, r24
    10dc:	20 83       	st	Z, r18
    10de:	88 e2       	ldi	r24, 0x28	; 40
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	28 e2       	ldi	r18, 0x28	; 40
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	f9 01       	movw	r30, r18
    10e8:	20 81       	ld	r18, Z
    10ea:	24 60       	ori	r18, 0x04	; 4
    10ec:	fc 01       	movw	r30, r24
    10ee:	20 83       	st	Z, r18
    10f0:	80 e0       	ldi	r24, 0x00	; 0
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	a0 ea       	ldi	r26, 0xA0	; 160
    10f6:	b0 e4       	ldi	r27, 0x40	; 64
    10f8:	8d 87       	std	Y+13, r24	; 0x0d
    10fa:	9e 87       	std	Y+14, r25	; 0x0e
    10fc:	af 87       	std	Y+15, r26	; 0x0f
    10fe:	b8 8b       	std	Y+16, r27	; 0x10
    1100:	8e 01       	movw	r16, r28
    1102:	07 5b       	subi	r16, 0xB7	; 183
    1104:	1f 4f       	sbci	r17, 0xFF	; 255
    1106:	26 e6       	ldi	r18, 0x66	; 102
    1108:	36 e6       	ldi	r19, 0x66	; 102
    110a:	46 e6       	ldi	r20, 0x66	; 102
    110c:	55 e4       	ldi	r21, 0x45	; 69
    110e:	6d 85       	ldd	r22, Y+13	; 0x0d
    1110:	7e 85       	ldd	r23, Y+14	; 0x0e
    1112:	8f 85       	ldd	r24, Y+15	; 0x0f
    1114:	98 89       	ldd	r25, Y+16	; 0x10
    1116:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
    111a:	dc 01       	movw	r26, r24
    111c:	cb 01       	movw	r24, r22
    111e:	f8 01       	movw	r30, r16
    1120:	80 83       	st	Z, r24
    1122:	91 83       	std	Z+1, r25	; 0x01
    1124:	a2 83       	std	Z+2, r26	; 0x02
    1126:	b3 83       	std	Z+3, r27	; 0x03
    1128:	ce 01       	movw	r24, r28
    112a:	87 5b       	subi	r24, 0xB7	; 183
    112c:	9f 4f       	sbci	r25, 0xFF	; 255
    112e:	20 e0       	ldi	r18, 0x00	; 0
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	40 e8       	ldi	r20, 0x80	; 128
    1134:	5f e3       	ldi	r21, 0x3F	; 63
    1136:	fc 01       	movw	r30, r24
    1138:	60 81       	ld	r22, Z
    113a:	71 81       	ldd	r23, Z+1	; 0x01
    113c:	82 81       	ldd	r24, Z+2	; 0x02
    113e:	93 81       	ldd	r25, Z+3	; 0x03
    1140:	ed d7       	rcall	.+4058   	; 0x211c <__cmpsf2>
    1142:	88 23       	and	r24, r24
    1144:	4c f4       	brge	.+18     	; 0x1158 <lcd_set_4bit+0x564>
    1146:	ce 01       	movw	r24, r28
    1148:	83 5b       	subi	r24, 0xB3	; 179
    114a:	9f 4f       	sbci	r25, 0xFF	; 255
    114c:	21 e0       	ldi	r18, 0x01	; 1
    114e:	30 e0       	ldi	r19, 0x00	; 0
    1150:	fc 01       	movw	r30, r24
    1152:	31 83       	std	Z+1, r19	; 0x01
    1154:	20 83       	st	Z, r18
    1156:	68 c0       	rjmp	.+208    	; 0x1228 <lcd_set_4bit+0x634>
    1158:	ce 01       	movw	r24, r28
    115a:	87 5b       	subi	r24, 0xB7	; 183
    115c:	9f 4f       	sbci	r25, 0xFF	; 255
    115e:	20 e0       	ldi	r18, 0x00	; 0
    1160:	3f ef       	ldi	r19, 0xFF	; 255
    1162:	4f e7       	ldi	r20, 0x7F	; 127
    1164:	57 e4       	ldi	r21, 0x47	; 71
    1166:	fc 01       	movw	r30, r24
    1168:	60 81       	ld	r22, Z
    116a:	71 81       	ldd	r23, Z+1	; 0x01
    116c:	82 81       	ldd	r24, Z+2	; 0x02
    116e:	93 81       	ldd	r25, Z+3	; 0x03
    1170:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <__gesf2>
    1174:	18 16       	cp	r1, r24
    1176:	0c f0       	brlt	.+2      	; 0x117a <lcd_set_4bit+0x586>
    1178:	46 c0       	rjmp	.+140    	; 0x1206 <lcd_set_4bit+0x612>
    117a:	20 e0       	ldi	r18, 0x00	; 0
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	40 e2       	ldi	r20, 0x20	; 32
    1180:	51 e4       	ldi	r21, 0x41	; 65
    1182:	6d 85       	ldd	r22, Y+13	; 0x0d
    1184:	7e 85       	ldd	r23, Y+14	; 0x0e
    1186:	8f 85       	ldd	r24, Y+15	; 0x0f
    1188:	98 89       	ldd	r25, Y+16	; 0x10
    118a:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
    118e:	dc 01       	movw	r26, r24
    1190:	cb 01       	movw	r24, r22
    1192:	8e 01       	movw	r16, r28
    1194:	03 5b       	subi	r16, 0xB3	; 179
    1196:	1f 4f       	sbci	r17, 0xFF	; 255
    1198:	bc 01       	movw	r22, r24
    119a:	cd 01       	movw	r24, r26
    119c:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__fixunssfsi>
    11a0:	dc 01       	movw	r26, r24
    11a2:	cb 01       	movw	r24, r22
    11a4:	f8 01       	movw	r30, r16
    11a6:	91 83       	std	Z+1, r25	; 0x01
    11a8:	80 83       	st	Z, r24
    11aa:	24 c0       	rjmp	.+72     	; 0x11f4 <lcd_set_4bit+0x600>
    11ac:	ce 01       	movw	r24, r28
    11ae:	81 5b       	subi	r24, 0xB1	; 177
    11b0:	9f 4f       	sbci	r25, 0xFF	; 255
    11b2:	20 e7       	ldi	r18, 0x70	; 112
    11b4:	31 e0       	ldi	r19, 0x01	; 1
    11b6:	fc 01       	movw	r30, r24
    11b8:	31 83       	std	Z+1, r19	; 0x01
    11ba:	20 83       	st	Z, r18
    11bc:	ce 01       	movw	r24, r28
    11be:	81 5b       	subi	r24, 0xB1	; 177
    11c0:	9f 4f       	sbci	r25, 0xFF	; 255
    11c2:	fc 01       	movw	r30, r24
    11c4:	80 81       	ld	r24, Z
    11c6:	91 81       	ldd	r25, Z+1	; 0x01
    11c8:	01 97       	sbiw	r24, 0x01	; 1
    11ca:	f1 f7       	brne	.-4      	; 0x11c8 <lcd_set_4bit+0x5d4>
    11cc:	9e 01       	movw	r18, r28
    11ce:	21 5b       	subi	r18, 0xB1	; 177
    11d0:	3f 4f       	sbci	r19, 0xFF	; 255
    11d2:	f9 01       	movw	r30, r18
    11d4:	91 83       	std	Z+1, r25	; 0x01
    11d6:	80 83       	st	Z, r24
    11d8:	ce 01       	movw	r24, r28
    11da:	83 5b       	subi	r24, 0xB3	; 179
    11dc:	9f 4f       	sbci	r25, 0xFF	; 255
    11de:	9e 01       	movw	r18, r28
    11e0:	23 5b       	subi	r18, 0xB3	; 179
    11e2:	3f 4f       	sbci	r19, 0xFF	; 255
    11e4:	f9 01       	movw	r30, r18
    11e6:	20 81       	ld	r18, Z
    11e8:	31 81       	ldd	r19, Z+1	; 0x01
    11ea:	21 50       	subi	r18, 0x01	; 1
    11ec:	31 09       	sbc	r19, r1
    11ee:	fc 01       	movw	r30, r24
    11f0:	31 83       	std	Z+1, r19	; 0x01
    11f2:	20 83       	st	Z, r18
    11f4:	ce 01       	movw	r24, r28
    11f6:	83 5b       	subi	r24, 0xB3	; 179
    11f8:	9f 4f       	sbci	r25, 0xFF	; 255
    11fa:	fc 01       	movw	r30, r24
    11fc:	80 81       	ld	r24, Z
    11fe:	91 81       	ldd	r25, Z+1	; 0x01
    1200:	89 2b       	or	r24, r25
    1202:	a1 f6       	brne	.-88     	; 0x11ac <lcd_set_4bit+0x5b8>
    1204:	2b c0       	rjmp	.+86     	; 0x125c <lcd_set_4bit+0x668>
    1206:	8e 01       	movw	r16, r28
    1208:	03 5b       	subi	r16, 0xB3	; 179
    120a:	1f 4f       	sbci	r17, 0xFF	; 255
    120c:	ce 01       	movw	r24, r28
    120e:	87 5b       	subi	r24, 0xB7	; 183
    1210:	9f 4f       	sbci	r25, 0xFF	; 255
    1212:	fc 01       	movw	r30, r24
    1214:	60 81       	ld	r22, Z
    1216:	71 81       	ldd	r23, Z+1	; 0x01
    1218:	82 81       	ldd	r24, Z+2	; 0x02
    121a:	93 81       	ldd	r25, Z+3	; 0x03
    121c:	eb d7       	rcall	.+4054   	; 0x21f4 <__fixunssfsi>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	f8 01       	movw	r30, r16
    1224:	91 83       	std	Z+1, r25	; 0x01
    1226:	80 83       	st	Z, r24
    1228:	ce 01       	movw	r24, r28
    122a:	8f 5a       	subi	r24, 0xAF	; 175
    122c:	9f 4f       	sbci	r25, 0xFF	; 255
    122e:	9e 01       	movw	r18, r28
    1230:	23 5b       	subi	r18, 0xB3	; 179
    1232:	3f 4f       	sbci	r19, 0xFF	; 255
    1234:	f9 01       	movw	r30, r18
    1236:	20 81       	ld	r18, Z
    1238:	31 81       	ldd	r19, Z+1	; 0x01
    123a:	fc 01       	movw	r30, r24
    123c:	31 83       	std	Z+1, r19	; 0x01
    123e:	20 83       	st	Z, r18
    1240:	ce 01       	movw	r24, r28
    1242:	8f 5a       	subi	r24, 0xAF	; 175
    1244:	9f 4f       	sbci	r25, 0xFF	; 255
    1246:	fc 01       	movw	r30, r24
    1248:	80 81       	ld	r24, Z
    124a:	91 81       	ldd	r25, Z+1	; 0x01
    124c:	01 97       	sbiw	r24, 0x01	; 1
    124e:	f1 f7       	brne	.-4      	; 0x124c <lcd_set_4bit+0x658>
    1250:	9e 01       	movw	r18, r28
    1252:	2f 5a       	subi	r18, 0xAF	; 175
    1254:	3f 4f       	sbci	r19, 0xFF	; 255
    1256:	f9 01       	movw	r30, r18
    1258:	91 83       	std	Z+1, r25	; 0x01
    125a:	80 83       	st	Z, r24
    125c:	88 e2       	ldi	r24, 0x28	; 40
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	28 e2       	ldi	r18, 0x28	; 40
    1262:	30 e0       	ldi	r19, 0x00	; 0
    1264:	f9 01       	movw	r30, r18
    1266:	20 81       	ld	r18, Z
    1268:	2b 7f       	andi	r18, 0xFB	; 251
    126a:	fc 01       	movw	r30, r24
    126c:	20 83       	st	Z, r18
    126e:	80 e0       	ldi	r24, 0x00	; 0
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	a0 e8       	ldi	r26, 0x80	; 128
    1274:	bf e3       	ldi	r27, 0x3F	; 63
    1276:	89 8b       	std	Y+17, r24	; 0x11
    1278:	9a 8b       	std	Y+18, r25	; 0x12
    127a:	ab 8b       	std	Y+19, r26	; 0x13
    127c:	bc 8b       	std	Y+20, r27	; 0x14
    127e:	8e 01       	movw	r16, r28
    1280:	01 5c       	subi	r16, 0xC1	; 193
    1282:	1f 4f       	sbci	r17, 0xFF	; 255
    1284:	26 e6       	ldi	r18, 0x66	; 102
    1286:	36 e6       	ldi	r19, 0x66	; 102
    1288:	46 e6       	ldi	r20, 0x66	; 102
    128a:	55 e4       	ldi	r21, 0x45	; 69
    128c:	69 89       	ldd	r22, Y+17	; 0x11
    128e:	7a 89       	ldd	r23, Y+18	; 0x12
    1290:	8b 89       	ldd	r24, Y+19	; 0x13
    1292:	9c 89       	ldd	r25, Y+20	; 0x14
    1294:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
    1298:	dc 01       	movw	r26, r24
    129a:	cb 01       	movw	r24, r22
    129c:	f8 01       	movw	r30, r16
    129e:	80 83       	st	Z, r24
    12a0:	91 83       	std	Z+1, r25	; 0x01
    12a2:	a2 83       	std	Z+2, r26	; 0x02
    12a4:	b3 83       	std	Z+3, r27	; 0x03
    12a6:	ce 01       	movw	r24, r28
    12a8:	cf 96       	adiw	r24, 0x3f	; 63
    12aa:	20 e0       	ldi	r18, 0x00	; 0
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	40 e8       	ldi	r20, 0x80	; 128
    12b0:	5f e3       	ldi	r21, 0x3F	; 63
    12b2:	fc 01       	movw	r30, r24
    12b4:	60 81       	ld	r22, Z
    12b6:	71 81       	ldd	r23, Z+1	; 0x01
    12b8:	82 81       	ldd	r24, Z+2	; 0x02
    12ba:	93 81       	ldd	r25, Z+3	; 0x03
    12bc:	2f d7       	rcall	.+3678   	; 0x211c <__cmpsf2>
    12be:	88 23       	and	r24, r24
    12c0:	4c f4       	brge	.+18     	; 0x12d4 <lcd_set_4bit+0x6e0>
    12c2:	ce 01       	movw	r24, r28
    12c4:	8d 5b       	subi	r24, 0xBD	; 189
    12c6:	9f 4f       	sbci	r25, 0xFF	; 255
    12c8:	21 e0       	ldi	r18, 0x01	; 1
    12ca:	30 e0       	ldi	r19, 0x00	; 0
    12cc:	fc 01       	movw	r30, r24
    12ce:	31 83       	std	Z+1, r19	; 0x01
    12d0:	20 83       	st	Z, r18
    12d2:	65 c0       	rjmp	.+202    	; 0x139e <lcd_set_4bit+0x7aa>
    12d4:	ce 01       	movw	r24, r28
    12d6:	cf 96       	adiw	r24, 0x3f	; 63
    12d8:	20 e0       	ldi	r18, 0x00	; 0
    12da:	3f ef       	ldi	r19, 0xFF	; 255
    12dc:	4f e7       	ldi	r20, 0x7F	; 127
    12de:	57 e4       	ldi	r21, 0x47	; 71
    12e0:	fc 01       	movw	r30, r24
    12e2:	60 81       	ld	r22, Z
    12e4:	71 81       	ldd	r23, Z+1	; 0x01
    12e6:	82 81       	ldd	r24, Z+2	; 0x02
    12e8:	93 81       	ldd	r25, Z+3	; 0x03
    12ea:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <__gesf2>
    12ee:	18 16       	cp	r1, r24
    12f0:	0c f0       	brlt	.+2      	; 0x12f4 <lcd_set_4bit+0x700>
    12f2:	45 c0       	rjmp	.+138    	; 0x137e <lcd_set_4bit+0x78a>
    12f4:	20 e0       	ldi	r18, 0x00	; 0
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	40 e2       	ldi	r20, 0x20	; 32
    12fa:	51 e4       	ldi	r21, 0x41	; 65
    12fc:	69 89       	ldd	r22, Y+17	; 0x11
    12fe:	7a 89       	ldd	r23, Y+18	; 0x12
    1300:	8b 89       	ldd	r24, Y+19	; 0x13
    1302:	9c 89       	ldd	r25, Y+20	; 0x14
    1304:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__mulsf3>
    1308:	dc 01       	movw	r26, r24
    130a:	cb 01       	movw	r24, r22
    130c:	8e 01       	movw	r16, r28
    130e:	0d 5b       	subi	r16, 0xBD	; 189
    1310:	1f 4f       	sbci	r17, 0xFF	; 255
    1312:	bc 01       	movw	r22, r24
    1314:	cd 01       	movw	r24, r26
    1316:	6e d7       	rcall	.+3804   	; 0x21f4 <__fixunssfsi>
    1318:	dc 01       	movw	r26, r24
    131a:	cb 01       	movw	r24, r22
    131c:	f8 01       	movw	r30, r16
    131e:	91 83       	std	Z+1, r25	; 0x01
    1320:	80 83       	st	Z, r24
    1322:	24 c0       	rjmp	.+72     	; 0x136c <lcd_set_4bit+0x778>
    1324:	ce 01       	movw	r24, r28
    1326:	8b 5b       	subi	r24, 0xBB	; 187
    1328:	9f 4f       	sbci	r25, 0xFF	; 255
    132a:	20 e7       	ldi	r18, 0x70	; 112
    132c:	31 e0       	ldi	r19, 0x01	; 1
    132e:	fc 01       	movw	r30, r24
    1330:	31 83       	std	Z+1, r19	; 0x01
    1332:	20 83       	st	Z, r18
    1334:	ce 01       	movw	r24, r28
    1336:	8b 5b       	subi	r24, 0xBB	; 187
    1338:	9f 4f       	sbci	r25, 0xFF	; 255
    133a:	fc 01       	movw	r30, r24
    133c:	80 81       	ld	r24, Z
    133e:	91 81       	ldd	r25, Z+1	; 0x01
    1340:	01 97       	sbiw	r24, 0x01	; 1
    1342:	f1 f7       	brne	.-4      	; 0x1340 <lcd_set_4bit+0x74c>
    1344:	9e 01       	movw	r18, r28
    1346:	2b 5b       	subi	r18, 0xBB	; 187
    1348:	3f 4f       	sbci	r19, 0xFF	; 255
    134a:	f9 01       	movw	r30, r18
    134c:	91 83       	std	Z+1, r25	; 0x01
    134e:	80 83       	st	Z, r24
    1350:	ce 01       	movw	r24, r28
    1352:	8d 5b       	subi	r24, 0xBD	; 189
    1354:	9f 4f       	sbci	r25, 0xFF	; 255
    1356:	9e 01       	movw	r18, r28
    1358:	2d 5b       	subi	r18, 0xBD	; 189
    135a:	3f 4f       	sbci	r19, 0xFF	; 255
    135c:	f9 01       	movw	r30, r18
    135e:	20 81       	ld	r18, Z
    1360:	31 81       	ldd	r19, Z+1	; 0x01
    1362:	21 50       	subi	r18, 0x01	; 1
    1364:	31 09       	sbc	r19, r1
    1366:	fc 01       	movw	r30, r24
    1368:	31 83       	std	Z+1, r19	; 0x01
    136a:	20 83       	st	Z, r18
    136c:	ce 01       	movw	r24, r28
    136e:	8d 5b       	subi	r24, 0xBD	; 189
    1370:	9f 4f       	sbci	r25, 0xFF	; 255
    1372:	fc 01       	movw	r30, r24
    1374:	80 81       	ld	r24, Z
    1376:	91 81       	ldd	r25, Z+1	; 0x01
    1378:	89 2b       	or	r24, r25
    137a:	a1 f6       	brne	.-88     	; 0x1324 <lcd_set_4bit+0x730>
    137c:	2a c0       	rjmp	.+84     	; 0x13d2 <lcd_set_4bit+0x7de>
    137e:	8e 01       	movw	r16, r28
    1380:	0d 5b       	subi	r16, 0xBD	; 189
    1382:	1f 4f       	sbci	r17, 0xFF	; 255
    1384:	ce 01       	movw	r24, r28
    1386:	cf 96       	adiw	r24, 0x3f	; 63
    1388:	fc 01       	movw	r30, r24
    138a:	60 81       	ld	r22, Z
    138c:	71 81       	ldd	r23, Z+1	; 0x01
    138e:	82 81       	ldd	r24, Z+2	; 0x02
    1390:	93 81       	ldd	r25, Z+3	; 0x03
    1392:	30 d7       	rcall	.+3680   	; 0x21f4 <__fixunssfsi>
    1394:	dc 01       	movw	r26, r24
    1396:	cb 01       	movw	r24, r22
    1398:	f8 01       	movw	r30, r16
    139a:	91 83       	std	Z+1, r25	; 0x01
    139c:	80 83       	st	Z, r24
    139e:	ce 01       	movw	r24, r28
    13a0:	89 5b       	subi	r24, 0xB9	; 185
    13a2:	9f 4f       	sbci	r25, 0xFF	; 255
    13a4:	9e 01       	movw	r18, r28
    13a6:	2d 5b       	subi	r18, 0xBD	; 189
    13a8:	3f 4f       	sbci	r19, 0xFF	; 255
    13aa:	f9 01       	movw	r30, r18
    13ac:	20 81       	ld	r18, Z
    13ae:	31 81       	ldd	r19, Z+1	; 0x01
    13b0:	fc 01       	movw	r30, r24
    13b2:	31 83       	std	Z+1, r19	; 0x01
    13b4:	20 83       	st	Z, r18
    13b6:	ce 01       	movw	r24, r28
    13b8:	89 5b       	subi	r24, 0xB9	; 185
    13ba:	9f 4f       	sbci	r25, 0xFF	; 255
    13bc:	fc 01       	movw	r30, r24
    13be:	80 81       	ld	r24, Z
    13c0:	91 81       	ldd	r25, Z+1	; 0x01
    13c2:	01 97       	sbiw	r24, 0x01	; 1
    13c4:	f1 f7       	brne	.-4      	; 0x13c2 <lcd_set_4bit+0x7ce>
    13c6:	9e 01       	movw	r18, r28
    13c8:	29 5b       	subi	r18, 0xB9	; 185
    13ca:	3f 4f       	sbci	r19, 0xFF	; 255
    13cc:	f9 01       	movw	r30, r18
    13ce:	91 83       	std	Z+1, r25	; 0x01
    13d0:	80 83       	st	Z, r24
    13d2:	88 e2       	ldi	r24, 0x28	; 40
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	28 e2       	ldi	r18, 0x28	; 40
    13d8:	30 e0       	ldi	r19, 0x00	; 0
    13da:	f9 01       	movw	r30, r18
    13dc:	20 81       	ld	r18, Z
    13de:	2e 7f       	andi	r18, 0xFE	; 254
    13e0:	fc 01       	movw	r30, r24
    13e2:	20 83       	st	Z, r18
    13e4:	88 e2       	ldi	r24, 0x28	; 40
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	28 e2       	ldi	r18, 0x28	; 40
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	f9 01       	movw	r30, r18
    13ee:	20 81       	ld	r18, Z
    13f0:	2d 7f       	andi	r18, 0xFD	; 253
    13f2:	fc 01       	movw	r30, r24
    13f4:	20 83       	st	Z, r18
    13f6:	88 e2       	ldi	r24, 0x28	; 40
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	20 e3       	ldi	r18, 0x30	; 48
    13fc:	fc 01       	movw	r30, r24
    13fe:	20 83       	st	Z, r18
    1400:	88 e2       	ldi	r24, 0x28	; 40
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	28 e2       	ldi	r18, 0x28	; 40
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	f9 01       	movw	r30, r18
    140a:	20 81       	ld	r18, Z
    140c:	24 60       	ori	r18, 0x04	; 4
    140e:	fc 01       	movw	r30, r24
    1410:	20 83       	st	Z, r18
    1412:	80 e0       	ldi	r24, 0x00	; 0
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	a0 ea       	ldi	r26, 0xA0	; 160
    1418:	b0 e4       	ldi	r27, 0x40	; 64
    141a:	8d 8b       	std	Y+21, r24	; 0x15
    141c:	9e 8b       	std	Y+22, r25	; 0x16
    141e:	af 8b       	std	Y+23, r26	; 0x17
    1420:	b8 8f       	std	Y+24, r27	; 0x18
    1422:	26 e6       	ldi	r18, 0x66	; 102
    1424:	36 e6       	ldi	r19, 0x66	; 102
    1426:	46 e6       	ldi	r20, 0x66	; 102
    1428:	55 e4       	ldi	r21, 0x45	; 69
    142a:	6d 89       	ldd	r22, Y+21	; 0x15
    142c:	7e 89       	ldd	r23, Y+22	; 0x16
    142e:	8f 89       	ldd	r24, Y+23	; 0x17
    1430:	98 8d       	ldd	r25, Y+24	; 0x18
    1432:	c2 d7       	rcall	.+3972   	; 0x23b8 <__mulsf3>
    1434:	dc 01       	movw	r26, r24
    1436:	cb 01       	movw	r24, r22
    1438:	8d ab       	std	Y+53, r24	; 0x35
    143a:	9e ab       	std	Y+54, r25	; 0x36
    143c:	af ab       	std	Y+55, r26	; 0x37
    143e:	b8 af       	std	Y+56, r27	; 0x38
    1440:	20 e0       	ldi	r18, 0x00	; 0
    1442:	30 e0       	ldi	r19, 0x00	; 0
    1444:	40 e8       	ldi	r20, 0x80	; 128
    1446:	5f e3       	ldi	r21, 0x3F	; 63
    1448:	6d a9       	ldd	r22, Y+53	; 0x35
    144a:	7e a9       	ldd	r23, Y+54	; 0x36
    144c:	8f a9       	ldd	r24, Y+55	; 0x37
    144e:	98 ad       	ldd	r25, Y+56	; 0x38
    1450:	65 d6       	rcall	.+3274   	; 0x211c <__cmpsf2>
    1452:	88 23       	and	r24, r24
    1454:	2c f4       	brge	.+10     	; 0x1460 <lcd_set_4bit+0x86c>
    1456:	81 e0       	ldi	r24, 0x01	; 1
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	9a af       	std	Y+58, r25	; 0x3a
    145c:	89 af       	std	Y+57, r24	; 0x39
    145e:	3b c0       	rjmp	.+118    	; 0x14d6 <lcd_set_4bit+0x8e2>
    1460:	20 e0       	ldi	r18, 0x00	; 0
    1462:	3f ef       	ldi	r19, 0xFF	; 255
    1464:	4f e7       	ldi	r20, 0x7F	; 127
    1466:	57 e4       	ldi	r21, 0x47	; 71
    1468:	6d a9       	ldd	r22, Y+53	; 0x35
    146a:	7e a9       	ldd	r23, Y+54	; 0x36
    146c:	8f a9       	ldd	r24, Y+55	; 0x37
    146e:	98 ad       	ldd	r25, Y+56	; 0x38
    1470:	9f d7       	rcall	.+3902   	; 0x23b0 <__gesf2>
    1472:	18 16       	cp	r1, r24
    1474:	3c f5       	brge	.+78     	; 0x14c4 <lcd_set_4bit+0x8d0>
    1476:	20 e0       	ldi	r18, 0x00	; 0
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	40 e2       	ldi	r20, 0x20	; 32
    147c:	51 e4       	ldi	r21, 0x41	; 65
    147e:	6d 89       	ldd	r22, Y+21	; 0x15
    1480:	7e 89       	ldd	r23, Y+22	; 0x16
    1482:	8f 89       	ldd	r24, Y+23	; 0x17
    1484:	98 8d       	ldd	r25, Y+24	; 0x18
    1486:	98 d7       	rcall	.+3888   	; 0x23b8 <__mulsf3>
    1488:	dc 01       	movw	r26, r24
    148a:	cb 01       	movw	r24, r22
    148c:	bc 01       	movw	r22, r24
    148e:	cd 01       	movw	r24, r26
    1490:	b1 d6       	rcall	.+3426   	; 0x21f4 <__fixunssfsi>
    1492:	dc 01       	movw	r26, r24
    1494:	cb 01       	movw	r24, r22
    1496:	9a af       	std	Y+58, r25	; 0x3a
    1498:	89 af       	std	Y+57, r24	; 0x39
    149a:	0f c0       	rjmp	.+30     	; 0x14ba <lcd_set_4bit+0x8c6>
    149c:	80 e7       	ldi	r24, 0x70	; 112
    149e:	91 e0       	ldi	r25, 0x01	; 1
    14a0:	9c af       	std	Y+60, r25	; 0x3c
    14a2:	8b af       	std	Y+59, r24	; 0x3b
    14a4:	8b ad       	ldd	r24, Y+59	; 0x3b
    14a6:	9c ad       	ldd	r25, Y+60	; 0x3c
    14a8:	01 97       	sbiw	r24, 0x01	; 1
    14aa:	f1 f7       	brne	.-4      	; 0x14a8 <lcd_set_4bit+0x8b4>
    14ac:	9c af       	std	Y+60, r25	; 0x3c
    14ae:	8b af       	std	Y+59, r24	; 0x3b
    14b0:	89 ad       	ldd	r24, Y+57	; 0x39
    14b2:	9a ad       	ldd	r25, Y+58	; 0x3a
    14b4:	01 97       	sbiw	r24, 0x01	; 1
    14b6:	9a af       	std	Y+58, r25	; 0x3a
    14b8:	89 af       	std	Y+57, r24	; 0x39
    14ba:	89 ad       	ldd	r24, Y+57	; 0x39
    14bc:	9a ad       	ldd	r25, Y+58	; 0x3a
    14be:	89 2b       	or	r24, r25
    14c0:	69 f7       	brne	.-38     	; 0x149c <lcd_set_4bit+0x8a8>
    14c2:	13 c0       	rjmp	.+38     	; 0x14ea <lcd_set_4bit+0x8f6>
    14c4:	6d a9       	ldd	r22, Y+53	; 0x35
    14c6:	7e a9       	ldd	r23, Y+54	; 0x36
    14c8:	8f a9       	ldd	r24, Y+55	; 0x37
    14ca:	98 ad       	ldd	r25, Y+56	; 0x38
    14cc:	93 d6       	rcall	.+3366   	; 0x21f4 <__fixunssfsi>
    14ce:	dc 01       	movw	r26, r24
    14d0:	cb 01       	movw	r24, r22
    14d2:	9a af       	std	Y+58, r25	; 0x3a
    14d4:	89 af       	std	Y+57, r24	; 0x39
    14d6:	89 ad       	ldd	r24, Y+57	; 0x39
    14d8:	9a ad       	ldd	r25, Y+58	; 0x3a
    14da:	9e af       	std	Y+62, r25	; 0x3e
    14dc:	8d af       	std	Y+61, r24	; 0x3d
    14de:	8d ad       	ldd	r24, Y+61	; 0x3d
    14e0:	9e ad       	ldd	r25, Y+62	; 0x3e
    14e2:	01 97       	sbiw	r24, 0x01	; 1
    14e4:	f1 f7       	brne	.-4      	; 0x14e2 <lcd_set_4bit+0x8ee>
    14e6:	9e af       	std	Y+62, r25	; 0x3e
    14e8:	8d af       	std	Y+61, r24	; 0x3d
    14ea:	88 e2       	ldi	r24, 0x28	; 40
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	28 e2       	ldi	r18, 0x28	; 40
    14f0:	30 e0       	ldi	r19, 0x00	; 0
    14f2:	f9 01       	movw	r30, r18
    14f4:	20 81       	ld	r18, Z
    14f6:	2b 7f       	andi	r18, 0xFB	; 251
    14f8:	fc 01       	movw	r30, r24
    14fa:	20 83       	st	Z, r18
    14fc:	80 e0       	ldi	r24, 0x00	; 0
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	a0 e8       	ldi	r26, 0x80	; 128
    1502:	bf e3       	ldi	r27, 0x3F	; 63
    1504:	89 8f       	std	Y+25, r24	; 0x19
    1506:	9a 8f       	std	Y+26, r25	; 0x1a
    1508:	ab 8f       	std	Y+27, r26	; 0x1b
    150a:	bc 8f       	std	Y+28, r27	; 0x1c
    150c:	26 e6       	ldi	r18, 0x66	; 102
    150e:	36 e6       	ldi	r19, 0x66	; 102
    1510:	46 e6       	ldi	r20, 0x66	; 102
    1512:	55 e4       	ldi	r21, 0x45	; 69
    1514:	69 8d       	ldd	r22, Y+25	; 0x19
    1516:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1518:	8b 8d       	ldd	r24, Y+27	; 0x1b
    151a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    151c:	4d d7       	rcall	.+3738   	; 0x23b8 <__mulsf3>
    151e:	dc 01       	movw	r26, r24
    1520:	cb 01       	movw	r24, r22
    1522:	8b a7       	std	Y+43, r24	; 0x2b
    1524:	9c a7       	std	Y+44, r25	; 0x2c
    1526:	ad a7       	std	Y+45, r26	; 0x2d
    1528:	be a7       	std	Y+46, r27	; 0x2e
    152a:	20 e0       	ldi	r18, 0x00	; 0
    152c:	30 e0       	ldi	r19, 0x00	; 0
    152e:	40 e8       	ldi	r20, 0x80	; 128
    1530:	5f e3       	ldi	r21, 0x3F	; 63
    1532:	6b a5       	ldd	r22, Y+43	; 0x2b
    1534:	7c a5       	ldd	r23, Y+44	; 0x2c
    1536:	8d a5       	ldd	r24, Y+45	; 0x2d
    1538:	9e a5       	ldd	r25, Y+46	; 0x2e
    153a:	f0 d5       	rcall	.+3040   	; 0x211c <__cmpsf2>
    153c:	88 23       	and	r24, r24
    153e:	2c f4       	brge	.+10     	; 0x154a <lcd_set_4bit+0x956>
    1540:	81 e0       	ldi	r24, 0x01	; 1
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	98 ab       	std	Y+48, r25	; 0x30
    1546:	8f a7       	std	Y+47, r24	; 0x2f
    1548:	3b c0       	rjmp	.+118    	; 0x15c0 <lcd_set_4bit+0x9cc>
    154a:	20 e0       	ldi	r18, 0x00	; 0
    154c:	3f ef       	ldi	r19, 0xFF	; 255
    154e:	4f e7       	ldi	r20, 0x7F	; 127
    1550:	57 e4       	ldi	r21, 0x47	; 71
    1552:	6b a5       	ldd	r22, Y+43	; 0x2b
    1554:	7c a5       	ldd	r23, Y+44	; 0x2c
    1556:	8d a5       	ldd	r24, Y+45	; 0x2d
    1558:	9e a5       	ldd	r25, Y+46	; 0x2e
    155a:	2a d7       	rcall	.+3668   	; 0x23b0 <__gesf2>
    155c:	18 16       	cp	r1, r24
    155e:	3c f5       	brge	.+78     	; 0x15ae <lcd_set_4bit+0x9ba>
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	40 e2       	ldi	r20, 0x20	; 32
    1566:	51 e4       	ldi	r21, 0x41	; 65
    1568:	69 8d       	ldd	r22, Y+25	; 0x19
    156a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    156c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    156e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1570:	23 d7       	rcall	.+3654   	; 0x23b8 <__mulsf3>
    1572:	dc 01       	movw	r26, r24
    1574:	cb 01       	movw	r24, r22
    1576:	bc 01       	movw	r22, r24
    1578:	cd 01       	movw	r24, r26
    157a:	3c d6       	rcall	.+3192   	; 0x21f4 <__fixunssfsi>
    157c:	dc 01       	movw	r26, r24
    157e:	cb 01       	movw	r24, r22
    1580:	98 ab       	std	Y+48, r25	; 0x30
    1582:	8f a7       	std	Y+47, r24	; 0x2f
    1584:	0f c0       	rjmp	.+30     	; 0x15a4 <lcd_set_4bit+0x9b0>
    1586:	80 e7       	ldi	r24, 0x70	; 112
    1588:	91 e0       	ldi	r25, 0x01	; 1
    158a:	9a ab       	std	Y+50, r25	; 0x32
    158c:	89 ab       	std	Y+49, r24	; 0x31
    158e:	89 a9       	ldd	r24, Y+49	; 0x31
    1590:	9a a9       	ldd	r25, Y+50	; 0x32
    1592:	01 97       	sbiw	r24, 0x01	; 1
    1594:	f1 f7       	brne	.-4      	; 0x1592 <lcd_set_4bit+0x99e>
    1596:	9a ab       	std	Y+50, r25	; 0x32
    1598:	89 ab       	std	Y+49, r24	; 0x31
    159a:	8f a5       	ldd	r24, Y+47	; 0x2f
    159c:	98 a9       	ldd	r25, Y+48	; 0x30
    159e:	01 97       	sbiw	r24, 0x01	; 1
    15a0:	98 ab       	std	Y+48, r25	; 0x30
    15a2:	8f a7       	std	Y+47, r24	; 0x2f
    15a4:	8f a5       	ldd	r24, Y+47	; 0x2f
    15a6:	98 a9       	ldd	r25, Y+48	; 0x30
    15a8:	89 2b       	or	r24, r25
    15aa:	69 f7       	brne	.-38     	; 0x1586 <lcd_set_4bit+0x992>
    15ac:	13 c0       	rjmp	.+38     	; 0x15d4 <lcd_set_4bit+0x9e0>
    15ae:	6b a5       	ldd	r22, Y+43	; 0x2b
    15b0:	7c a5       	ldd	r23, Y+44	; 0x2c
    15b2:	8d a5       	ldd	r24, Y+45	; 0x2d
    15b4:	9e a5       	ldd	r25, Y+46	; 0x2e
    15b6:	1e d6       	rcall	.+3132   	; 0x21f4 <__fixunssfsi>
    15b8:	dc 01       	movw	r26, r24
    15ba:	cb 01       	movw	r24, r22
    15bc:	98 ab       	std	Y+48, r25	; 0x30
    15be:	8f a7       	std	Y+47, r24	; 0x2f
    15c0:	8f a5       	ldd	r24, Y+47	; 0x2f
    15c2:	98 a9       	ldd	r25, Y+48	; 0x30
    15c4:	9c ab       	std	Y+52, r25	; 0x34
    15c6:	8b ab       	std	Y+51, r24	; 0x33
    15c8:	8b a9       	ldd	r24, Y+51	; 0x33
    15ca:	9c a9       	ldd	r25, Y+52	; 0x34
    15cc:	01 97       	sbiw	r24, 0x01	; 1
    15ce:	f1 f7       	brne	.-4      	; 0x15cc <lcd_set_4bit+0x9d8>
    15d0:	9c ab       	std	Y+52, r25	; 0x34
    15d2:	8b ab       	std	Y+51, r24	; 0x33
    15d4:	88 e2       	ldi	r24, 0x28	; 40
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	28 e2       	ldi	r18, 0x28	; 40
    15da:	30 e0       	ldi	r19, 0x00	; 0
    15dc:	f9 01       	movw	r30, r18
    15de:	20 81       	ld	r18, Z
    15e0:	2e 7f       	andi	r18, 0xFE	; 254
    15e2:	fc 01       	movw	r30, r24
    15e4:	20 83       	st	Z, r18
    15e6:	88 e2       	ldi	r24, 0x28	; 40
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	28 e2       	ldi	r18, 0x28	; 40
    15ec:	30 e0       	ldi	r19, 0x00	; 0
    15ee:	f9 01       	movw	r30, r18
    15f0:	20 81       	ld	r18, Z
    15f2:	2d 7f       	andi	r18, 0xFD	; 253
    15f4:	fc 01       	movw	r30, r24
    15f6:	20 83       	st	Z, r18
    15f8:	88 e2       	ldi	r24, 0x28	; 40
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	20 e2       	ldi	r18, 0x20	; 32
    15fe:	fc 01       	movw	r30, r24
    1600:	20 83       	st	Z, r18
    1602:	88 e2       	ldi	r24, 0x28	; 40
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	28 e2       	ldi	r18, 0x28	; 40
    1608:	30 e0       	ldi	r19, 0x00	; 0
    160a:	f9 01       	movw	r30, r18
    160c:	20 81       	ld	r18, Z
    160e:	24 60       	ori	r18, 0x04	; 4
    1610:	fc 01       	movw	r30, r24
    1612:	20 83       	st	Z, r18
    1614:	80 e0       	ldi	r24, 0x00	; 0
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	a0 ea       	ldi	r26, 0xA0	; 160
    161a:	b0 e4       	ldi	r27, 0x40	; 64
    161c:	8d 8f       	std	Y+29, r24	; 0x1d
    161e:	9e 8f       	std	Y+30, r25	; 0x1e
    1620:	af 8f       	std	Y+31, r26	; 0x1f
    1622:	b8 a3       	std	Y+32, r27	; 0x20
    1624:	26 e6       	ldi	r18, 0x66	; 102
    1626:	36 e6       	ldi	r19, 0x66	; 102
    1628:	46 e6       	ldi	r20, 0x66	; 102
    162a:	55 e4       	ldi	r21, 0x45	; 69
    162c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    162e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1630:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1632:	98 a1       	ldd	r25, Y+32	; 0x20
    1634:	c1 d6       	rcall	.+3458   	; 0x23b8 <__mulsf3>
    1636:	dc 01       	movw	r26, r24
    1638:	cb 01       	movw	r24, r22
    163a:	89 a3       	std	Y+33, r24	; 0x21
    163c:	9a a3       	std	Y+34, r25	; 0x22
    163e:	ab a3       	std	Y+35, r26	; 0x23
    1640:	bc a3       	std	Y+36, r27	; 0x24
    1642:	20 e0       	ldi	r18, 0x00	; 0
    1644:	30 e0       	ldi	r19, 0x00	; 0
    1646:	40 e8       	ldi	r20, 0x80	; 128
    1648:	5f e3       	ldi	r21, 0x3F	; 63
    164a:	69 a1       	ldd	r22, Y+33	; 0x21
    164c:	7a a1       	ldd	r23, Y+34	; 0x22
    164e:	8b a1       	ldd	r24, Y+35	; 0x23
    1650:	9c a1       	ldd	r25, Y+36	; 0x24
    1652:	64 d5       	rcall	.+2760   	; 0x211c <__cmpsf2>
    1654:	88 23       	and	r24, r24
    1656:	2c f4       	brge	.+10     	; 0x1662 <lcd_set_4bit+0xa6e>
    1658:	81 e0       	ldi	r24, 0x01	; 1
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	9e a3       	std	Y+38, r25	; 0x26
    165e:	8d a3       	std	Y+37, r24	; 0x25
    1660:	3b c0       	rjmp	.+118    	; 0x16d8 <lcd_set_4bit+0xae4>
    1662:	20 e0       	ldi	r18, 0x00	; 0
    1664:	3f ef       	ldi	r19, 0xFF	; 255
    1666:	4f e7       	ldi	r20, 0x7F	; 127
    1668:	57 e4       	ldi	r21, 0x47	; 71
    166a:	69 a1       	ldd	r22, Y+33	; 0x21
    166c:	7a a1       	ldd	r23, Y+34	; 0x22
    166e:	8b a1       	ldd	r24, Y+35	; 0x23
    1670:	9c a1       	ldd	r25, Y+36	; 0x24
    1672:	9e d6       	rcall	.+3388   	; 0x23b0 <__gesf2>
    1674:	18 16       	cp	r1, r24
    1676:	3c f5       	brge	.+78     	; 0x16c6 <lcd_set_4bit+0xad2>
    1678:	20 e0       	ldi	r18, 0x00	; 0
    167a:	30 e0       	ldi	r19, 0x00	; 0
    167c:	40 e2       	ldi	r20, 0x20	; 32
    167e:	51 e4       	ldi	r21, 0x41	; 65
    1680:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1682:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1684:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1686:	98 a1       	ldd	r25, Y+32	; 0x20
    1688:	97 d6       	rcall	.+3374   	; 0x23b8 <__mulsf3>
    168a:	dc 01       	movw	r26, r24
    168c:	cb 01       	movw	r24, r22
    168e:	bc 01       	movw	r22, r24
    1690:	cd 01       	movw	r24, r26
    1692:	b0 d5       	rcall	.+2912   	; 0x21f4 <__fixunssfsi>
    1694:	dc 01       	movw	r26, r24
    1696:	cb 01       	movw	r24, r22
    1698:	9e a3       	std	Y+38, r25	; 0x26
    169a:	8d a3       	std	Y+37, r24	; 0x25
    169c:	0f c0       	rjmp	.+30     	; 0x16bc <lcd_set_4bit+0xac8>
    169e:	80 e7       	ldi	r24, 0x70	; 112
    16a0:	91 e0       	ldi	r25, 0x01	; 1
    16a2:	98 a7       	std	Y+40, r25	; 0x28
    16a4:	8f a3       	std	Y+39, r24	; 0x27
    16a6:	8f a1       	ldd	r24, Y+39	; 0x27
    16a8:	98 a5       	ldd	r25, Y+40	; 0x28
    16aa:	01 97       	sbiw	r24, 0x01	; 1
    16ac:	f1 f7       	brne	.-4      	; 0x16aa <lcd_set_4bit+0xab6>
    16ae:	98 a7       	std	Y+40, r25	; 0x28
    16b0:	8f a3       	std	Y+39, r24	; 0x27
    16b2:	8d a1       	ldd	r24, Y+37	; 0x25
    16b4:	9e a1       	ldd	r25, Y+38	; 0x26
    16b6:	01 97       	sbiw	r24, 0x01	; 1
    16b8:	9e a3       	std	Y+38, r25	; 0x26
    16ba:	8d a3       	std	Y+37, r24	; 0x25
    16bc:	8d a1       	ldd	r24, Y+37	; 0x25
    16be:	9e a1       	ldd	r25, Y+38	; 0x26
    16c0:	89 2b       	or	r24, r25
    16c2:	69 f7       	brne	.-38     	; 0x169e <lcd_set_4bit+0xaaa>
    16c4:	13 c0       	rjmp	.+38     	; 0x16ec <lcd_set_4bit+0xaf8>
    16c6:	69 a1       	ldd	r22, Y+33	; 0x21
    16c8:	7a a1       	ldd	r23, Y+34	; 0x22
    16ca:	8b a1       	ldd	r24, Y+35	; 0x23
    16cc:	9c a1       	ldd	r25, Y+36	; 0x24
    16ce:	92 d5       	rcall	.+2852   	; 0x21f4 <__fixunssfsi>
    16d0:	dc 01       	movw	r26, r24
    16d2:	cb 01       	movw	r24, r22
    16d4:	9e a3       	std	Y+38, r25	; 0x26
    16d6:	8d a3       	std	Y+37, r24	; 0x25
    16d8:	8d a1       	ldd	r24, Y+37	; 0x25
    16da:	9e a1       	ldd	r25, Y+38	; 0x26
    16dc:	9a a7       	std	Y+42, r25	; 0x2a
    16de:	89 a7       	std	Y+41, r24	; 0x29
    16e0:	89 a5       	ldd	r24, Y+41	; 0x29
    16e2:	9a a5       	ldd	r25, Y+42	; 0x2a
    16e4:	01 97       	sbiw	r24, 0x01	; 1
    16e6:	f1 f7       	brne	.-4      	; 0x16e4 <lcd_set_4bit+0xaf0>
    16e8:	9a a7       	std	Y+42, r25	; 0x2a
    16ea:	89 a7       	std	Y+41, r24	; 0x29
    16ec:	88 e2       	ldi	r24, 0x28	; 40
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	28 e2       	ldi	r18, 0x28	; 40
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	f9 01       	movw	r30, r18
    16f6:	20 81       	ld	r18, Z
    16f8:	2b 7f       	andi	r18, 0xFB	; 251
    16fa:	fc 01       	movw	r30, r24
    16fc:	20 83       	st	Z, r18
    16fe:	00 00       	nop
    1700:	c0 59       	subi	r28, 0x90	; 144
    1702:	df 4f       	sbci	r29, 0xFF	; 255
    1704:	0f b6       	in	r0, 0x3f	; 63
    1706:	f8 94       	cli
    1708:	de bf       	out	0x3e, r29	; 62
    170a:	0f be       	out	0x3f, r0	; 63
    170c:	cd bf       	out	0x3d, r28	; 61
    170e:	df 91       	pop	r29
    1710:	cf 91       	pop	r28
    1712:	1f 91       	pop	r17
    1714:	0f 91       	pop	r16
    1716:	08 95       	ret

00001718 <lcd_wr_command>:
    1718:	cf 93       	push	r28
    171a:	df 93       	push	r29
    171c:	cd b7       	in	r28, 0x3d	; 61
    171e:	de b7       	in	r29, 0x3e	; 62
    1720:	6e 97       	sbiw	r28, 0x1e	; 30
    1722:	0f b6       	in	r0, 0x3f	; 63
    1724:	f8 94       	cli
    1726:	de bf       	out	0x3e, r29	; 62
    1728:	0f be       	out	0x3f, r0	; 63
    172a:	cd bf       	out	0x3d, r28	; 61
    172c:	8e 8f       	std	Y+30, r24	; 0x1e
    172e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1730:	89 83       	std	Y+1, r24	; 0x01
    1732:	89 81       	ldd	r24, Y+1	; 0x01
    1734:	80 7f       	andi	r24, 0xF0	; 240
    1736:	89 83       	std	Y+1, r24	; 0x01
    1738:	88 e2       	ldi	r24, 0x28	; 40
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	28 e2       	ldi	r18, 0x28	; 40
    173e:	30 e0       	ldi	r19, 0x00	; 0
    1740:	f9 01       	movw	r30, r18
    1742:	20 81       	ld	r18, Z
    1744:	2f 70       	andi	r18, 0x0F	; 15
    1746:	fc 01       	movw	r30, r24
    1748:	20 83       	st	Z, r18
    174a:	88 e2       	ldi	r24, 0x28	; 40
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	28 e2       	ldi	r18, 0x28	; 40
    1750:	30 e0       	ldi	r19, 0x00	; 0
    1752:	f9 01       	movw	r30, r18
    1754:	30 81       	ld	r19, Z
    1756:	29 81       	ldd	r18, Y+1	; 0x01
    1758:	23 2b       	or	r18, r19
    175a:	fc 01       	movw	r30, r24
    175c:	20 83       	st	Z, r18
    175e:	88 e2       	ldi	r24, 0x28	; 40
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	28 e2       	ldi	r18, 0x28	; 40
    1764:	30 e0       	ldi	r19, 0x00	; 0
    1766:	f9 01       	movw	r30, r18
    1768:	20 81       	ld	r18, Z
    176a:	2e 7f       	andi	r18, 0xFE	; 254
    176c:	fc 01       	movw	r30, r24
    176e:	20 83       	st	Z, r18
    1770:	88 e2       	ldi	r24, 0x28	; 40
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	28 e2       	ldi	r18, 0x28	; 40
    1776:	30 e0       	ldi	r19, 0x00	; 0
    1778:	f9 01       	movw	r30, r18
    177a:	20 81       	ld	r18, Z
    177c:	2d 7f       	andi	r18, 0xFD	; 253
    177e:	fc 01       	movw	r30, r24
    1780:	20 83       	st	Z, r18
    1782:	88 e2       	ldi	r24, 0x28	; 40
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	28 e2       	ldi	r18, 0x28	; 40
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	f9 01       	movw	r30, r18
    178c:	20 81       	ld	r18, Z
    178e:	24 60       	ori	r18, 0x04	; 4
    1790:	fc 01       	movw	r30, r24
    1792:	20 83       	st	Z, r18
    1794:	80 e0       	ldi	r24, 0x00	; 0
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	a0 ea       	ldi	r26, 0xA0	; 160
    179a:	b0 e4       	ldi	r27, 0x40	; 64
    179c:	8a 83       	std	Y+2, r24	; 0x02
    179e:	9b 83       	std	Y+3, r25	; 0x03
    17a0:	ac 83       	std	Y+4, r26	; 0x04
    17a2:	bd 83       	std	Y+5, r27	; 0x05
    17a4:	26 e6       	ldi	r18, 0x66	; 102
    17a6:	36 e6       	ldi	r19, 0x66	; 102
    17a8:	46 e6       	ldi	r20, 0x66	; 102
    17aa:	55 e4       	ldi	r21, 0x45	; 69
    17ac:	6a 81       	ldd	r22, Y+2	; 0x02
    17ae:	7b 81       	ldd	r23, Y+3	; 0x03
    17b0:	8c 81       	ldd	r24, Y+4	; 0x04
    17b2:	9d 81       	ldd	r25, Y+5	; 0x05
    17b4:	01 d6       	rcall	.+3074   	; 0x23b8 <__mulsf3>
    17b6:	dc 01       	movw	r26, r24
    17b8:	cb 01       	movw	r24, r22
    17ba:	8c 8b       	std	Y+20, r24	; 0x14
    17bc:	9d 8b       	std	Y+21, r25	; 0x15
    17be:	ae 8b       	std	Y+22, r26	; 0x16
    17c0:	bf 8b       	std	Y+23, r27	; 0x17
    17c2:	20 e0       	ldi	r18, 0x00	; 0
    17c4:	30 e0       	ldi	r19, 0x00	; 0
    17c6:	40 e8       	ldi	r20, 0x80	; 128
    17c8:	5f e3       	ldi	r21, 0x3F	; 63
    17ca:	6c 89       	ldd	r22, Y+20	; 0x14
    17cc:	7d 89       	ldd	r23, Y+21	; 0x15
    17ce:	8e 89       	ldd	r24, Y+22	; 0x16
    17d0:	9f 89       	ldd	r25, Y+23	; 0x17
    17d2:	a4 d4       	rcall	.+2376   	; 0x211c <__cmpsf2>
    17d4:	88 23       	and	r24, r24
    17d6:	2c f4       	brge	.+10     	; 0x17e2 <lcd_wr_command+0xca>
    17d8:	81 e0       	ldi	r24, 0x01	; 1
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	99 8f       	std	Y+25, r25	; 0x19
    17de:	88 8f       	std	Y+24, r24	; 0x18
    17e0:	3b c0       	rjmp	.+118    	; 0x1858 <lcd_wr_command+0x140>
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	3f ef       	ldi	r19, 0xFF	; 255
    17e6:	4f e7       	ldi	r20, 0x7F	; 127
    17e8:	57 e4       	ldi	r21, 0x47	; 71
    17ea:	6c 89       	ldd	r22, Y+20	; 0x14
    17ec:	7d 89       	ldd	r23, Y+21	; 0x15
    17ee:	8e 89       	ldd	r24, Y+22	; 0x16
    17f0:	9f 89       	ldd	r25, Y+23	; 0x17
    17f2:	de d5       	rcall	.+3004   	; 0x23b0 <__gesf2>
    17f4:	18 16       	cp	r1, r24
    17f6:	3c f5       	brge	.+78     	; 0x1846 <lcd_wr_command+0x12e>
    17f8:	20 e0       	ldi	r18, 0x00	; 0
    17fa:	30 e0       	ldi	r19, 0x00	; 0
    17fc:	40 e2       	ldi	r20, 0x20	; 32
    17fe:	51 e4       	ldi	r21, 0x41	; 65
    1800:	6a 81       	ldd	r22, Y+2	; 0x02
    1802:	7b 81       	ldd	r23, Y+3	; 0x03
    1804:	8c 81       	ldd	r24, Y+4	; 0x04
    1806:	9d 81       	ldd	r25, Y+5	; 0x05
    1808:	d7 d5       	rcall	.+2990   	; 0x23b8 <__mulsf3>
    180a:	dc 01       	movw	r26, r24
    180c:	cb 01       	movw	r24, r22
    180e:	bc 01       	movw	r22, r24
    1810:	cd 01       	movw	r24, r26
    1812:	f0 d4       	rcall	.+2528   	; 0x21f4 <__fixunssfsi>
    1814:	dc 01       	movw	r26, r24
    1816:	cb 01       	movw	r24, r22
    1818:	99 8f       	std	Y+25, r25	; 0x19
    181a:	88 8f       	std	Y+24, r24	; 0x18
    181c:	0f c0       	rjmp	.+30     	; 0x183c <lcd_wr_command+0x124>
    181e:	80 e7       	ldi	r24, 0x70	; 112
    1820:	91 e0       	ldi	r25, 0x01	; 1
    1822:	9b 8f       	std	Y+27, r25	; 0x1b
    1824:	8a 8f       	std	Y+26, r24	; 0x1a
    1826:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1828:	9b 8d       	ldd	r25, Y+27	; 0x1b
    182a:	01 97       	sbiw	r24, 0x01	; 1
    182c:	f1 f7       	brne	.-4      	; 0x182a <lcd_wr_command+0x112>
    182e:	9b 8f       	std	Y+27, r25	; 0x1b
    1830:	8a 8f       	std	Y+26, r24	; 0x1a
    1832:	88 8d       	ldd	r24, Y+24	; 0x18
    1834:	99 8d       	ldd	r25, Y+25	; 0x19
    1836:	01 97       	sbiw	r24, 0x01	; 1
    1838:	99 8f       	std	Y+25, r25	; 0x19
    183a:	88 8f       	std	Y+24, r24	; 0x18
    183c:	88 8d       	ldd	r24, Y+24	; 0x18
    183e:	99 8d       	ldd	r25, Y+25	; 0x19
    1840:	89 2b       	or	r24, r25
    1842:	69 f7       	brne	.-38     	; 0x181e <lcd_wr_command+0x106>
    1844:	13 c0       	rjmp	.+38     	; 0x186c <lcd_wr_command+0x154>
    1846:	6c 89       	ldd	r22, Y+20	; 0x14
    1848:	7d 89       	ldd	r23, Y+21	; 0x15
    184a:	8e 89       	ldd	r24, Y+22	; 0x16
    184c:	9f 89       	ldd	r25, Y+23	; 0x17
    184e:	d2 d4       	rcall	.+2468   	; 0x21f4 <__fixunssfsi>
    1850:	dc 01       	movw	r26, r24
    1852:	cb 01       	movw	r24, r22
    1854:	99 8f       	std	Y+25, r25	; 0x19
    1856:	88 8f       	std	Y+24, r24	; 0x18
    1858:	88 8d       	ldd	r24, Y+24	; 0x18
    185a:	99 8d       	ldd	r25, Y+25	; 0x19
    185c:	9d 8f       	std	Y+29, r25	; 0x1d
    185e:	8c 8f       	std	Y+28, r24	; 0x1c
    1860:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1862:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1864:	01 97       	sbiw	r24, 0x01	; 1
    1866:	f1 f7       	brne	.-4      	; 0x1864 <lcd_wr_command+0x14c>
    1868:	9d 8f       	std	Y+29, r25	; 0x1d
    186a:	8c 8f       	std	Y+28, r24	; 0x1c
    186c:	88 e2       	ldi	r24, 0x28	; 40
    186e:	90 e0       	ldi	r25, 0x00	; 0
    1870:	28 e2       	ldi	r18, 0x28	; 40
    1872:	30 e0       	ldi	r19, 0x00	; 0
    1874:	f9 01       	movw	r30, r18
    1876:	20 81       	ld	r18, Z
    1878:	2b 7f       	andi	r18, 0xFB	; 251
    187a:	fc 01       	movw	r30, r24
    187c:	20 83       	st	Z, r18
    187e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1880:	8f 70       	andi	r24, 0x0F	; 15
    1882:	8e 8f       	std	Y+30, r24	; 0x1e
    1884:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1886:	82 95       	swap	r24
    1888:	80 7f       	andi	r24, 0xF0	; 240
    188a:	8e 8f       	std	Y+30, r24	; 0x1e
    188c:	88 e2       	ldi	r24, 0x28	; 40
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	28 e2       	ldi	r18, 0x28	; 40
    1892:	30 e0       	ldi	r19, 0x00	; 0
    1894:	f9 01       	movw	r30, r18
    1896:	20 81       	ld	r18, Z
    1898:	2f 70       	andi	r18, 0x0F	; 15
    189a:	fc 01       	movw	r30, r24
    189c:	20 83       	st	Z, r18
    189e:	88 e2       	ldi	r24, 0x28	; 40
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	28 e2       	ldi	r18, 0x28	; 40
    18a4:	30 e0       	ldi	r19, 0x00	; 0
    18a6:	f9 01       	movw	r30, r18
    18a8:	30 81       	ld	r19, Z
    18aa:	2e 8d       	ldd	r18, Y+30	; 0x1e
    18ac:	23 2b       	or	r18, r19
    18ae:	fc 01       	movw	r30, r24
    18b0:	20 83       	st	Z, r18
    18b2:	88 e2       	ldi	r24, 0x28	; 40
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	28 e2       	ldi	r18, 0x28	; 40
    18b8:	30 e0       	ldi	r19, 0x00	; 0
    18ba:	f9 01       	movw	r30, r18
    18bc:	20 81       	ld	r18, Z
    18be:	2e 7f       	andi	r18, 0xFE	; 254
    18c0:	fc 01       	movw	r30, r24
    18c2:	20 83       	st	Z, r18
    18c4:	88 e2       	ldi	r24, 0x28	; 40
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	28 e2       	ldi	r18, 0x28	; 40
    18ca:	30 e0       	ldi	r19, 0x00	; 0
    18cc:	f9 01       	movw	r30, r18
    18ce:	20 81       	ld	r18, Z
    18d0:	2d 7f       	andi	r18, 0xFD	; 253
    18d2:	fc 01       	movw	r30, r24
    18d4:	20 83       	st	Z, r18
    18d6:	88 e2       	ldi	r24, 0x28	; 40
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	28 e2       	ldi	r18, 0x28	; 40
    18dc:	30 e0       	ldi	r19, 0x00	; 0
    18de:	f9 01       	movw	r30, r18
    18e0:	20 81       	ld	r18, Z
    18e2:	24 60       	ori	r18, 0x04	; 4
    18e4:	fc 01       	movw	r30, r24
    18e6:	20 83       	st	Z, r18
    18e8:	80 e0       	ldi	r24, 0x00	; 0
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	a0 ea       	ldi	r26, 0xA0	; 160
    18ee:	b0 e4       	ldi	r27, 0x40	; 64
    18f0:	8e 83       	std	Y+6, r24	; 0x06
    18f2:	9f 83       	std	Y+7, r25	; 0x07
    18f4:	a8 87       	std	Y+8, r26	; 0x08
    18f6:	b9 87       	std	Y+9, r27	; 0x09
    18f8:	26 e6       	ldi	r18, 0x66	; 102
    18fa:	36 e6       	ldi	r19, 0x66	; 102
    18fc:	46 e6       	ldi	r20, 0x66	; 102
    18fe:	55 e4       	ldi	r21, 0x45	; 69
    1900:	6e 81       	ldd	r22, Y+6	; 0x06
    1902:	7f 81       	ldd	r23, Y+7	; 0x07
    1904:	88 85       	ldd	r24, Y+8	; 0x08
    1906:	99 85       	ldd	r25, Y+9	; 0x09
    1908:	57 d5       	rcall	.+2734   	; 0x23b8 <__mulsf3>
    190a:	dc 01       	movw	r26, r24
    190c:	cb 01       	movw	r24, r22
    190e:	8a 87       	std	Y+10, r24	; 0x0a
    1910:	9b 87       	std	Y+11, r25	; 0x0b
    1912:	ac 87       	std	Y+12, r26	; 0x0c
    1914:	bd 87       	std	Y+13, r27	; 0x0d
    1916:	20 e0       	ldi	r18, 0x00	; 0
    1918:	30 e0       	ldi	r19, 0x00	; 0
    191a:	40 e8       	ldi	r20, 0x80	; 128
    191c:	5f e3       	ldi	r21, 0x3F	; 63
    191e:	6a 85       	ldd	r22, Y+10	; 0x0a
    1920:	7b 85       	ldd	r23, Y+11	; 0x0b
    1922:	8c 85       	ldd	r24, Y+12	; 0x0c
    1924:	9d 85       	ldd	r25, Y+13	; 0x0d
    1926:	fa d3       	rcall	.+2036   	; 0x211c <__cmpsf2>
    1928:	88 23       	and	r24, r24
    192a:	2c f4       	brge	.+10     	; 0x1936 <lcd_wr_command+0x21e>
    192c:	81 e0       	ldi	r24, 0x01	; 1
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	9f 87       	std	Y+15, r25	; 0x0f
    1932:	8e 87       	std	Y+14, r24	; 0x0e
    1934:	3b c0       	rjmp	.+118    	; 0x19ac <lcd_wr_command+0x294>
    1936:	20 e0       	ldi	r18, 0x00	; 0
    1938:	3f ef       	ldi	r19, 0xFF	; 255
    193a:	4f e7       	ldi	r20, 0x7F	; 127
    193c:	57 e4       	ldi	r21, 0x47	; 71
    193e:	6a 85       	ldd	r22, Y+10	; 0x0a
    1940:	7b 85       	ldd	r23, Y+11	; 0x0b
    1942:	8c 85       	ldd	r24, Y+12	; 0x0c
    1944:	9d 85       	ldd	r25, Y+13	; 0x0d
    1946:	34 d5       	rcall	.+2664   	; 0x23b0 <__gesf2>
    1948:	18 16       	cp	r1, r24
    194a:	3c f5       	brge	.+78     	; 0x199a <lcd_wr_command+0x282>
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 e2       	ldi	r20, 0x20	; 32
    1952:	51 e4       	ldi	r21, 0x41	; 65
    1954:	6e 81       	ldd	r22, Y+6	; 0x06
    1956:	7f 81       	ldd	r23, Y+7	; 0x07
    1958:	88 85       	ldd	r24, Y+8	; 0x08
    195a:	99 85       	ldd	r25, Y+9	; 0x09
    195c:	2d d5       	rcall	.+2650   	; 0x23b8 <__mulsf3>
    195e:	dc 01       	movw	r26, r24
    1960:	cb 01       	movw	r24, r22
    1962:	bc 01       	movw	r22, r24
    1964:	cd 01       	movw	r24, r26
    1966:	46 d4       	rcall	.+2188   	; 0x21f4 <__fixunssfsi>
    1968:	dc 01       	movw	r26, r24
    196a:	cb 01       	movw	r24, r22
    196c:	9f 87       	std	Y+15, r25	; 0x0f
    196e:	8e 87       	std	Y+14, r24	; 0x0e
    1970:	0f c0       	rjmp	.+30     	; 0x1990 <lcd_wr_command+0x278>
    1972:	80 e7       	ldi	r24, 0x70	; 112
    1974:	91 e0       	ldi	r25, 0x01	; 1
    1976:	99 8b       	std	Y+17, r25	; 0x11
    1978:	88 8b       	std	Y+16, r24	; 0x10
    197a:	88 89       	ldd	r24, Y+16	; 0x10
    197c:	99 89       	ldd	r25, Y+17	; 0x11
    197e:	01 97       	sbiw	r24, 0x01	; 1
    1980:	f1 f7       	brne	.-4      	; 0x197e <lcd_wr_command+0x266>
    1982:	99 8b       	std	Y+17, r25	; 0x11
    1984:	88 8b       	std	Y+16, r24	; 0x10
    1986:	8e 85       	ldd	r24, Y+14	; 0x0e
    1988:	9f 85       	ldd	r25, Y+15	; 0x0f
    198a:	01 97       	sbiw	r24, 0x01	; 1
    198c:	9f 87       	std	Y+15, r25	; 0x0f
    198e:	8e 87       	std	Y+14, r24	; 0x0e
    1990:	8e 85       	ldd	r24, Y+14	; 0x0e
    1992:	9f 85       	ldd	r25, Y+15	; 0x0f
    1994:	89 2b       	or	r24, r25
    1996:	69 f7       	brne	.-38     	; 0x1972 <lcd_wr_command+0x25a>
    1998:	13 c0       	rjmp	.+38     	; 0x19c0 <lcd_wr_command+0x2a8>
    199a:	6a 85       	ldd	r22, Y+10	; 0x0a
    199c:	7b 85       	ldd	r23, Y+11	; 0x0b
    199e:	8c 85       	ldd	r24, Y+12	; 0x0c
    19a0:	9d 85       	ldd	r25, Y+13	; 0x0d
    19a2:	28 d4       	rcall	.+2128   	; 0x21f4 <__fixunssfsi>
    19a4:	dc 01       	movw	r26, r24
    19a6:	cb 01       	movw	r24, r22
    19a8:	9f 87       	std	Y+15, r25	; 0x0f
    19aa:	8e 87       	std	Y+14, r24	; 0x0e
    19ac:	8e 85       	ldd	r24, Y+14	; 0x0e
    19ae:	9f 85       	ldd	r25, Y+15	; 0x0f
    19b0:	9b 8b       	std	Y+19, r25	; 0x13
    19b2:	8a 8b       	std	Y+18, r24	; 0x12
    19b4:	8a 89       	ldd	r24, Y+18	; 0x12
    19b6:	9b 89       	ldd	r25, Y+19	; 0x13
    19b8:	01 97       	sbiw	r24, 0x01	; 1
    19ba:	f1 f7       	brne	.-4      	; 0x19b8 <lcd_wr_command+0x2a0>
    19bc:	9b 8b       	std	Y+19, r25	; 0x13
    19be:	8a 8b       	std	Y+18, r24	; 0x12
    19c0:	88 e2       	ldi	r24, 0x28	; 40
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	28 e2       	ldi	r18, 0x28	; 40
    19c6:	30 e0       	ldi	r19, 0x00	; 0
    19c8:	f9 01       	movw	r30, r18
    19ca:	20 81       	ld	r18, Z
    19cc:	2b 7f       	andi	r18, 0xFB	; 251
    19ce:	fc 01       	movw	r30, r24
    19d0:	20 83       	st	Z, r18
    19d2:	00 00       	nop
    19d4:	6e 96       	adiw	r28, 0x1e	; 30
    19d6:	0f b6       	in	r0, 0x3f	; 63
    19d8:	f8 94       	cli
    19da:	de bf       	out	0x3e, r29	; 62
    19dc:	0f be       	out	0x3f, r0	; 63
    19de:	cd bf       	out	0x3d, r28	; 61
    19e0:	df 91       	pop	r29
    19e2:	cf 91       	pop	r28
    19e4:	08 95       	ret

000019e6 <lcd_init>:
    19e6:	cf 93       	push	r28
    19e8:	df 93       	push	r29
    19ea:	cd b7       	in	r28, 0x3d	; 61
    19ec:	de b7       	in	r29, 0x3e	; 62
    19ee:	2e 97       	sbiw	r28, 0x0e	; 14
    19f0:	0f b6       	in	r0, 0x3f	; 63
    19f2:	f8 94       	cli
    19f4:	de bf       	out	0x3e, r29	; 62
    19f6:	0f be       	out	0x3f, r0	; 63
    19f8:	cd bf       	out	0x3d, r28	; 61
    19fa:	fc d8       	rcall	.-3592   	; 0xbf4 <lcd_set_4bit>
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	a0 e8       	ldi	r26, 0x80	; 128
    1a02:	bf e3       	ldi	r27, 0x3F	; 63
    1a04:	89 83       	std	Y+1, r24	; 0x01
    1a06:	9a 83       	std	Y+2, r25	; 0x02
    1a08:	ab 83       	std	Y+3, r26	; 0x03
    1a0a:	bc 83       	std	Y+4, r27	; 0x04
    1a0c:	26 e6       	ldi	r18, 0x66	; 102
    1a0e:	36 e6       	ldi	r19, 0x66	; 102
    1a10:	46 e6       	ldi	r20, 0x66	; 102
    1a12:	55 e4       	ldi	r21, 0x45	; 69
    1a14:	69 81       	ldd	r22, Y+1	; 0x01
    1a16:	7a 81       	ldd	r23, Y+2	; 0x02
    1a18:	8b 81       	ldd	r24, Y+3	; 0x03
    1a1a:	9c 81       	ldd	r25, Y+4	; 0x04
    1a1c:	cd d4       	rcall	.+2458   	; 0x23b8 <__mulsf3>
    1a1e:	dc 01       	movw	r26, r24
    1a20:	cb 01       	movw	r24, r22
    1a22:	8d 83       	std	Y+5, r24	; 0x05
    1a24:	9e 83       	std	Y+6, r25	; 0x06
    1a26:	af 83       	std	Y+7, r26	; 0x07
    1a28:	b8 87       	std	Y+8, r27	; 0x08
    1a2a:	20 e0       	ldi	r18, 0x00	; 0
    1a2c:	30 e0       	ldi	r19, 0x00	; 0
    1a2e:	40 e8       	ldi	r20, 0x80	; 128
    1a30:	5f e3       	ldi	r21, 0x3F	; 63
    1a32:	6d 81       	ldd	r22, Y+5	; 0x05
    1a34:	7e 81       	ldd	r23, Y+6	; 0x06
    1a36:	8f 81       	ldd	r24, Y+7	; 0x07
    1a38:	98 85       	ldd	r25, Y+8	; 0x08
    1a3a:	70 d3       	rcall	.+1760   	; 0x211c <__cmpsf2>
    1a3c:	88 23       	and	r24, r24
    1a3e:	2c f4       	brge	.+10     	; 0x1a4a <lcd_init+0x64>
    1a40:	81 e0       	ldi	r24, 0x01	; 1
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	9a 87       	std	Y+10, r25	; 0x0a
    1a46:	89 87       	std	Y+9, r24	; 0x09
    1a48:	3b c0       	rjmp	.+118    	; 0x1ac0 <lcd_init+0xda>
    1a4a:	20 e0       	ldi	r18, 0x00	; 0
    1a4c:	3f ef       	ldi	r19, 0xFF	; 255
    1a4e:	4f e7       	ldi	r20, 0x7F	; 127
    1a50:	57 e4       	ldi	r21, 0x47	; 71
    1a52:	6d 81       	ldd	r22, Y+5	; 0x05
    1a54:	7e 81       	ldd	r23, Y+6	; 0x06
    1a56:	8f 81       	ldd	r24, Y+7	; 0x07
    1a58:	98 85       	ldd	r25, Y+8	; 0x08
    1a5a:	aa d4       	rcall	.+2388   	; 0x23b0 <__gesf2>
    1a5c:	18 16       	cp	r1, r24
    1a5e:	3c f5       	brge	.+78     	; 0x1aae <lcd_init+0xc8>
    1a60:	20 e0       	ldi	r18, 0x00	; 0
    1a62:	30 e0       	ldi	r19, 0x00	; 0
    1a64:	40 e2       	ldi	r20, 0x20	; 32
    1a66:	51 e4       	ldi	r21, 0x41	; 65
    1a68:	69 81       	ldd	r22, Y+1	; 0x01
    1a6a:	7a 81       	ldd	r23, Y+2	; 0x02
    1a6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a6e:	9c 81       	ldd	r25, Y+4	; 0x04
    1a70:	a3 d4       	rcall	.+2374   	; 0x23b8 <__mulsf3>
    1a72:	dc 01       	movw	r26, r24
    1a74:	cb 01       	movw	r24, r22
    1a76:	bc 01       	movw	r22, r24
    1a78:	cd 01       	movw	r24, r26
    1a7a:	bc d3       	rcall	.+1912   	; 0x21f4 <__fixunssfsi>
    1a7c:	dc 01       	movw	r26, r24
    1a7e:	cb 01       	movw	r24, r22
    1a80:	9a 87       	std	Y+10, r25	; 0x0a
    1a82:	89 87       	std	Y+9, r24	; 0x09
    1a84:	0f c0       	rjmp	.+30     	; 0x1aa4 <lcd_init+0xbe>
    1a86:	80 e7       	ldi	r24, 0x70	; 112
    1a88:	91 e0       	ldi	r25, 0x01	; 1
    1a8a:	9c 87       	std	Y+12, r25	; 0x0c
    1a8c:	8b 87       	std	Y+11, r24	; 0x0b
    1a8e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1a90:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a92:	01 97       	sbiw	r24, 0x01	; 1
    1a94:	f1 f7       	brne	.-4      	; 0x1a92 <lcd_init+0xac>
    1a96:	9c 87       	std	Y+12, r25	; 0x0c
    1a98:	8b 87       	std	Y+11, r24	; 0x0b
    1a9a:	89 85       	ldd	r24, Y+9	; 0x09
    1a9c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a9e:	01 97       	sbiw	r24, 0x01	; 1
    1aa0:	9a 87       	std	Y+10, r25	; 0x0a
    1aa2:	89 87       	std	Y+9, r24	; 0x09
    1aa4:	89 85       	ldd	r24, Y+9	; 0x09
    1aa6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1aa8:	89 2b       	or	r24, r25
    1aaa:	69 f7       	brne	.-38     	; 0x1a86 <lcd_init+0xa0>
    1aac:	13 c0       	rjmp	.+38     	; 0x1ad4 <lcd_init+0xee>
    1aae:	6d 81       	ldd	r22, Y+5	; 0x05
    1ab0:	7e 81       	ldd	r23, Y+6	; 0x06
    1ab2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ab4:	98 85       	ldd	r25, Y+8	; 0x08
    1ab6:	9e d3       	rcall	.+1852   	; 0x21f4 <__fixunssfsi>
    1ab8:	dc 01       	movw	r26, r24
    1aba:	cb 01       	movw	r24, r22
    1abc:	9a 87       	std	Y+10, r25	; 0x0a
    1abe:	89 87       	std	Y+9, r24	; 0x09
    1ac0:	89 85       	ldd	r24, Y+9	; 0x09
    1ac2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ac4:	9e 87       	std	Y+14, r25	; 0x0e
    1ac6:	8d 87       	std	Y+13, r24	; 0x0d
    1ac8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1aca:	9e 85       	ldd	r25, Y+14	; 0x0e
    1acc:	01 97       	sbiw	r24, 0x01	; 1
    1ace:	f1 f7       	brne	.-4      	; 0x1acc <lcd_init+0xe6>
    1ad0:	9e 87       	std	Y+14, r25	; 0x0e
    1ad2:	8d 87       	std	Y+13, r24	; 0x0d
    1ad4:	88 e2       	ldi	r24, 0x28	; 40
    1ad6:	20 de       	rcall	.-960    	; 0x1718 <lcd_wr_command>
    1ad8:	81 e0       	ldi	r24, 0x01	; 1
    1ada:	1e de       	rcall	.-964    	; 0x1718 <lcd_wr_command>
    1adc:	86 e0       	ldi	r24, 0x06	; 6
    1ade:	1c de       	rcall	.-968    	; 0x1718 <lcd_wr_command>
    1ae0:	8e e0       	ldi	r24, 0x0E	; 14
    1ae2:	1a de       	rcall	.-972    	; 0x1718 <lcd_wr_command>
    1ae4:	80 e8       	ldi	r24, 0x80	; 128
    1ae6:	18 de       	rcall	.-976    	; 0x1718 <lcd_wr_command>
    1ae8:	00 00       	nop
    1aea:	2e 96       	adiw	r28, 0x0e	; 14
    1aec:	0f b6       	in	r0, 0x3f	; 63
    1aee:	f8 94       	cli
    1af0:	de bf       	out	0x3e, r29	; 62
    1af2:	0f be       	out	0x3f, r0	; 63
    1af4:	cd bf       	out	0x3d, r28	; 61
    1af6:	df 91       	pop	r29
    1af8:	cf 91       	pop	r28
    1afa:	08 95       	ret

00001afc <lcd_home>:
    1afc:	cf 93       	push	r28
    1afe:	df 93       	push	r29
    1b00:	cd b7       	in	r28, 0x3d	; 61
    1b02:	de b7       	in	r29, 0x3e	; 62
    1b04:	80 e8       	ldi	r24, 0x80	; 128
    1b06:	08 de       	rcall	.-1008   	; 0x1718 <lcd_wr_command>
    1b08:	00 00       	nop
    1b0a:	df 91       	pop	r29
    1b0c:	cf 91       	pop	r28
    1b0e:	08 95       	ret

00001b10 <lcd_cursor>:
    1b10:	cf 93       	push	r28
    1b12:	df 93       	push	r29
    1b14:	1f 92       	push	r1
    1b16:	1f 92       	push	r1
    1b18:	cd b7       	in	r28, 0x3d	; 61
    1b1a:	de b7       	in	r29, 0x3e	; 62
    1b1c:	89 83       	std	Y+1, r24	; 0x01
    1b1e:	6a 83       	std	Y+2, r22	; 0x02
    1b20:	89 81       	ldd	r24, Y+1	; 0x01
    1b22:	88 2f       	mov	r24, r24
    1b24:	90 e0       	ldi	r25, 0x00	; 0
    1b26:	82 30       	cpi	r24, 0x02	; 2
    1b28:	91 05       	cpc	r25, r1
    1b2a:	81 f0       	breq	.+32     	; 0x1b4c <lcd_cursor+0x3c>
    1b2c:	83 30       	cpi	r24, 0x03	; 3
    1b2e:	91 05       	cpc	r25, r1
    1b30:	1c f4       	brge	.+6      	; 0x1b38 <lcd_cursor+0x28>
    1b32:	01 97       	sbiw	r24, 0x01	; 1
    1b34:	39 f0       	breq	.+14     	; 0x1b44 <lcd_cursor+0x34>
    1b36:	16 c0       	rjmp	.+44     	; 0x1b64 <lcd_cursor+0x54>
    1b38:	83 30       	cpi	r24, 0x03	; 3
    1b3a:	91 05       	cpc	r25, r1
    1b3c:	59 f0       	breq	.+22     	; 0x1b54 <lcd_cursor+0x44>
    1b3e:	04 97       	sbiw	r24, 0x04	; 4
    1b40:	69 f0       	breq	.+26     	; 0x1b5c <lcd_cursor+0x4c>
    1b42:	10 c0       	rjmp	.+32     	; 0x1b64 <lcd_cursor+0x54>
    1b44:	8a 81       	ldd	r24, Y+2	; 0x02
    1b46:	81 58       	subi	r24, 0x81	; 129
    1b48:	e7 dd       	rcall	.-1074   	; 0x1718 <lcd_wr_command>
    1b4a:	0c c0       	rjmp	.+24     	; 0x1b64 <lcd_cursor+0x54>
    1b4c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b4e:	81 54       	subi	r24, 0x41	; 65
    1b50:	e3 dd       	rcall	.-1082   	; 0x1718 <lcd_wr_command>
    1b52:	08 c0       	rjmp	.+16     	; 0x1b64 <lcd_cursor+0x54>
    1b54:	8a 81       	ldd	r24, Y+2	; 0x02
    1b56:	8d 56       	subi	r24, 0x6D	; 109
    1b58:	df dd       	rcall	.-1090   	; 0x1718 <lcd_wr_command>
    1b5a:	04 c0       	rjmp	.+8      	; 0x1b64 <lcd_cursor+0x54>
    1b5c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b5e:	8d 52       	subi	r24, 0x2D	; 45
    1b60:	db dd       	rcall	.-1098   	; 0x1718 <lcd_wr_command>
    1b62:	00 00       	nop
    1b64:	00 00       	nop
    1b66:	0f 90       	pop	r0
    1b68:	0f 90       	pop	r0
    1b6a:	df 91       	pop	r29
    1b6c:	cf 91       	pop	r28
    1b6e:	08 95       	ret

00001b70 <lcd_wr_char>:
 * Output: None
 * Logic: This function prints an alpha-numeric character at specified (row, column) position on LCD
 * Example Call: lcd_wr_char(1, 4, 'A') => to write character 'A' to the LCD
 */
void lcd_wr_char(char row, char column, char alpha_num_char)
{
    1b70:	cf 93       	push	r28
    1b72:	df 93       	push	r29
    1b74:	cd b7       	in	r28, 0x3d	; 61
    1b76:	de b7       	in	r29, 0x3e	; 62
    1b78:	a0 97       	sbiw	r28, 0x20	; 32
    1b7a:	0f b6       	in	r0, 0x3f	; 63
    1b7c:	f8 94       	cli
    1b7e:	de bf       	out	0x3e, r29	; 62
    1b80:	0f be       	out	0x3f, r0	; 63
    1b82:	cd bf       	out	0x3d, r28	; 61
    1b84:	8e 8f       	std	Y+30, r24	; 0x1e
    1b86:	6f 8f       	std	Y+31, r22	; 0x1f
    1b88:	48 a3       	std	Y+32, r20	; 0x20
	lcd_cursor (row, column);
    1b8a:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1b8c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1b8e:	c0 df       	rcall	.-128    	; 0x1b10 <lcd_cursor>
	
	char temp;
	
	temp = alpha_num_char;
    1b90:	88 a1       	ldd	r24, Y+32	; 0x20
    1b92:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp & 0xF0);
    1b94:	89 81       	ldd	r24, Y+1	; 0x01
    1b96:	80 7f       	andi	r24, 0xF0	; 240
    1b98:	89 83       	std	Y+1, r24	; 0x01
	lcd_data_port_reg &= 0x0F;
    1b9a:	88 e2       	ldi	r24, 0x28	; 40
    1b9c:	90 e0       	ldi	r25, 0x00	; 0
    1b9e:	28 e2       	ldi	r18, 0x28	; 40
    1ba0:	30 e0       	ldi	r19, 0x00	; 0
    1ba2:	f9 01       	movw	r30, r18
    1ba4:	20 81       	ld	r18, Z
    1ba6:	2f 70       	andi	r18, 0x0F	; 15
    1ba8:	fc 01       	movw	r30, r24
    1baa:	20 83       	st	Z, r18
	lcd_data_port_reg |= temp;
    1bac:	88 e2       	ldi	r24, 0x28	; 40
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	28 e2       	ldi	r18, 0x28	; 40
    1bb2:	30 e0       	ldi	r19, 0x00	; 0
    1bb4:	f9 01       	movw	r30, r18
    1bb6:	30 81       	ld	r19, Z
    1bb8:	29 81       	ldd	r18, Y+1	; 0x01
    1bba:	23 2b       	or	r18, r19
    1bbc:	fc 01       	movw	r30, r24
    1bbe:	20 83       	st	Z, r18
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
    1bc0:	88 e2       	ldi	r24, 0x28	; 40
    1bc2:	90 e0       	ldi	r25, 0x00	; 0
    1bc4:	28 e2       	ldi	r18, 0x28	; 40
    1bc6:	30 e0       	ldi	r19, 0x00	; 0
    1bc8:	f9 01       	movw	r30, r18
    1bca:	20 81       	ld	r18, Z
    1bcc:	21 60       	ori	r18, 0x01	; 1
    1bce:	fc 01       	movw	r30, r24
    1bd0:	20 83       	st	Z, r18
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
    1bd2:	88 e2       	ldi	r24, 0x28	; 40
    1bd4:	90 e0       	ldi	r25, 0x00	; 0
    1bd6:	28 e2       	ldi	r18, 0x28	; 40
    1bd8:	30 e0       	ldi	r19, 0x00	; 0
    1bda:	f9 01       	movw	r30, r18
    1bdc:	20 81       	ld	r18, Z
    1bde:	2d 7f       	andi	r18, 0xFD	; 253
    1be0:	fc 01       	movw	r30, r24
    1be2:	20 83       	st	Z, r18
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
    1be4:	88 e2       	ldi	r24, 0x28	; 40
    1be6:	90 e0       	ldi	r25, 0x00	; 0
    1be8:	28 e2       	ldi	r18, 0x28	; 40
    1bea:	30 e0       	ldi	r19, 0x00	; 0
    1bec:	f9 01       	movw	r30, r18
    1bee:	20 81       	ld	r18, Z
    1bf0:	24 60       	ori	r18, 0x04	; 4
    1bf2:	fc 01       	movw	r30, r24
    1bf4:	20 83       	st	Z, r18
    1bf6:	80 e0       	ldi	r24, 0x00	; 0
    1bf8:	90 e0       	ldi	r25, 0x00	; 0
    1bfa:	a0 ea       	ldi	r26, 0xA0	; 160
    1bfc:	b0 e4       	ldi	r27, 0x40	; 64
    1bfe:	8a 83       	std	Y+2, r24	; 0x02
    1c00:	9b 83       	std	Y+3, r25	; 0x03
    1c02:	ac 83       	std	Y+4, r26	; 0x04
    1c04:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1c06:	26 e6       	ldi	r18, 0x66	; 102
    1c08:	36 e6       	ldi	r19, 0x66	; 102
    1c0a:	46 e6       	ldi	r20, 0x66	; 102
    1c0c:	55 e4       	ldi	r21, 0x45	; 69
    1c0e:	6a 81       	ldd	r22, Y+2	; 0x02
    1c10:	7b 81       	ldd	r23, Y+3	; 0x03
    1c12:	8c 81       	ldd	r24, Y+4	; 0x04
    1c14:	9d 81       	ldd	r25, Y+5	; 0x05
    1c16:	d0 d3       	rcall	.+1952   	; 0x23b8 <__mulsf3>
    1c18:	dc 01       	movw	r26, r24
    1c1a:	cb 01       	movw	r24, r22
    1c1c:	8c 8b       	std	Y+20, r24	; 0x14
    1c1e:	9d 8b       	std	Y+21, r25	; 0x15
    1c20:	ae 8b       	std	Y+22, r26	; 0x16
    1c22:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
    1c24:	20 e0       	ldi	r18, 0x00	; 0
    1c26:	30 e0       	ldi	r19, 0x00	; 0
    1c28:	40 e8       	ldi	r20, 0x80	; 128
    1c2a:	5f e3       	ldi	r21, 0x3F	; 63
    1c2c:	6c 89       	ldd	r22, Y+20	; 0x14
    1c2e:	7d 89       	ldd	r23, Y+21	; 0x15
    1c30:	8e 89       	ldd	r24, Y+22	; 0x16
    1c32:	9f 89       	ldd	r25, Y+23	; 0x17
    1c34:	73 d2       	rcall	.+1254   	; 0x211c <__cmpsf2>
    1c36:	88 23       	and	r24, r24
    1c38:	2c f4       	brge	.+10     	; 0x1c44 <lcd_wr_char+0xd4>
		__ticks = 1;
    1c3a:	81 e0       	ldi	r24, 0x01	; 1
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	99 8f       	std	Y+25, r25	; 0x19
    1c40:	88 8f       	std	Y+24, r24	; 0x18
    1c42:	3b c0       	rjmp	.+118    	; 0x1cba <lcd_wr_char+0x14a>
	else if (__tmp > 65535)
    1c44:	20 e0       	ldi	r18, 0x00	; 0
    1c46:	3f ef       	ldi	r19, 0xFF	; 255
    1c48:	4f e7       	ldi	r20, 0x7F	; 127
    1c4a:	57 e4       	ldi	r21, 0x47	; 71
    1c4c:	6c 89       	ldd	r22, Y+20	; 0x14
    1c4e:	7d 89       	ldd	r23, Y+21	; 0x15
    1c50:	8e 89       	ldd	r24, Y+22	; 0x16
    1c52:	9f 89       	ldd	r25, Y+23	; 0x17
    1c54:	ad d3       	rcall	.+1882   	; 0x23b0 <__gesf2>
    1c56:	18 16       	cp	r1, r24
    1c58:	3c f5       	brge	.+78     	; 0x1ca8 <lcd_wr_char+0x138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c5a:	20 e0       	ldi	r18, 0x00	; 0
    1c5c:	30 e0       	ldi	r19, 0x00	; 0
    1c5e:	40 e2       	ldi	r20, 0x20	; 32
    1c60:	51 e4       	ldi	r21, 0x41	; 65
    1c62:	6a 81       	ldd	r22, Y+2	; 0x02
    1c64:	7b 81       	ldd	r23, Y+3	; 0x03
    1c66:	8c 81       	ldd	r24, Y+4	; 0x04
    1c68:	9d 81       	ldd	r25, Y+5	; 0x05
    1c6a:	a6 d3       	rcall	.+1868   	; 0x23b8 <__mulsf3>
    1c6c:	dc 01       	movw	r26, r24
    1c6e:	cb 01       	movw	r24, r22
    1c70:	bc 01       	movw	r22, r24
    1c72:	cd 01       	movw	r24, r26
    1c74:	bf d2       	rcall	.+1406   	; 0x21f4 <__fixunssfsi>
    1c76:	dc 01       	movw	r26, r24
    1c78:	cb 01       	movw	r24, r22
    1c7a:	99 8f       	std	Y+25, r25	; 0x19
    1c7c:	88 8f       	std	Y+24, r24	; 0x18
    1c7e:	0f c0       	rjmp	.+30     	; 0x1c9e <lcd_wr_char+0x12e>
    1c80:	80 e7       	ldi	r24, 0x70	; 112
    1c82:	91 e0       	ldi	r25, 0x01	; 1
    1c84:	9b 8f       	std	Y+27, r25	; 0x1b
    1c86:	8a 8f       	std	Y+26, r24	; 0x1a
    1c88:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1c8a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1c8c:	01 97       	sbiw	r24, 0x01	; 1
    1c8e:	f1 f7       	brne	.-4      	; 0x1c8c <lcd_wr_char+0x11c>
    1c90:	9b 8f       	std	Y+27, r25	; 0x1b
    1c92:	8a 8f       	std	Y+26, r24	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c94:	88 8d       	ldd	r24, Y+24	; 0x18
    1c96:	99 8d       	ldd	r25, Y+25	; 0x19
    1c98:	01 97       	sbiw	r24, 0x01	; 1
    1c9a:	99 8f       	std	Y+25, r25	; 0x19
    1c9c:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c9e:	88 8d       	ldd	r24, Y+24	; 0x18
    1ca0:	99 8d       	ldd	r25, Y+25	; 0x19
    1ca2:	89 2b       	or	r24, r25
    1ca4:	69 f7       	brne	.-38     	; 0x1c80 <lcd_wr_char+0x110>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ca6:	13 c0       	rjmp	.+38     	; 0x1cce <lcd_wr_char+0x15e>
    1ca8:	6c 89       	ldd	r22, Y+20	; 0x14
    1caa:	7d 89       	ldd	r23, Y+21	; 0x15
    1cac:	8e 89       	ldd	r24, Y+22	; 0x16
    1cae:	9f 89       	ldd	r25, Y+23	; 0x17
    1cb0:	a1 d2       	rcall	.+1346   	; 0x21f4 <__fixunssfsi>
    1cb2:	dc 01       	movw	r26, r24
    1cb4:	cb 01       	movw	r24, r22
    1cb6:	99 8f       	std	Y+25, r25	; 0x19
    1cb8:	88 8f       	std	Y+24, r24	; 0x18
    1cba:	88 8d       	ldd	r24, Y+24	; 0x18
    1cbc:	99 8d       	ldd	r25, Y+25	; 0x19
    1cbe:	9d 8f       	std	Y+29, r25	; 0x1d
    1cc0:	8c 8f       	std	Y+28, r24	; 0x1c
    1cc2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1cc4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1cc6:	01 97       	sbiw	r24, 0x01	; 1
    1cc8:	f1 f7       	brne	.-4      	; 0x1cc6 <lcd_wr_char+0x156>
    1cca:	9d 8f       	std	Y+29, r25	; 0x1d
    1ccc:	8c 8f       	std	Y+28, r24	; 0x1c
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
    1cce:	88 e2       	ldi	r24, 0x28	; 40
    1cd0:	90 e0       	ldi	r25, 0x00	; 0
    1cd2:	28 e2       	ldi	r18, 0x28	; 40
    1cd4:	30 e0       	ldi	r19, 0x00	; 0
    1cd6:	f9 01       	movw	r30, r18
    1cd8:	20 81       	ld	r18, Z
    1cda:	2b 7f       	andi	r18, 0xFB	; 251
    1cdc:	fc 01       	movw	r30, r24
    1cde:	20 83       	st	Z, r18
	
	alpha_num_char = (alpha_num_char & 0x0F);
    1ce0:	88 a1       	ldd	r24, Y+32	; 0x20
    1ce2:	8f 70       	andi	r24, 0x0F	; 15
    1ce4:	88 a3       	std	Y+32, r24	; 0x20
	alpha_num_char = (alpha_num_char << 4);
    1ce6:	88 a1       	ldd	r24, Y+32	; 0x20
    1ce8:	82 95       	swap	r24
    1cea:	80 7f       	andi	r24, 0xF0	; 240
    1cec:	88 a3       	std	Y+32, r24	; 0x20
	lcd_data_port_reg &= 0x0F;
    1cee:	88 e2       	ldi	r24, 0x28	; 40
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	28 e2       	ldi	r18, 0x28	; 40
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	f9 01       	movw	r30, r18
    1cf8:	20 81       	ld	r18, Z
    1cfa:	2f 70       	andi	r18, 0x0F	; 15
    1cfc:	fc 01       	movw	r30, r24
    1cfe:	20 83       	st	Z, r18
	lcd_data_port_reg |= alpha_num_char;
    1d00:	88 e2       	ldi	r24, 0x28	; 40
    1d02:	90 e0       	ldi	r25, 0x00	; 0
    1d04:	28 e2       	ldi	r18, 0x28	; 40
    1d06:	30 e0       	ldi	r19, 0x00	; 0
    1d08:	f9 01       	movw	r30, r18
    1d0a:	30 81       	ld	r19, Z
    1d0c:	28 a1       	ldd	r18, Y+32	; 0x20
    1d0e:	23 2b       	or	r18, r19
    1d10:	fc 01       	movw	r30, r24
    1d12:	20 83       	st	Z, r18
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
    1d14:	88 e2       	ldi	r24, 0x28	; 40
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	28 e2       	ldi	r18, 0x28	; 40
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	f9 01       	movw	r30, r18
    1d1e:	20 81       	ld	r18, Z
    1d20:	21 60       	ori	r18, 0x01	; 1
    1d22:	fc 01       	movw	r30, r24
    1d24:	20 83       	st	Z, r18
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
    1d26:	88 e2       	ldi	r24, 0x28	; 40
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	28 e2       	ldi	r18, 0x28	; 40
    1d2c:	30 e0       	ldi	r19, 0x00	; 0
    1d2e:	f9 01       	movw	r30, r18
    1d30:	20 81       	ld	r18, Z
    1d32:	2d 7f       	andi	r18, 0xFD	; 253
    1d34:	fc 01       	movw	r30, r24
    1d36:	20 83       	st	Z, r18
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
    1d38:	88 e2       	ldi	r24, 0x28	; 40
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	28 e2       	ldi	r18, 0x28	; 40
    1d3e:	30 e0       	ldi	r19, 0x00	; 0
    1d40:	f9 01       	movw	r30, r18
    1d42:	20 81       	ld	r18, Z
    1d44:	24 60       	ori	r18, 0x04	; 4
    1d46:	fc 01       	movw	r30, r24
    1d48:	20 83       	st	Z, r18
    1d4a:	80 e0       	ldi	r24, 0x00	; 0
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	a0 ea       	ldi	r26, 0xA0	; 160
    1d50:	b0 e4       	ldi	r27, 0x40	; 64
    1d52:	8e 83       	std	Y+6, r24	; 0x06
    1d54:	9f 83       	std	Y+7, r25	; 0x07
    1d56:	a8 87       	std	Y+8, r26	; 0x08
    1d58:	b9 87       	std	Y+9, r27	; 0x09

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1d5a:	26 e6       	ldi	r18, 0x66	; 102
    1d5c:	36 e6       	ldi	r19, 0x66	; 102
    1d5e:	46 e6       	ldi	r20, 0x66	; 102
    1d60:	55 e4       	ldi	r21, 0x45	; 69
    1d62:	6e 81       	ldd	r22, Y+6	; 0x06
    1d64:	7f 81       	ldd	r23, Y+7	; 0x07
    1d66:	88 85       	ldd	r24, Y+8	; 0x08
    1d68:	99 85       	ldd	r25, Y+9	; 0x09
    1d6a:	26 d3       	rcall	.+1612   	; 0x23b8 <__mulsf3>
    1d6c:	dc 01       	movw	r26, r24
    1d6e:	cb 01       	movw	r24, r22
    1d70:	8a 87       	std	Y+10, r24	; 0x0a
    1d72:	9b 87       	std	Y+11, r25	; 0x0b
    1d74:	ac 87       	std	Y+12, r26	; 0x0c
    1d76:	bd 87       	std	Y+13, r27	; 0x0d
	if (__tmp < 1.0)
    1d78:	20 e0       	ldi	r18, 0x00	; 0
    1d7a:	30 e0       	ldi	r19, 0x00	; 0
    1d7c:	40 e8       	ldi	r20, 0x80	; 128
    1d7e:	5f e3       	ldi	r21, 0x3F	; 63
    1d80:	6a 85       	ldd	r22, Y+10	; 0x0a
    1d82:	7b 85       	ldd	r23, Y+11	; 0x0b
    1d84:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d86:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d88:	c9 d1       	rcall	.+914    	; 0x211c <__cmpsf2>
    1d8a:	88 23       	and	r24, r24
    1d8c:	2c f4       	brge	.+10     	; 0x1d98 <lcd_wr_char+0x228>
		__ticks = 1;
    1d8e:	81 e0       	ldi	r24, 0x01	; 1
    1d90:	90 e0       	ldi	r25, 0x00	; 0
    1d92:	9f 87       	std	Y+15, r25	; 0x0f
    1d94:	8e 87       	std	Y+14, r24	; 0x0e
	else if (__tmp > 65535)
    1d96:	3b c0       	rjmp	.+118    	; 0x1e0e <lcd_wr_char+0x29e>
    1d98:	20 e0       	ldi	r18, 0x00	; 0
    1d9a:	3f ef       	ldi	r19, 0xFF	; 255
    1d9c:	4f e7       	ldi	r20, 0x7F	; 127
    1d9e:	57 e4       	ldi	r21, 0x47	; 71
    1da0:	6a 85       	ldd	r22, Y+10	; 0x0a
    1da2:	7b 85       	ldd	r23, Y+11	; 0x0b
    1da4:	8c 85       	ldd	r24, Y+12	; 0x0c
    1da6:	9d 85       	ldd	r25, Y+13	; 0x0d
    1da8:	03 d3       	rcall	.+1542   	; 0x23b0 <__gesf2>
    1daa:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dac:	3c f5       	brge	.+78     	; 0x1dfc <lcd_wr_char+0x28c>
    1dae:	20 e0       	ldi	r18, 0x00	; 0
    1db0:	30 e0       	ldi	r19, 0x00	; 0
    1db2:	40 e2       	ldi	r20, 0x20	; 32
    1db4:	51 e4       	ldi	r21, 0x41	; 65
    1db6:	6e 81       	ldd	r22, Y+6	; 0x06
    1db8:	7f 81       	ldd	r23, Y+7	; 0x07
    1dba:	88 85       	ldd	r24, Y+8	; 0x08
    1dbc:	99 85       	ldd	r25, Y+9	; 0x09
    1dbe:	fc d2       	rcall	.+1528   	; 0x23b8 <__mulsf3>
    1dc0:	dc 01       	movw	r26, r24
    1dc2:	cb 01       	movw	r24, r22
    1dc4:	bc 01       	movw	r22, r24
    1dc6:	cd 01       	movw	r24, r26
    1dc8:	15 d2       	rcall	.+1066   	; 0x21f4 <__fixunssfsi>
    1dca:	dc 01       	movw	r26, r24
    1dcc:	cb 01       	movw	r24, r22
    1dce:	9f 87       	std	Y+15, r25	; 0x0f
    1dd0:	8e 87       	std	Y+14, r24	; 0x0e
    1dd2:	0f c0       	rjmp	.+30     	; 0x1df2 <lcd_wr_char+0x282>
    1dd4:	80 e7       	ldi	r24, 0x70	; 112
    1dd6:	91 e0       	ldi	r25, 0x01	; 1
    1dd8:	99 8b       	std	Y+17, r25	; 0x11
    1dda:	88 8b       	std	Y+16, r24	; 0x10
    1ddc:	88 89       	ldd	r24, Y+16	; 0x10
    1dde:	99 89       	ldd	r25, Y+17	; 0x11
    1de0:	01 97       	sbiw	r24, 0x01	; 1
    1de2:	f1 f7       	brne	.-4      	; 0x1de0 <lcd_wr_char+0x270>
    1de4:	99 8b       	std	Y+17, r25	; 0x11
    1de6:	88 8b       	std	Y+16, r24	; 0x10
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1de8:	8e 85       	ldd	r24, Y+14	; 0x0e
    1dea:	9f 85       	ldd	r25, Y+15	; 0x0f
    1dec:	01 97       	sbiw	r24, 0x01	; 1
    1dee:	9f 87       	std	Y+15, r25	; 0x0f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1df0:	8e 87       	std	Y+14, r24	; 0x0e
    1df2:	8e 85       	ldd	r24, Y+14	; 0x0e
    1df4:	9f 85       	ldd	r25, Y+15	; 0x0f
    1df6:	89 2b       	or	r24, r25
    1df8:	69 f7       	brne	.-38     	; 0x1dd4 <lcd_wr_char+0x264>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dfa:	13 c0       	rjmp	.+38     	; 0x1e22 <lcd_wr_char+0x2b2>
    1dfc:	6a 85       	ldd	r22, Y+10	; 0x0a
    1dfe:	7b 85       	ldd	r23, Y+11	; 0x0b
    1e00:	8c 85       	ldd	r24, Y+12	; 0x0c
    1e02:	9d 85       	ldd	r25, Y+13	; 0x0d
    1e04:	f7 d1       	rcall	.+1006   	; 0x21f4 <__fixunssfsi>
    1e06:	dc 01       	movw	r26, r24
    1e08:	cb 01       	movw	r24, r22
    1e0a:	9f 87       	std	Y+15, r25	; 0x0f
    1e0c:	8e 87       	std	Y+14, r24	; 0x0e
    1e0e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1e10:	9f 85       	ldd	r25, Y+15	; 0x0f
    1e12:	9b 8b       	std	Y+19, r25	; 0x13
    1e14:	8a 8b       	std	Y+18, r24	; 0x12
    1e16:	8a 89       	ldd	r24, Y+18	; 0x12
    1e18:	9b 89       	ldd	r25, Y+19	; 0x13
    1e1a:	01 97       	sbiw	r24, 0x01	; 1
    1e1c:	f1 f7       	brne	.-4      	; 0x1e1a <lcd_wr_char+0x2aa>
    1e1e:	9b 8b       	std	Y+19, r25	; 0x13
    1e20:	8a 8b       	std	Y+18, r24	; 0x12
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
    1e22:	88 e2       	ldi	r24, 0x28	; 40
    1e24:	90 e0       	ldi	r25, 0x00	; 0
    1e26:	28 e2       	ldi	r18, 0x28	; 40
    1e28:	30 e0       	ldi	r19, 0x00	; 0
    1e2a:	f9 01       	movw	r30, r18
    1e2c:	20 81       	ld	r18, Z
    1e2e:	2b 7f       	andi	r18, 0xFB	; 251
    1e30:	fc 01       	movw	r30, r24
    1e32:	20 83       	st	Z, r18
}
    1e34:	00 00       	nop
    1e36:	a0 96       	adiw	r28, 0x20	; 32
    1e38:	0f b6       	in	r0, 0x3f	; 63
    1e3a:	f8 94       	cli
    1e3c:	de bf       	out	0x3e, r29	; 62
    1e3e:	0f be       	out	0x3f, r0	; 63
    1e40:	cd bf       	out	0x3d, r28	; 61
    1e42:	df 91       	pop	r29
    1e44:	cf 91       	pop	r28
    1e46:	08 95       	ret

00001e48 <lcd_string>:
 * Output: This function prints the given string on the LCD at the specified (row, column) position
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
    1e48:	cf 93       	push	r28
    1e4a:	df 93       	push	r29
    1e4c:	00 d0       	rcall	.+0      	; 0x1e4e <lcd_string+0x6>
    1e4e:	1f 92       	push	r1
    1e50:	cd b7       	in	r28, 0x3d	; 61
    1e52:	de b7       	in	r29, 0x3e	; 62
    1e54:	89 83       	std	Y+1, r24	; 0x01
    1e56:	6a 83       	std	Y+2, r22	; 0x02
    1e58:	5c 83       	std	Y+4, r21	; 0x04
    1e5a:	4b 83       	std	Y+3, r20	; 0x03
	while(*str != '\0')
    1e5c:	10 c0       	rjmp	.+32     	; 0x1e7e <lcd_string+0x36>
	{
		lcd_wr_char(row, column, *str);
    1e5e:	8b 81       	ldd	r24, Y+3	; 0x03
    1e60:	9c 81       	ldd	r25, Y+4	; 0x04
    1e62:	fc 01       	movw	r30, r24
    1e64:	80 81       	ld	r24, Z
    1e66:	48 2f       	mov	r20, r24
    1e68:	6a 81       	ldd	r22, Y+2	; 0x02
    1e6a:	89 81       	ldd	r24, Y+1	; 0x01
    1e6c:	81 de       	rcall	.-766    	; 0x1b70 <lcd_wr_char>
		str++;
    1e6e:	8b 81       	ldd	r24, Y+3	; 0x03
    1e70:	9c 81       	ldd	r25, Y+4	; 0x04
    1e72:	01 96       	adiw	r24, 0x01	; 1
    1e74:	9c 83       	std	Y+4, r25	; 0x04
    1e76:	8b 83       	std	Y+3, r24	; 0x03
		column+=1;
    1e78:	8a 81       	ldd	r24, Y+2	; 0x02
    1e7a:	8f 5f       	subi	r24, 0xFF	; 255
    1e7c:	8a 83       	std	Y+2, r24	; 0x02
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
	while(*str != '\0')
    1e7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1e80:	9c 81       	ldd	r25, Y+4	; 0x04
    1e82:	fc 01       	movw	r30, r24
    1e84:	80 81       	ld	r24, Z
    1e86:	88 23       	and	r24, r24
    1e88:	51 f7       	brne	.-44     	; 0x1e5e <lcd_string+0x16>
	{
		lcd_wr_char(row, column, *str);
		str++;
		column+=1;
	}
}
    1e8a:	00 00       	nop
    1e8c:	0f 90       	pop	r0
    1e8e:	0f 90       	pop	r0
    1e90:	0f 90       	pop	r0
    1e92:	0f 90       	pop	r0
    1e94:	df 91       	pop	r29
    1e96:	cf 91       	pop	r28
    1e98:	08 95       	ret

00001e9a <lcd_numeric_value>:
 * Output: This function prints any integer value or value in a variable as integer
  *        on the specified location and up to the specified number of digits on LCD
 * Example Call: lcd_numeric_value(1, 1, -20, 2);
 */
void lcd_numeric_value(char row, char column, int val, int digits)
{
    1e9a:	cf 93       	push	r28
    1e9c:	df 93       	push	r29
    1e9e:	cd b7       	in	r28, 0x3d	; 61
    1ea0:	de b7       	in	r29, 0x3e	; 62
    1ea2:	27 97       	sbiw	r28, 0x07	; 7
    1ea4:	0f b6       	in	r0, 0x3f	; 63
    1ea6:	f8 94       	cli
    1ea8:	de bf       	out	0x3e, r29	; 62
    1eaa:	0f be       	out	0x3f, r0	; 63
    1eac:	cd bf       	out	0x3d, r28	; 61
    1eae:	8a 83       	std	Y+2, r24	; 0x02
    1eb0:	6b 83       	std	Y+3, r22	; 0x03
    1eb2:	5d 83       	std	Y+5, r21	; 0x05
    1eb4:	4c 83       	std	Y+4, r20	; 0x04
    1eb6:	3f 83       	std	Y+7, r19	; 0x07
    1eb8:	2e 83       	std	Y+6, r18	; 0x06
	lcd_cursor(row, column);
    1eba:	6b 81       	ldd	r22, Y+3	; 0x03
    1ebc:	8a 81       	ldd	r24, Y+2	; 0x02
    1ebe:	28 de       	rcall	.-944    	; 0x1b10 <lcd_cursor>
	
	if (val < 0)
    1ec0:	8c 81       	ldd	r24, Y+4	; 0x04
    1ec2:	9d 81       	ldd	r25, Y+5	; 0x05
    1ec4:	99 23       	and	r25, r25
    1ec6:	7c f4       	brge	.+30     	; 0x1ee6 <lcd_numeric_value+0x4c>
	{
		val = 0 - val;
    1ec8:	8c 81       	ldd	r24, Y+4	; 0x04
    1eca:	9d 81       	ldd	r25, Y+5	; 0x05
    1ecc:	91 95       	neg	r25
    1ece:	81 95       	neg	r24
    1ed0:	91 09       	sbc	r25, r1
    1ed2:	9d 83       	std	Y+5, r25	; 0x05
    1ed4:	8c 83       	std	Y+4, r24	; 0x04
		lcd_string(row, column, "-");
    1ed6:	4e e0       	ldi	r20, 0x0E	; 14
    1ed8:	52 e0       	ldi	r21, 0x02	; 2
    1eda:	6b 81       	ldd	r22, Y+3	; 0x03
    1edc:	8a 81       	ldd	r24, Y+2	; 0x02
    1ede:	b4 df       	rcall	.-152    	; 0x1e48 <lcd_string>
		column+=1;
    1ee0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ee2:	8f 5f       	subi	r24, 0xFF	; 255
    1ee4:	8b 83       	std	Y+3, r24	; 0x03
	}
		
	unsigned char flag = 0;
    1ee6:	19 82       	std	Y+1, r1	; 0x01
	
	if(row == 0 || column == 0)
    1ee8:	8a 81       	ldd	r24, Y+2	; 0x02
    1eea:	88 23       	and	r24, r24
    1eec:	19 f0       	breq	.+6      	; 0x1ef4 <lcd_numeric_value+0x5a>
    1eee:	8b 81       	ldd	r24, Y+3	; 0x03
    1ef0:	88 23       	and	r24, r24
	{
		lcd_home();
    1ef2:	11 f4       	brne	.+4      	; 0x1ef8 <lcd_numeric_value+0x5e>
    1ef4:	03 de       	rcall	.-1018   	; 0x1afc <lcd_home>
	}
	
	else
	{
		lcd_cursor(row, column);
    1ef6:	03 c0       	rjmp	.+6      	; 0x1efe <lcd_numeric_value+0x64>
    1ef8:	6b 81       	ldd	r22, Y+3	; 0x03
    1efa:	8a 81       	ldd	r24, Y+2	; 0x02
    1efc:	09 de       	rcall	.-1006   	; 0x1b10 <lcd_cursor>
	}
	
	if(digits == 5 || flag == 1)
    1efe:	8e 81       	ldd	r24, Y+6	; 0x06
    1f00:	9f 81       	ldd	r25, Y+7	; 0x07
    1f02:	05 97       	sbiw	r24, 0x05	; 5
    1f04:	19 f0       	breq	.+6      	; 0x1f0c <lcd_numeric_value+0x72>
    1f06:	89 81       	ldd	r24, Y+1	; 0x01
    1f08:	81 30       	cpi	r24, 0x01	; 1
    1f0a:	c9 f4       	brne	.+50     	; 0x1f3e <lcd_numeric_value+0xa4>
	{
		million = val/10000+48;
    1f0c:	8c 81       	ldd	r24, Y+4	; 0x04
    1f0e:	9d 81       	ldd	r25, Y+5	; 0x05
    1f10:	20 e1       	ldi	r18, 0x10	; 16
    1f12:	37 e2       	ldi	r19, 0x27	; 39
    1f14:	b9 01       	movw	r22, r18
    1f16:	b3 d2       	rcall	.+1382   	; 0x247e <__divmodhi4>
    1f18:	cb 01       	movw	r24, r22
    1f1a:	c0 96       	adiw	r24, 0x30	; 48
    1f1c:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <million+0x1>
    1f20:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <million>
		lcd_wr_char(row ,column, million);
    1f24:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <million>
    1f28:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <million+0x1>
    1f2c:	48 2f       	mov	r20, r24
    1f2e:	6b 81       	ldd	r22, Y+3	; 0x03
    1f30:	8a 81       	ldd	r24, Y+2	; 0x02
    1f32:	1e de       	rcall	.-964    	; 0x1b70 <lcd_wr_char>
		column+=1;
    1f34:	8b 81       	ldd	r24, Y+3	; 0x03
    1f36:	8f 5f       	subi	r24, 0xFF	; 255
    1f38:	8b 83       	std	Y+3, r24	; 0x03
		flag = 1;
    1f3a:	81 e0       	ldi	r24, 0x01	; 1
    1f3c:	89 83       	std	Y+1, r24	; 0x01
	}
	
	if(digits == 4 || flag == 1)
    1f3e:	8e 81       	ldd	r24, Y+6	; 0x06
    1f40:	9f 81       	ldd	r25, Y+7	; 0x07
    1f42:	04 97       	sbiw	r24, 0x04	; 4
    1f44:	19 f0       	breq	.+6      	; 0x1f4c <lcd_numeric_value+0xb2>
    1f46:	89 81       	ldd	r24, Y+1	; 0x01
    1f48:	81 30       	cpi	r24, 0x01	; 1
	{
		temp = val/1000;
    1f4a:	c1 f5       	brne	.+112    	; 0x1fbc <lcd_numeric_value+0x122>
    1f4c:	8c 81       	ldd	r24, Y+4	; 0x04
    1f4e:	9d 81       	ldd	r25, Y+5	; 0x05
    1f50:	28 ee       	ldi	r18, 0xE8	; 232
    1f52:	33 e0       	ldi	r19, 0x03	; 3
    1f54:	b9 01       	movw	r22, r18
    1f56:	93 d2       	rcall	.+1318   	; 0x247e <__divmodhi4>
    1f58:	cb 01       	movw	r24, r22
    1f5a:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <temp+0x1>
    1f5e:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <temp>
		thousand = temp%10 + 48;
    1f62:	40 91 1c 02 	lds	r20, 0x021C	; 0x80021c <temp>
    1f66:	50 91 1d 02 	lds	r21, 0x021D	; 0x80021d <temp+0x1>
    1f6a:	9a 01       	movw	r18, r20
    1f6c:	ad ec       	ldi	r26, 0xCD	; 205
    1f6e:	bc ec       	ldi	r27, 0xCC	; 204
    1f70:	99 d2       	rcall	.+1330   	; 0x24a4 <__umulhisi3>
    1f72:	96 95       	lsr	r25
    1f74:	87 95       	ror	r24
    1f76:	96 95       	lsr	r25
    1f78:	87 95       	ror	r24
    1f7a:	96 95       	lsr	r25
    1f7c:	87 95       	ror	r24
    1f7e:	88 0f       	add	r24, r24
    1f80:	99 1f       	adc	r25, r25
    1f82:	9c 01       	movw	r18, r24
    1f84:	22 0f       	add	r18, r18
    1f86:	33 1f       	adc	r19, r19
    1f88:	22 0f       	add	r18, r18
    1f8a:	33 1f       	adc	r19, r19
    1f8c:	82 0f       	add	r24, r18
    1f8e:	93 1f       	adc	r25, r19
    1f90:	9a 01       	movw	r18, r20
    1f92:	28 1b       	sub	r18, r24
    1f94:	39 0b       	sbc	r19, r25
    1f96:	c9 01       	movw	r24, r18
    1f98:	c0 96       	adiw	r24, 0x30	; 48
    1f9a:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <thousand+0x1>
    1f9e:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <thousand>
		lcd_wr_char(row, column, thousand);
    1fa2:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <thousand>
    1fa6:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <thousand+0x1>
    1faa:	48 2f       	mov	r20, r24
    1fac:	6b 81       	ldd	r22, Y+3	; 0x03
    1fae:	8a 81       	ldd	r24, Y+2	; 0x02
    1fb0:	df dd       	rcall	.-1090   	; 0x1b70 <lcd_wr_char>
    1fb2:	8b 81       	ldd	r24, Y+3	; 0x03
		column+=1;
    1fb4:	8f 5f       	subi	r24, 0xFF	; 255
    1fb6:	8b 83       	std	Y+3, r24	; 0x03
    1fb8:	81 e0       	ldi	r24, 0x01	; 1
		flag = 1;
    1fba:	89 83       	std	Y+1, r24	; 0x01
    1fbc:	8e 81       	ldd	r24, Y+6	; 0x06
	}
	
	if(digits == 3 || flag == 1)
    1fbe:	9f 81       	ldd	r25, Y+7	; 0x07
    1fc0:	03 97       	sbiw	r24, 0x03	; 3
    1fc2:	19 f0       	breq	.+6      	; 0x1fca <lcd_numeric_value+0x130>
    1fc4:	89 81       	ldd	r24, Y+1	; 0x01
    1fc6:	81 30       	cpi	r24, 0x01	; 1
    1fc8:	c1 f5       	brne	.+112    	; 0x203a <lcd_numeric_value+0x1a0>
	{
		temp = val/100;
    1fca:	8c 81       	ldd	r24, Y+4	; 0x04
    1fcc:	9d 81       	ldd	r25, Y+5	; 0x05
    1fce:	24 e6       	ldi	r18, 0x64	; 100
    1fd0:	30 e0       	ldi	r19, 0x00	; 0
    1fd2:	b9 01       	movw	r22, r18
    1fd4:	54 d2       	rcall	.+1192   	; 0x247e <__divmodhi4>
    1fd6:	cb 01       	movw	r24, r22
    1fd8:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <temp+0x1>
    1fdc:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <temp>
		hundred = temp%10 + 48;
    1fe0:	40 91 1c 02 	lds	r20, 0x021C	; 0x80021c <temp>
    1fe4:	50 91 1d 02 	lds	r21, 0x021D	; 0x80021d <temp+0x1>
    1fe8:	9a 01       	movw	r18, r20
    1fea:	ad ec       	ldi	r26, 0xCD	; 205
    1fec:	bc ec       	ldi	r27, 0xCC	; 204
    1fee:	5a d2       	rcall	.+1204   	; 0x24a4 <__umulhisi3>
    1ff0:	96 95       	lsr	r25
    1ff2:	87 95       	ror	r24
    1ff4:	96 95       	lsr	r25
    1ff6:	87 95       	ror	r24
    1ff8:	96 95       	lsr	r25
    1ffa:	87 95       	ror	r24
    1ffc:	88 0f       	add	r24, r24
    1ffe:	99 1f       	adc	r25, r25
    2000:	9c 01       	movw	r18, r24
    2002:	22 0f       	add	r18, r18
    2004:	33 1f       	adc	r19, r19
    2006:	22 0f       	add	r18, r18
    2008:	33 1f       	adc	r19, r19
    200a:	82 0f       	add	r24, r18
    200c:	93 1f       	adc	r25, r19
    200e:	9a 01       	movw	r18, r20
    2010:	28 1b       	sub	r18, r24
    2012:	39 0b       	sbc	r19, r25
    2014:	c9 01       	movw	r24, r18
    2016:	c0 96       	adiw	r24, 0x30	; 48
    2018:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <hundred+0x1>
    201c:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <hundred>
		lcd_wr_char(row, column, hundred);
    2020:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <hundred>
    2024:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <hundred+0x1>
    2028:	48 2f       	mov	r20, r24
    202a:	6b 81       	ldd	r22, Y+3	; 0x03
    202c:	8a 81       	ldd	r24, Y+2	; 0x02
    202e:	a0 dd       	rcall	.-1216   	; 0x1b70 <lcd_wr_char>
    2030:	8b 81       	ldd	r24, Y+3	; 0x03
		column+=1;
    2032:	8f 5f       	subi	r24, 0xFF	; 255
    2034:	8b 83       	std	Y+3, r24	; 0x03
    2036:	81 e0       	ldi	r24, 0x01	; 1
		flag = 1;
    2038:	89 83       	std	Y+1, r24	; 0x01
    203a:	8e 81       	ldd	r24, Y+6	; 0x06
	}
	
	if(digits == 2 || flag == 1)
    203c:	9f 81       	ldd	r25, Y+7	; 0x07
    203e:	02 97       	sbiw	r24, 0x02	; 2
    2040:	19 f0       	breq	.+6      	; 0x2048 <lcd_numeric_value+0x1ae>
    2042:	89 81       	ldd	r24, Y+1	; 0x01
    2044:	81 30       	cpi	r24, 0x01	; 1
    2046:	c1 f5       	brne	.+112    	; 0x20b8 <lcd_numeric_value+0x21e>
	{
		temp = val/10;
    2048:	8c 81       	ldd	r24, Y+4	; 0x04
    204a:	9d 81       	ldd	r25, Y+5	; 0x05
    204c:	2a e0       	ldi	r18, 0x0A	; 10
    204e:	30 e0       	ldi	r19, 0x00	; 0
    2050:	b9 01       	movw	r22, r18
    2052:	15 d2       	rcall	.+1066   	; 0x247e <__divmodhi4>
    2054:	cb 01       	movw	r24, r22
    2056:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <temp+0x1>
    205a:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <temp>
		tens = temp%10 + 48;
    205e:	40 91 1c 02 	lds	r20, 0x021C	; 0x80021c <temp>
    2062:	50 91 1d 02 	lds	r21, 0x021D	; 0x80021d <temp+0x1>
    2066:	9a 01       	movw	r18, r20
    2068:	ad ec       	ldi	r26, 0xCD	; 205
    206a:	bc ec       	ldi	r27, 0xCC	; 204
    206c:	1b d2       	rcall	.+1078   	; 0x24a4 <__umulhisi3>
    206e:	96 95       	lsr	r25
    2070:	87 95       	ror	r24
    2072:	96 95       	lsr	r25
    2074:	87 95       	ror	r24
    2076:	96 95       	lsr	r25
    2078:	87 95       	ror	r24
    207a:	88 0f       	add	r24, r24
    207c:	99 1f       	adc	r25, r25
    207e:	9c 01       	movw	r18, r24
    2080:	22 0f       	add	r18, r18
    2082:	33 1f       	adc	r19, r19
    2084:	22 0f       	add	r18, r18
    2086:	33 1f       	adc	r19, r19
    2088:	82 0f       	add	r24, r18
    208a:	93 1f       	adc	r25, r19
    208c:	9a 01       	movw	r18, r20
    208e:	28 1b       	sub	r18, r24
    2090:	39 0b       	sbc	r19, r25
    2092:	c9 01       	movw	r24, r18
    2094:	c0 96       	adiw	r24, 0x30	; 48
    2096:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <tens+0x1>
    209a:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <tens>
		lcd_wr_char(row, column, tens);
    209e:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <tens>
    20a2:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <tens+0x1>
    20a6:	48 2f       	mov	r20, r24
    20a8:	6b 81       	ldd	r22, Y+3	; 0x03
    20aa:	8a 81       	ldd	r24, Y+2	; 0x02
    20ac:	61 dd       	rcall	.-1342   	; 0x1b70 <lcd_wr_char>
    20ae:	8b 81       	ldd	r24, Y+3	; 0x03
		column+=1;
    20b0:	8f 5f       	subi	r24, 0xFF	; 255
    20b2:	8b 83       	std	Y+3, r24	; 0x03
		flag = 1;
    20b4:	81 e0       	ldi	r24, 0x01	; 1
    20b6:	89 83       	std	Y+1, r24	; 0x01
	}
	
	if(digits == 1 || flag == 1)
    20b8:	8e 81       	ldd	r24, Y+6	; 0x06
    20ba:	9f 81       	ldd	r25, Y+7	; 0x07
    20bc:	01 97       	sbiw	r24, 0x01	; 1
    20be:	19 f0       	breq	.+6      	; 0x20c6 <lcd_numeric_value+0x22c>
    20c0:	89 81       	ldd	r24, Y+1	; 0x01
    20c2:	81 30       	cpi	r24, 0x01	; 1
    20c4:	b1 f4       	brne	.+44     	; 0x20f2 <lcd_numeric_value+0x258>
	{
		unit = val%10 + 48;
    20c6:	8c 81       	ldd	r24, Y+4	; 0x04
    20c8:	9d 81       	ldd	r25, Y+5	; 0x05
    20ca:	2a e0       	ldi	r18, 0x0A	; 10
    20cc:	30 e0       	ldi	r19, 0x00	; 0
    20ce:	b9 01       	movw	r22, r18
    20d0:	d6 d1       	rcall	.+940    	; 0x247e <__divmodhi4>
    20d2:	c0 96       	adiw	r24, 0x30	; 48
    20d4:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <unit+0x1>
    20d8:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <unit>
		lcd_wr_char(row, column, unit);
    20dc:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <unit>
    20e0:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <unit+0x1>
    20e4:	48 2f       	mov	r20, r24
    20e6:	6b 81       	ldd	r22, Y+3	; 0x03
    20e8:	8a 81       	ldd	r24, Y+2	; 0x02
    20ea:	42 dd       	rcall	.-1404   	; 0x1b70 <lcd_wr_char>
		column+=1;
    20ec:	8b 81       	ldd	r24, Y+3	; 0x03
    20ee:	8f 5f       	subi	r24, 0xFF	; 255
    20f0:	8b 83       	std	Y+3, r24	; 0x03
	}
	
	if(digits > 5)
    20f2:	8e 81       	ldd	r24, Y+6	; 0x06
    20f4:	9f 81       	ldd	r25, Y+7	; 0x07
    20f6:	06 97       	sbiw	r24, 0x06	; 6
    20f8:	3c f0       	brlt	.+14     	; 0x2108 <lcd_numeric_value+0x26e>
	{
		lcd_wr_char(row, column, 'E');
    20fa:	45 e4       	ldi	r20, 0x45	; 69
    20fc:	6b 81       	ldd	r22, Y+3	; 0x03
    20fe:	8a 81       	ldd	r24, Y+2	; 0x02
    2100:	37 dd       	rcall	.-1426   	; 0x1b70 <lcd_wr_char>
    2102:	8b 81       	ldd	r24, Y+3	; 0x03
		column+=1;
    2104:	8f 5f       	subi	r24, 0xFF	; 255
    2106:	8b 83       	std	Y+3, r24	; 0x03
    2108:	00 00       	nop
	}
    210a:	27 96       	adiw	r28, 0x07	; 7
    210c:	0f b6       	in	r0, 0x3f	; 63
    210e:	f8 94       	cli
    2110:	de bf       	out	0x3e, r29	; 62
    2112:	0f be       	out	0x3f, r0	; 63
    2114:	cd bf       	out	0x3d, r28	; 61
    2116:	df 91       	pop	r29
    2118:	cf 91       	pop	r28
    211a:	08 95       	ret

0000211c <__cmpsf2>:
    211c:	d4 d0       	rcall	.+424    	; 0x22c6 <__fp_cmp>
    211e:	08 f4       	brcc	.+2      	; 0x2122 <__cmpsf2+0x6>
    2120:	81 e0       	ldi	r24, 0x01	; 1
    2122:	08 95       	ret

00002124 <__divsf3>:
    2124:	0c d0       	rcall	.+24     	; 0x213e <__divsf3x>
    2126:	0a c1       	rjmp	.+532    	; 0x233c <__fp_round>
    2128:	02 d1       	rcall	.+516    	; 0x232e <__fp_pscB>
    212a:	40 f0       	brcs	.+16     	; 0x213c <__divsf3+0x18>
    212c:	f9 d0       	rcall	.+498    	; 0x2320 <__fp_pscA>
    212e:	30 f0       	brcs	.+12     	; 0x213c <__divsf3+0x18>
    2130:	21 f4       	brne	.+8      	; 0x213a <__divsf3+0x16>
    2132:	5f 3f       	cpi	r21, 0xFF	; 255
    2134:	19 f0       	breq	.+6      	; 0x213c <__divsf3+0x18>
    2136:	eb c0       	rjmp	.+470    	; 0x230e <__fp_inf>
    2138:	51 11       	cpse	r21, r1
    213a:	34 c1       	rjmp	.+616    	; 0x23a4 <__fp_szero>
    213c:	ee c0       	rjmp	.+476    	; 0x231a <__fp_nan>

0000213e <__divsf3x>:
    213e:	0f d1       	rcall	.+542    	; 0x235e <__fp_split3>
    2140:	98 f3       	brcs	.-26     	; 0x2128 <__divsf3+0x4>

00002142 <__divsf3_pse>:
    2142:	99 23       	and	r25, r25
    2144:	c9 f3       	breq	.-14     	; 0x2138 <__divsf3+0x14>
    2146:	55 23       	and	r21, r21
    2148:	b1 f3       	breq	.-20     	; 0x2136 <__divsf3+0x12>
    214a:	95 1b       	sub	r25, r21
    214c:	55 0b       	sbc	r21, r21
    214e:	bb 27       	eor	r27, r27
    2150:	aa 27       	eor	r26, r26
    2152:	62 17       	cp	r22, r18
    2154:	73 07       	cpc	r23, r19
    2156:	84 07       	cpc	r24, r20
    2158:	38 f0       	brcs	.+14     	; 0x2168 <__divsf3_pse+0x26>
    215a:	9f 5f       	subi	r25, 0xFF	; 255
    215c:	5f 4f       	sbci	r21, 0xFF	; 255
    215e:	22 0f       	add	r18, r18
    2160:	33 1f       	adc	r19, r19
    2162:	44 1f       	adc	r20, r20
    2164:	aa 1f       	adc	r26, r26
    2166:	a9 f3       	breq	.-22     	; 0x2152 <__divsf3_pse+0x10>
    2168:	33 d0       	rcall	.+102    	; 0x21d0 <__divsf3_pse+0x8e>
    216a:	0e 2e       	mov	r0, r30
    216c:	3a f0       	brmi	.+14     	; 0x217c <__divsf3_pse+0x3a>
    216e:	e0 e8       	ldi	r30, 0x80	; 128
    2170:	30 d0       	rcall	.+96     	; 0x21d2 <__divsf3_pse+0x90>
    2172:	91 50       	subi	r25, 0x01	; 1
    2174:	50 40       	sbci	r21, 0x00	; 0
    2176:	e6 95       	lsr	r30
    2178:	00 1c       	adc	r0, r0
    217a:	ca f7       	brpl	.-14     	; 0x216e <__divsf3_pse+0x2c>
    217c:	29 d0       	rcall	.+82     	; 0x21d0 <__divsf3_pse+0x8e>
    217e:	fe 2f       	mov	r31, r30
    2180:	27 d0       	rcall	.+78     	; 0x21d0 <__divsf3_pse+0x8e>
    2182:	66 0f       	add	r22, r22
    2184:	77 1f       	adc	r23, r23
    2186:	88 1f       	adc	r24, r24
    2188:	bb 1f       	adc	r27, r27
    218a:	26 17       	cp	r18, r22
    218c:	37 07       	cpc	r19, r23
    218e:	48 07       	cpc	r20, r24
    2190:	ab 07       	cpc	r26, r27
    2192:	b0 e8       	ldi	r27, 0x80	; 128
    2194:	09 f0       	breq	.+2      	; 0x2198 <__divsf3_pse+0x56>
    2196:	bb 0b       	sbc	r27, r27
    2198:	80 2d       	mov	r24, r0
    219a:	bf 01       	movw	r22, r30
    219c:	ff 27       	eor	r31, r31
    219e:	93 58       	subi	r25, 0x83	; 131
    21a0:	5f 4f       	sbci	r21, 0xFF	; 255
    21a2:	2a f0       	brmi	.+10     	; 0x21ae <__divsf3_pse+0x6c>
    21a4:	9e 3f       	cpi	r25, 0xFE	; 254
    21a6:	51 05       	cpc	r21, r1
    21a8:	68 f0       	brcs	.+26     	; 0x21c4 <__divsf3_pse+0x82>
    21aa:	b1 c0       	rjmp	.+354    	; 0x230e <__fp_inf>
    21ac:	fb c0       	rjmp	.+502    	; 0x23a4 <__fp_szero>
    21ae:	5f 3f       	cpi	r21, 0xFF	; 255
    21b0:	ec f3       	brlt	.-6      	; 0x21ac <__divsf3_pse+0x6a>
    21b2:	98 3e       	cpi	r25, 0xE8	; 232
    21b4:	dc f3       	brlt	.-10     	; 0x21ac <__divsf3_pse+0x6a>
    21b6:	86 95       	lsr	r24
    21b8:	77 95       	ror	r23
    21ba:	67 95       	ror	r22
    21bc:	b7 95       	ror	r27
    21be:	f7 95       	ror	r31
    21c0:	9f 5f       	subi	r25, 0xFF	; 255
    21c2:	c9 f7       	brne	.-14     	; 0x21b6 <__divsf3_pse+0x74>
    21c4:	88 0f       	add	r24, r24
    21c6:	91 1d       	adc	r25, r1
    21c8:	96 95       	lsr	r25
    21ca:	87 95       	ror	r24
    21cc:	97 f9       	bld	r25, 7
    21ce:	08 95       	ret
    21d0:	e1 e0       	ldi	r30, 0x01	; 1
    21d2:	66 0f       	add	r22, r22
    21d4:	77 1f       	adc	r23, r23
    21d6:	88 1f       	adc	r24, r24
    21d8:	bb 1f       	adc	r27, r27
    21da:	62 17       	cp	r22, r18
    21dc:	73 07       	cpc	r23, r19
    21de:	84 07       	cpc	r24, r20
    21e0:	ba 07       	cpc	r27, r26
    21e2:	20 f0       	brcs	.+8      	; 0x21ec <__divsf3_pse+0xaa>
    21e4:	62 1b       	sub	r22, r18
    21e6:	73 0b       	sbc	r23, r19
    21e8:	84 0b       	sbc	r24, r20
    21ea:	ba 0b       	sbc	r27, r26
    21ec:	ee 1f       	adc	r30, r30
    21ee:	88 f7       	brcc	.-30     	; 0x21d2 <__divsf3_pse+0x90>
    21f0:	e0 95       	com	r30
    21f2:	08 95       	ret

000021f4 <__fixunssfsi>:
    21f4:	bc d0       	rcall	.+376    	; 0x236e <__fp_splitA>
    21f6:	88 f0       	brcs	.+34     	; 0x221a <__stack+0x1b>
    21f8:	9f 57       	subi	r25, 0x7F	; 127
    21fa:	90 f0       	brcs	.+36     	; 0x2220 <__stack+0x21>
    21fc:	b9 2f       	mov	r27, r25
    21fe:	99 27       	eor	r25, r25
    2200:	b7 51       	subi	r27, 0x17	; 23
    2202:	a0 f0       	brcs	.+40     	; 0x222c <__stack+0x2d>
    2204:	d1 f0       	breq	.+52     	; 0x223a <__stack+0x3b>
    2206:	66 0f       	add	r22, r22
    2208:	77 1f       	adc	r23, r23
    220a:	88 1f       	adc	r24, r24
    220c:	99 1f       	adc	r25, r25
    220e:	1a f0       	brmi	.+6      	; 0x2216 <__stack+0x17>
    2210:	ba 95       	dec	r27
    2212:	c9 f7       	brne	.-14     	; 0x2206 <__stack+0x7>
    2214:	12 c0       	rjmp	.+36     	; 0x223a <__stack+0x3b>
    2216:	b1 30       	cpi	r27, 0x01	; 1
    2218:	81 f0       	breq	.+32     	; 0x223a <__stack+0x3b>
    221a:	c3 d0       	rcall	.+390    	; 0x23a2 <__fp_zero>
    221c:	b1 e0       	ldi	r27, 0x01	; 1
    221e:	08 95       	ret
    2220:	c0 c0       	rjmp	.+384    	; 0x23a2 <__fp_zero>
    2222:	67 2f       	mov	r22, r23
    2224:	78 2f       	mov	r23, r24
    2226:	88 27       	eor	r24, r24
    2228:	b8 5f       	subi	r27, 0xF8	; 248
    222a:	39 f0       	breq	.+14     	; 0x223a <__stack+0x3b>
    222c:	b9 3f       	cpi	r27, 0xF9	; 249
    222e:	cc f3       	brlt	.-14     	; 0x2222 <__stack+0x23>
    2230:	86 95       	lsr	r24
    2232:	77 95       	ror	r23
    2234:	67 95       	ror	r22
    2236:	b3 95       	inc	r27
    2238:	d9 f7       	brne	.-10     	; 0x2230 <__stack+0x31>
    223a:	3e f4       	brtc	.+14     	; 0x224a <__stack+0x4b>
    223c:	90 95       	com	r25
    223e:	80 95       	com	r24
    2240:	70 95       	com	r23
    2242:	61 95       	neg	r22
    2244:	7f 4f       	sbci	r23, 0xFF	; 255
    2246:	8f 4f       	sbci	r24, 0xFF	; 255
    2248:	9f 4f       	sbci	r25, 0xFF	; 255
    224a:	08 95       	ret

0000224c <__floatunsisf>:
    224c:	e8 94       	clt
    224e:	09 c0       	rjmp	.+18     	; 0x2262 <__floatsisf+0x12>

00002250 <__floatsisf>:
    2250:	97 fb       	bst	r25, 7
    2252:	3e f4       	brtc	.+14     	; 0x2262 <__floatsisf+0x12>
    2254:	90 95       	com	r25
    2256:	80 95       	com	r24
    2258:	70 95       	com	r23
    225a:	61 95       	neg	r22
    225c:	7f 4f       	sbci	r23, 0xFF	; 255
    225e:	8f 4f       	sbci	r24, 0xFF	; 255
    2260:	9f 4f       	sbci	r25, 0xFF	; 255
    2262:	99 23       	and	r25, r25
    2264:	a9 f0       	breq	.+42     	; 0x2290 <__floatsisf+0x40>
    2266:	f9 2f       	mov	r31, r25
    2268:	96 e9       	ldi	r25, 0x96	; 150
    226a:	bb 27       	eor	r27, r27
    226c:	93 95       	inc	r25
    226e:	f6 95       	lsr	r31
    2270:	87 95       	ror	r24
    2272:	77 95       	ror	r23
    2274:	67 95       	ror	r22
    2276:	b7 95       	ror	r27
    2278:	f1 11       	cpse	r31, r1
    227a:	f8 cf       	rjmp	.-16     	; 0x226c <__floatsisf+0x1c>
    227c:	fa f4       	brpl	.+62     	; 0x22bc <__floatsisf+0x6c>
    227e:	bb 0f       	add	r27, r27
    2280:	11 f4       	brne	.+4      	; 0x2286 <__floatsisf+0x36>
    2282:	60 ff       	sbrs	r22, 0
    2284:	1b c0       	rjmp	.+54     	; 0x22bc <__floatsisf+0x6c>
    2286:	6f 5f       	subi	r22, 0xFF	; 255
    2288:	7f 4f       	sbci	r23, 0xFF	; 255
    228a:	8f 4f       	sbci	r24, 0xFF	; 255
    228c:	9f 4f       	sbci	r25, 0xFF	; 255
    228e:	16 c0       	rjmp	.+44     	; 0x22bc <__floatsisf+0x6c>
    2290:	88 23       	and	r24, r24
    2292:	11 f0       	breq	.+4      	; 0x2298 <__floatsisf+0x48>
    2294:	96 e9       	ldi	r25, 0x96	; 150
    2296:	11 c0       	rjmp	.+34     	; 0x22ba <__floatsisf+0x6a>
    2298:	77 23       	and	r23, r23
    229a:	21 f0       	breq	.+8      	; 0x22a4 <__floatsisf+0x54>
    229c:	9e e8       	ldi	r25, 0x8E	; 142
    229e:	87 2f       	mov	r24, r23
    22a0:	76 2f       	mov	r23, r22
    22a2:	05 c0       	rjmp	.+10     	; 0x22ae <__floatsisf+0x5e>
    22a4:	66 23       	and	r22, r22
    22a6:	71 f0       	breq	.+28     	; 0x22c4 <__floatsisf+0x74>
    22a8:	96 e8       	ldi	r25, 0x86	; 134
    22aa:	86 2f       	mov	r24, r22
    22ac:	70 e0       	ldi	r23, 0x00	; 0
    22ae:	60 e0       	ldi	r22, 0x00	; 0
    22b0:	2a f0       	brmi	.+10     	; 0x22bc <__floatsisf+0x6c>
    22b2:	9a 95       	dec	r25
    22b4:	66 0f       	add	r22, r22
    22b6:	77 1f       	adc	r23, r23
    22b8:	88 1f       	adc	r24, r24
    22ba:	da f7       	brpl	.-10     	; 0x22b2 <__floatsisf+0x62>
    22bc:	88 0f       	add	r24, r24
    22be:	96 95       	lsr	r25
    22c0:	87 95       	ror	r24
    22c2:	97 f9       	bld	r25, 7
    22c4:	08 95       	ret

000022c6 <__fp_cmp>:
    22c6:	99 0f       	add	r25, r25
    22c8:	00 08       	sbc	r0, r0
    22ca:	55 0f       	add	r21, r21
    22cc:	aa 0b       	sbc	r26, r26
    22ce:	e0 e8       	ldi	r30, 0x80	; 128
    22d0:	fe ef       	ldi	r31, 0xFE	; 254
    22d2:	16 16       	cp	r1, r22
    22d4:	17 06       	cpc	r1, r23
    22d6:	e8 07       	cpc	r30, r24
    22d8:	f9 07       	cpc	r31, r25
    22da:	c0 f0       	brcs	.+48     	; 0x230c <__fp_cmp+0x46>
    22dc:	12 16       	cp	r1, r18
    22de:	13 06       	cpc	r1, r19
    22e0:	e4 07       	cpc	r30, r20
    22e2:	f5 07       	cpc	r31, r21
    22e4:	98 f0       	brcs	.+38     	; 0x230c <__fp_cmp+0x46>
    22e6:	62 1b       	sub	r22, r18
    22e8:	73 0b       	sbc	r23, r19
    22ea:	84 0b       	sbc	r24, r20
    22ec:	95 0b       	sbc	r25, r21
    22ee:	39 f4       	brne	.+14     	; 0x22fe <__fp_cmp+0x38>
    22f0:	0a 26       	eor	r0, r26
    22f2:	61 f0       	breq	.+24     	; 0x230c <__fp_cmp+0x46>
    22f4:	23 2b       	or	r18, r19
    22f6:	24 2b       	or	r18, r20
    22f8:	25 2b       	or	r18, r21
    22fa:	21 f4       	brne	.+8      	; 0x2304 <__fp_cmp+0x3e>
    22fc:	08 95       	ret
    22fe:	0a 26       	eor	r0, r26
    2300:	09 f4       	brne	.+2      	; 0x2304 <__fp_cmp+0x3e>
    2302:	a1 40       	sbci	r26, 0x01	; 1
    2304:	a6 95       	lsr	r26
    2306:	8f ef       	ldi	r24, 0xFF	; 255
    2308:	81 1d       	adc	r24, r1
    230a:	81 1d       	adc	r24, r1
    230c:	08 95       	ret

0000230e <__fp_inf>:
    230e:	97 f9       	bld	r25, 7
    2310:	9f 67       	ori	r25, 0x7F	; 127
    2312:	80 e8       	ldi	r24, 0x80	; 128
    2314:	70 e0       	ldi	r23, 0x00	; 0
    2316:	60 e0       	ldi	r22, 0x00	; 0
    2318:	08 95       	ret

0000231a <__fp_nan>:
    231a:	9f ef       	ldi	r25, 0xFF	; 255
    231c:	80 ec       	ldi	r24, 0xC0	; 192
    231e:	08 95       	ret

00002320 <__fp_pscA>:
    2320:	00 24       	eor	r0, r0
    2322:	0a 94       	dec	r0
    2324:	16 16       	cp	r1, r22
    2326:	17 06       	cpc	r1, r23
    2328:	18 06       	cpc	r1, r24
    232a:	09 06       	cpc	r0, r25
    232c:	08 95       	ret

0000232e <__fp_pscB>:
    232e:	00 24       	eor	r0, r0
    2330:	0a 94       	dec	r0
    2332:	12 16       	cp	r1, r18
    2334:	13 06       	cpc	r1, r19
    2336:	14 06       	cpc	r1, r20
    2338:	05 06       	cpc	r0, r21
    233a:	08 95       	ret

0000233c <__fp_round>:
    233c:	09 2e       	mov	r0, r25
    233e:	03 94       	inc	r0
    2340:	00 0c       	add	r0, r0
    2342:	11 f4       	brne	.+4      	; 0x2348 <__fp_round+0xc>
    2344:	88 23       	and	r24, r24
    2346:	52 f0       	brmi	.+20     	; 0x235c <__fp_round+0x20>
    2348:	bb 0f       	add	r27, r27
    234a:	40 f4       	brcc	.+16     	; 0x235c <__fp_round+0x20>
    234c:	bf 2b       	or	r27, r31
    234e:	11 f4       	brne	.+4      	; 0x2354 <__fp_round+0x18>
    2350:	60 ff       	sbrs	r22, 0
    2352:	04 c0       	rjmp	.+8      	; 0x235c <__fp_round+0x20>
    2354:	6f 5f       	subi	r22, 0xFF	; 255
    2356:	7f 4f       	sbci	r23, 0xFF	; 255
    2358:	8f 4f       	sbci	r24, 0xFF	; 255
    235a:	9f 4f       	sbci	r25, 0xFF	; 255
    235c:	08 95       	ret

0000235e <__fp_split3>:
    235e:	57 fd       	sbrc	r21, 7
    2360:	90 58       	subi	r25, 0x80	; 128
    2362:	44 0f       	add	r20, r20
    2364:	55 1f       	adc	r21, r21
    2366:	59 f0       	breq	.+22     	; 0x237e <__fp_splitA+0x10>
    2368:	5f 3f       	cpi	r21, 0xFF	; 255
    236a:	71 f0       	breq	.+28     	; 0x2388 <__fp_splitA+0x1a>
    236c:	47 95       	ror	r20

0000236e <__fp_splitA>:
    236e:	88 0f       	add	r24, r24
    2370:	97 fb       	bst	r25, 7
    2372:	99 1f       	adc	r25, r25
    2374:	61 f0       	breq	.+24     	; 0x238e <__fp_splitA+0x20>
    2376:	9f 3f       	cpi	r25, 0xFF	; 255
    2378:	79 f0       	breq	.+30     	; 0x2398 <__fp_splitA+0x2a>
    237a:	87 95       	ror	r24
    237c:	08 95       	ret
    237e:	12 16       	cp	r1, r18
    2380:	13 06       	cpc	r1, r19
    2382:	14 06       	cpc	r1, r20
    2384:	55 1f       	adc	r21, r21
    2386:	f2 cf       	rjmp	.-28     	; 0x236c <__fp_split3+0xe>
    2388:	46 95       	lsr	r20
    238a:	f1 df       	rcall	.-30     	; 0x236e <__fp_splitA>
    238c:	08 c0       	rjmp	.+16     	; 0x239e <__fp_splitA+0x30>
    238e:	16 16       	cp	r1, r22
    2390:	17 06       	cpc	r1, r23
    2392:	18 06       	cpc	r1, r24
    2394:	99 1f       	adc	r25, r25
    2396:	f1 cf       	rjmp	.-30     	; 0x237a <__fp_splitA+0xc>
    2398:	86 95       	lsr	r24
    239a:	71 05       	cpc	r23, r1
    239c:	61 05       	cpc	r22, r1
    239e:	08 94       	sec
    23a0:	08 95       	ret

000023a2 <__fp_zero>:
    23a2:	e8 94       	clt

000023a4 <__fp_szero>:
    23a4:	bb 27       	eor	r27, r27
    23a6:	66 27       	eor	r22, r22
    23a8:	77 27       	eor	r23, r23
    23aa:	cb 01       	movw	r24, r22
    23ac:	97 f9       	bld	r25, 7
    23ae:	08 95       	ret

000023b0 <__gesf2>:
    23b0:	8a df       	rcall	.-236    	; 0x22c6 <__fp_cmp>
    23b2:	08 f4       	brcc	.+2      	; 0x23b6 <__gesf2+0x6>
    23b4:	8f ef       	ldi	r24, 0xFF	; 255
    23b6:	08 95       	ret

000023b8 <__mulsf3>:
    23b8:	0b d0       	rcall	.+22     	; 0x23d0 <__mulsf3x>
    23ba:	c0 cf       	rjmp	.-128    	; 0x233c <__fp_round>
    23bc:	b1 df       	rcall	.-158    	; 0x2320 <__fp_pscA>
    23be:	28 f0       	brcs	.+10     	; 0x23ca <__mulsf3+0x12>
    23c0:	b6 df       	rcall	.-148    	; 0x232e <__fp_pscB>
    23c2:	18 f0       	brcs	.+6      	; 0x23ca <__mulsf3+0x12>
    23c4:	95 23       	and	r25, r21
    23c6:	09 f0       	breq	.+2      	; 0x23ca <__mulsf3+0x12>
    23c8:	a2 cf       	rjmp	.-188    	; 0x230e <__fp_inf>
    23ca:	a7 cf       	rjmp	.-178    	; 0x231a <__fp_nan>
    23cc:	11 24       	eor	r1, r1
    23ce:	ea cf       	rjmp	.-44     	; 0x23a4 <__fp_szero>

000023d0 <__mulsf3x>:
    23d0:	c6 df       	rcall	.-116    	; 0x235e <__fp_split3>
    23d2:	a0 f3       	brcs	.-24     	; 0x23bc <__mulsf3+0x4>

000023d4 <__mulsf3_pse>:
    23d4:	95 9f       	mul	r25, r21
    23d6:	d1 f3       	breq	.-12     	; 0x23cc <__mulsf3+0x14>
    23d8:	95 0f       	add	r25, r21
    23da:	50 e0       	ldi	r21, 0x00	; 0
    23dc:	55 1f       	adc	r21, r21
    23de:	62 9f       	mul	r22, r18
    23e0:	f0 01       	movw	r30, r0
    23e2:	72 9f       	mul	r23, r18
    23e4:	bb 27       	eor	r27, r27
    23e6:	f0 0d       	add	r31, r0
    23e8:	b1 1d       	adc	r27, r1
    23ea:	63 9f       	mul	r22, r19
    23ec:	aa 27       	eor	r26, r26
    23ee:	f0 0d       	add	r31, r0
    23f0:	b1 1d       	adc	r27, r1
    23f2:	aa 1f       	adc	r26, r26
    23f4:	64 9f       	mul	r22, r20
    23f6:	66 27       	eor	r22, r22
    23f8:	b0 0d       	add	r27, r0
    23fa:	a1 1d       	adc	r26, r1
    23fc:	66 1f       	adc	r22, r22
    23fe:	82 9f       	mul	r24, r18
    2400:	22 27       	eor	r18, r18
    2402:	b0 0d       	add	r27, r0
    2404:	a1 1d       	adc	r26, r1
    2406:	62 1f       	adc	r22, r18
    2408:	73 9f       	mul	r23, r19
    240a:	b0 0d       	add	r27, r0
    240c:	a1 1d       	adc	r26, r1
    240e:	62 1f       	adc	r22, r18
    2410:	83 9f       	mul	r24, r19
    2412:	a0 0d       	add	r26, r0
    2414:	61 1d       	adc	r22, r1
    2416:	22 1f       	adc	r18, r18
    2418:	74 9f       	mul	r23, r20
    241a:	33 27       	eor	r19, r19
    241c:	a0 0d       	add	r26, r0
    241e:	61 1d       	adc	r22, r1
    2420:	23 1f       	adc	r18, r19
    2422:	84 9f       	mul	r24, r20
    2424:	60 0d       	add	r22, r0
    2426:	21 1d       	adc	r18, r1
    2428:	82 2f       	mov	r24, r18
    242a:	76 2f       	mov	r23, r22
    242c:	6a 2f       	mov	r22, r26
    242e:	11 24       	eor	r1, r1
    2430:	9f 57       	subi	r25, 0x7F	; 127
    2432:	50 40       	sbci	r21, 0x00	; 0
    2434:	8a f0       	brmi	.+34     	; 0x2458 <__mulsf3_pse+0x84>
    2436:	e1 f0       	breq	.+56     	; 0x2470 <__mulsf3_pse+0x9c>
    2438:	88 23       	and	r24, r24
    243a:	4a f0       	brmi	.+18     	; 0x244e <__mulsf3_pse+0x7a>
    243c:	ee 0f       	add	r30, r30
    243e:	ff 1f       	adc	r31, r31
    2440:	bb 1f       	adc	r27, r27
    2442:	66 1f       	adc	r22, r22
    2444:	77 1f       	adc	r23, r23
    2446:	88 1f       	adc	r24, r24
    2448:	91 50       	subi	r25, 0x01	; 1
    244a:	50 40       	sbci	r21, 0x00	; 0
    244c:	a9 f7       	brne	.-22     	; 0x2438 <__mulsf3_pse+0x64>
    244e:	9e 3f       	cpi	r25, 0xFE	; 254
    2450:	51 05       	cpc	r21, r1
    2452:	70 f0       	brcs	.+28     	; 0x2470 <__mulsf3_pse+0x9c>
    2454:	5c cf       	rjmp	.-328    	; 0x230e <__fp_inf>
    2456:	a6 cf       	rjmp	.-180    	; 0x23a4 <__fp_szero>
    2458:	5f 3f       	cpi	r21, 0xFF	; 255
    245a:	ec f3       	brlt	.-6      	; 0x2456 <__mulsf3_pse+0x82>
    245c:	98 3e       	cpi	r25, 0xE8	; 232
    245e:	dc f3       	brlt	.-10     	; 0x2456 <__mulsf3_pse+0x82>
    2460:	86 95       	lsr	r24
    2462:	77 95       	ror	r23
    2464:	67 95       	ror	r22
    2466:	b7 95       	ror	r27
    2468:	f7 95       	ror	r31
    246a:	e7 95       	ror	r30
    246c:	9f 5f       	subi	r25, 0xFF	; 255
    246e:	c1 f7       	brne	.-16     	; 0x2460 <__mulsf3_pse+0x8c>
    2470:	fe 2b       	or	r31, r30
    2472:	88 0f       	add	r24, r24
    2474:	91 1d       	adc	r25, r1
    2476:	96 95       	lsr	r25
    2478:	87 95       	ror	r24
    247a:	97 f9       	bld	r25, 7
    247c:	08 95       	ret

0000247e <__divmodhi4>:
    247e:	97 fb       	bst	r25, 7
    2480:	07 2e       	mov	r0, r23
    2482:	16 f4       	brtc	.+4      	; 0x2488 <__divmodhi4+0xa>
    2484:	00 94       	com	r0
    2486:	06 d0       	rcall	.+12     	; 0x2494 <__divmodhi4_neg1>
    2488:	77 fd       	sbrc	r23, 7
    248a:	08 d0       	rcall	.+16     	; 0x249c <__divmodhi4_neg2>
    248c:	1a d0       	rcall	.+52     	; 0x24c2 <__udivmodhi4>
    248e:	07 fc       	sbrc	r0, 7
    2490:	05 d0       	rcall	.+10     	; 0x249c <__divmodhi4_neg2>
    2492:	3e f4       	brtc	.+14     	; 0x24a2 <__divmodhi4_exit>

00002494 <__divmodhi4_neg1>:
    2494:	90 95       	com	r25
    2496:	81 95       	neg	r24
    2498:	9f 4f       	sbci	r25, 0xFF	; 255
    249a:	08 95       	ret

0000249c <__divmodhi4_neg2>:
    249c:	70 95       	com	r23
    249e:	61 95       	neg	r22
    24a0:	7f 4f       	sbci	r23, 0xFF	; 255

000024a2 <__divmodhi4_exit>:
    24a2:	08 95       	ret

000024a4 <__umulhisi3>:
    24a4:	a2 9f       	mul	r26, r18
    24a6:	b0 01       	movw	r22, r0
    24a8:	b3 9f       	mul	r27, r19
    24aa:	c0 01       	movw	r24, r0
    24ac:	a3 9f       	mul	r26, r19
    24ae:	70 0d       	add	r23, r0
    24b0:	81 1d       	adc	r24, r1
    24b2:	11 24       	eor	r1, r1
    24b4:	91 1d       	adc	r25, r1
    24b6:	b2 9f       	mul	r27, r18
    24b8:	70 0d       	add	r23, r0
    24ba:	81 1d       	adc	r24, r1
    24bc:	11 24       	eor	r1, r1
    24be:	91 1d       	adc	r25, r1
    24c0:	08 95       	ret

000024c2 <__udivmodhi4>:
    24c2:	aa 1b       	sub	r26, r26
    24c4:	bb 1b       	sub	r27, r27
    24c6:	51 e1       	ldi	r21, 0x11	; 17
    24c8:	07 c0       	rjmp	.+14     	; 0x24d8 <__udivmodhi4_ep>

000024ca <__udivmodhi4_loop>:
    24ca:	aa 1f       	adc	r26, r26
    24cc:	bb 1f       	adc	r27, r27
    24ce:	a6 17       	cp	r26, r22
    24d0:	b7 07       	cpc	r27, r23
    24d2:	10 f0       	brcs	.+4      	; 0x24d8 <__udivmodhi4_ep>
    24d4:	a6 1b       	sub	r26, r22
    24d6:	b7 0b       	sbc	r27, r23

000024d8 <__udivmodhi4_ep>:
    24d8:	88 1f       	adc	r24, r24
    24da:	99 1f       	adc	r25, r25
    24dc:	5a 95       	dec	r21
    24de:	a9 f7       	brne	.-22     	; 0x24ca <__udivmodhi4_loop>
    24e0:	80 95       	com	r24
    24e2:	90 95       	com	r25
    24e4:	bc 01       	movw	r22, r24
    24e6:	cd 01       	movw	r24, r26
    24e8:	08 95       	ret

000024ea <_exit>:
    24ea:	f8 94       	cli

000024ec <__stop_program>:
    24ec:	ff cf       	rjmp	.-2      	; 0x24ec <__stop_program>
