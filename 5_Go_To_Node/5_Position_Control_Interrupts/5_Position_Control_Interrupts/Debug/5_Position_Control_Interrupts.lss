
5_Position_Control_Interrupts.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800200  000025c8  0000265c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800222  00800222  0000267e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000267e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  000026f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b54  00000000  00000000  00002870  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e78  00000000  00000000  000043c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001562  00000000  00000000  0000523c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000560  00000000  00000000  000067a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000095c  00000000  00000000  00006d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000aa2  00000000  00000000  0000765c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  000080fe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	7b c6       	rjmp	.+3318   	; 0xd0c <__vector_5>
      16:	00 00       	nop
      18:	4b c6       	rjmp	.+3222   	; 0xcb0 <__vector_6>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e8 ec       	ldi	r30, 0xC8	; 200
      fc:	f5 e2       	ldi	r31, 0x25	; 37
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 32       	cpi	r26, 0x22	; 34
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a2 e2       	ldi	r26, 0x22	; 34
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ae 32       	cpi	r26, 0x2E	; 46
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	4a d3       	rcall	.+1684   	; 0x7b4 <main>
     120:	0c 94 e2 12 	jmp	0x25c4	; 0x25c4 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <getNextOrientation>:
char *next_position_x = &path[0];
char *next_position_y = &path[1];


char getNextOrientation(char* current_position_x,char* current_position_y,char** next_position_x,char** next_position_y)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	28 97       	sbiw	r28, 0x08	; 8
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	f8 94       	cli
     134:	de bf       	out	0x3e, r29	; 62
     136:	0f be       	out	0x3f, r0	; 63
     138:	cd bf       	out	0x3d, r28	; 61
     13a:	9a 83       	std	Y+2, r25	; 0x02
     13c:	89 83       	std	Y+1, r24	; 0x01
     13e:	7c 83       	std	Y+4, r23	; 0x04
     140:	6b 83       	std	Y+3, r22	; 0x03
     142:	5e 83       	std	Y+6, r21	; 0x06
     144:	4d 83       	std	Y+5, r20	; 0x05
     146:	38 87       	std	Y+8, r19	; 0x08
     148:	2f 83       	std	Y+7, r18	; 0x07
	if( **next_position_x == '\0' || **next_position_y == '\0' )
     14a:	8d 81       	ldd	r24, Y+5	; 0x05
     14c:	9e 81       	ldd	r25, Y+6	; 0x06
     14e:	fc 01       	movw	r30, r24
     150:	80 81       	ld	r24, Z
     152:	91 81       	ldd	r25, Z+1	; 0x01
     154:	fc 01       	movw	r30, r24
     156:	80 81       	ld	r24, Z
     158:	88 23       	and	r24, r24
     15a:	49 f0       	breq	.+18     	; 0x16e <getNextOrientation+0x48>
     15c:	8f 81       	ldd	r24, Y+7	; 0x07
     15e:	98 85       	ldd	r25, Y+8	; 0x08
     160:	fc 01       	movw	r30, r24
     162:	80 81       	ld	r24, Z
     164:	91 81       	ldd	r25, Z+1	; 0x01
     166:	fc 01       	movw	r30, r24
     168:	80 81       	ld	r24, Z
     16a:	88 23       	and	r24, r24
     16c:	11 f4       	brne	.+4      	; 0x172 <getNextOrientation+0x4c>
	{
		return 'x';
     16e:	88 e7       	ldi	r24, 0x78	; 120
     170:	34 c1       	rjmp	.+616    	; 0x3da <getNextOrientation+0x2b4>
	}
	if(*current_position_x == **next_position_x && *current_position_y <= **next_position_y){
     172:	89 81       	ldd	r24, Y+1	; 0x01
     174:	9a 81       	ldd	r25, Y+2	; 0x02
     176:	fc 01       	movw	r30, r24
     178:	20 81       	ld	r18, Z
     17a:	8d 81       	ldd	r24, Y+5	; 0x05
     17c:	9e 81       	ldd	r25, Y+6	; 0x06
     17e:	fc 01       	movw	r30, r24
     180:	80 81       	ld	r24, Z
     182:	91 81       	ldd	r25, Z+1	; 0x01
     184:	fc 01       	movw	r30, r24
     186:	80 81       	ld	r24, Z
     188:	28 17       	cp	r18, r24
     18a:	09 f0       	breq	.+2      	; 0x18e <getNextOrientation+0x68>
     18c:	3f c0       	rjmp	.+126    	; 0x20c <getNextOrientation+0xe6>
     18e:	8b 81       	ldd	r24, Y+3	; 0x03
     190:	9c 81       	ldd	r25, Y+4	; 0x04
     192:	fc 01       	movw	r30, r24
     194:	20 81       	ld	r18, Z
     196:	8f 81       	ldd	r24, Y+7	; 0x07
     198:	98 85       	ldd	r25, Y+8	; 0x08
     19a:	fc 01       	movw	r30, r24
     19c:	80 81       	ld	r24, Z
     19e:	91 81       	ldd	r25, Z+1	; 0x01
     1a0:	fc 01       	movw	r30, r24
     1a2:	80 81       	ld	r24, Z
     1a4:	82 17       	cp	r24, r18
     1a6:	90 f1       	brcs	.+100    	; 0x20c <getNextOrientation+0xe6>
		*current_position_x = **next_position_x;
     1a8:	8d 81       	ldd	r24, Y+5	; 0x05
     1aa:	9e 81       	ldd	r25, Y+6	; 0x06
     1ac:	fc 01       	movw	r30, r24
     1ae:	80 81       	ld	r24, Z
     1b0:	91 81       	ldd	r25, Z+1	; 0x01
     1b2:	fc 01       	movw	r30, r24
     1b4:	20 81       	ld	r18, Z
     1b6:	89 81       	ldd	r24, Y+1	; 0x01
     1b8:	9a 81       	ldd	r25, Y+2	; 0x02
     1ba:	fc 01       	movw	r30, r24
     1bc:	20 83       	st	Z, r18
		*current_position_y = **next_position_y;
     1be:	8f 81       	ldd	r24, Y+7	; 0x07
     1c0:	98 85       	ldd	r25, Y+8	; 0x08
     1c2:	fc 01       	movw	r30, r24
     1c4:	80 81       	ld	r24, Z
     1c6:	91 81       	ldd	r25, Z+1	; 0x01
     1c8:	fc 01       	movw	r30, r24
     1ca:	20 81       	ld	r18, Z
     1cc:	8b 81       	ldd	r24, Y+3	; 0x03
     1ce:	9c 81       	ldd	r25, Y+4	; 0x04
     1d0:	fc 01       	movw	r30, r24
     1d2:	20 83       	st	Z, r18

		*next_position_x = *next_position_x + 2;
     1d4:	8d 81       	ldd	r24, Y+5	; 0x05
     1d6:	9e 81       	ldd	r25, Y+6	; 0x06
     1d8:	fc 01       	movw	r30, r24
     1da:	80 81       	ld	r24, Z
     1dc:	91 81       	ldd	r25, Z+1	; 0x01
     1de:	9c 01       	movw	r18, r24
     1e0:	2e 5f       	subi	r18, 0xFE	; 254
     1e2:	3f 4f       	sbci	r19, 0xFF	; 255
     1e4:	8d 81       	ldd	r24, Y+5	; 0x05
     1e6:	9e 81       	ldd	r25, Y+6	; 0x06
     1e8:	fc 01       	movw	r30, r24
     1ea:	31 83       	std	Z+1, r19	; 0x01
     1ec:	20 83       	st	Z, r18
		*next_position_y = *next_position_y + 2;
     1ee:	8f 81       	ldd	r24, Y+7	; 0x07
     1f0:	98 85       	ldd	r25, Y+8	; 0x08
     1f2:	fc 01       	movw	r30, r24
     1f4:	80 81       	ld	r24, Z
     1f6:	91 81       	ldd	r25, Z+1	; 0x01
     1f8:	9c 01       	movw	r18, r24
     1fa:	2e 5f       	subi	r18, 0xFE	; 254
     1fc:	3f 4f       	sbci	r19, 0xFF	; 255
     1fe:	8f 81       	ldd	r24, Y+7	; 0x07
     200:	98 85       	ldd	r25, Y+8	; 0x08
     202:	fc 01       	movw	r30, r24
     204:	31 83       	std	Z+1, r19	; 0x01
     206:	20 83       	st	Z, r18

		return 'N';
     208:	8e e4       	ldi	r24, 0x4E	; 78
     20a:	e7 c0       	rjmp	.+462    	; 0x3da <getNextOrientation+0x2b4>
	}
	else if(*current_position_x <= **next_position_x && *current_position_y == **next_position_y){
     20c:	89 81       	ldd	r24, Y+1	; 0x01
     20e:	9a 81       	ldd	r25, Y+2	; 0x02
     210:	fc 01       	movw	r30, r24
     212:	20 81       	ld	r18, Z
     214:	8d 81       	ldd	r24, Y+5	; 0x05
     216:	9e 81       	ldd	r25, Y+6	; 0x06
     218:	fc 01       	movw	r30, r24
     21a:	80 81       	ld	r24, Z
     21c:	91 81       	ldd	r25, Z+1	; 0x01
     21e:	fc 01       	movw	r30, r24
     220:	80 81       	ld	r24, Z
     222:	82 17       	cp	r24, r18
     224:	08 f4       	brcc	.+2      	; 0x228 <getNextOrientation+0x102>
     226:	3f c0       	rjmp	.+126    	; 0x2a6 <getNextOrientation+0x180>
     228:	8b 81       	ldd	r24, Y+3	; 0x03
     22a:	9c 81       	ldd	r25, Y+4	; 0x04
     22c:	fc 01       	movw	r30, r24
     22e:	20 81       	ld	r18, Z
     230:	8f 81       	ldd	r24, Y+7	; 0x07
     232:	98 85       	ldd	r25, Y+8	; 0x08
     234:	fc 01       	movw	r30, r24
     236:	80 81       	ld	r24, Z
     238:	91 81       	ldd	r25, Z+1	; 0x01
     23a:	fc 01       	movw	r30, r24
     23c:	80 81       	ld	r24, Z
     23e:	28 17       	cp	r18, r24
     240:	91 f5       	brne	.+100    	; 0x2a6 <getNextOrientation+0x180>
		*current_position_x = **next_position_x;
     242:	8d 81       	ldd	r24, Y+5	; 0x05
     244:	9e 81       	ldd	r25, Y+6	; 0x06
     246:	fc 01       	movw	r30, r24
     248:	80 81       	ld	r24, Z
     24a:	91 81       	ldd	r25, Z+1	; 0x01
     24c:	fc 01       	movw	r30, r24
     24e:	20 81       	ld	r18, Z
     250:	89 81       	ldd	r24, Y+1	; 0x01
     252:	9a 81       	ldd	r25, Y+2	; 0x02
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18
		*current_position_y = **next_position_y;
     258:	8f 81       	ldd	r24, Y+7	; 0x07
     25a:	98 85       	ldd	r25, Y+8	; 0x08
     25c:	fc 01       	movw	r30, r24
     25e:	80 81       	ld	r24, Z
     260:	91 81       	ldd	r25, Z+1	; 0x01
     262:	fc 01       	movw	r30, r24
     264:	20 81       	ld	r18, Z
     266:	8b 81       	ldd	r24, Y+3	; 0x03
     268:	9c 81       	ldd	r25, Y+4	; 0x04
     26a:	fc 01       	movw	r30, r24
     26c:	20 83       	st	Z, r18

		*next_position_x = *next_position_x + 2;
     26e:	8d 81       	ldd	r24, Y+5	; 0x05
     270:	9e 81       	ldd	r25, Y+6	; 0x06
     272:	fc 01       	movw	r30, r24
     274:	80 81       	ld	r24, Z
     276:	91 81       	ldd	r25, Z+1	; 0x01
     278:	9c 01       	movw	r18, r24
     27a:	2e 5f       	subi	r18, 0xFE	; 254
     27c:	3f 4f       	sbci	r19, 0xFF	; 255
     27e:	8d 81       	ldd	r24, Y+5	; 0x05
     280:	9e 81       	ldd	r25, Y+6	; 0x06
     282:	fc 01       	movw	r30, r24
     284:	31 83       	std	Z+1, r19	; 0x01
     286:	20 83       	st	Z, r18
		*next_position_y = *next_position_y + 2;
     288:	8f 81       	ldd	r24, Y+7	; 0x07
     28a:	98 85       	ldd	r25, Y+8	; 0x08
     28c:	fc 01       	movw	r30, r24
     28e:	80 81       	ld	r24, Z
     290:	91 81       	ldd	r25, Z+1	; 0x01
     292:	9c 01       	movw	r18, r24
     294:	2e 5f       	subi	r18, 0xFE	; 254
     296:	3f 4f       	sbci	r19, 0xFF	; 255
     298:	8f 81       	ldd	r24, Y+7	; 0x07
     29a:	98 85       	ldd	r25, Y+8	; 0x08
     29c:	fc 01       	movw	r30, r24
     29e:	31 83       	std	Z+1, r19	; 0x01
     2a0:	20 83       	st	Z, r18

		return 'E';
     2a2:	85 e4       	ldi	r24, 0x45	; 69
     2a4:	9a c0       	rjmp	.+308    	; 0x3da <getNextOrientation+0x2b4>
	}
	else if(*current_position_x == **next_position_x && *current_position_y >= **next_position_y){
     2a6:	89 81       	ldd	r24, Y+1	; 0x01
     2a8:	9a 81       	ldd	r25, Y+2	; 0x02
     2aa:	fc 01       	movw	r30, r24
     2ac:	20 81       	ld	r18, Z
     2ae:	8d 81       	ldd	r24, Y+5	; 0x05
     2b0:	9e 81       	ldd	r25, Y+6	; 0x06
     2b2:	fc 01       	movw	r30, r24
     2b4:	80 81       	ld	r24, Z
     2b6:	91 81       	ldd	r25, Z+1	; 0x01
     2b8:	fc 01       	movw	r30, r24
     2ba:	80 81       	ld	r24, Z
     2bc:	28 17       	cp	r18, r24
     2be:	09 f0       	breq	.+2      	; 0x2c2 <getNextOrientation+0x19c>
     2c0:	3f c0       	rjmp	.+126    	; 0x340 <getNextOrientation+0x21a>
     2c2:	8b 81       	ldd	r24, Y+3	; 0x03
     2c4:	9c 81       	ldd	r25, Y+4	; 0x04
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 81       	ld	r18, Z
     2ca:	8f 81       	ldd	r24, Y+7	; 0x07
     2cc:	98 85       	ldd	r25, Y+8	; 0x08
     2ce:	fc 01       	movw	r30, r24
     2d0:	80 81       	ld	r24, Z
     2d2:	91 81       	ldd	r25, Z+1	; 0x01
     2d4:	fc 01       	movw	r30, r24
     2d6:	80 81       	ld	r24, Z
     2d8:	28 17       	cp	r18, r24
     2da:	90 f1       	brcs	.+100    	; 0x340 <getNextOrientation+0x21a>
		*current_position_x = **next_position_x;
     2dc:	8d 81       	ldd	r24, Y+5	; 0x05
     2de:	9e 81       	ldd	r25, Y+6	; 0x06
     2e0:	fc 01       	movw	r30, r24
     2e2:	80 81       	ld	r24, Z
     2e4:	91 81       	ldd	r25, Z+1	; 0x01
     2e6:	fc 01       	movw	r30, r24
     2e8:	20 81       	ld	r18, Z
     2ea:	89 81       	ldd	r24, Y+1	; 0x01
     2ec:	9a 81       	ldd	r25, Y+2	; 0x02
     2ee:	fc 01       	movw	r30, r24
     2f0:	20 83       	st	Z, r18
		*current_position_y = **next_position_y;
     2f2:	8f 81       	ldd	r24, Y+7	; 0x07
     2f4:	98 85       	ldd	r25, Y+8	; 0x08
     2f6:	fc 01       	movw	r30, r24
     2f8:	80 81       	ld	r24, Z
     2fa:	91 81       	ldd	r25, Z+1	; 0x01
     2fc:	fc 01       	movw	r30, r24
     2fe:	20 81       	ld	r18, Z
     300:	8b 81       	ldd	r24, Y+3	; 0x03
     302:	9c 81       	ldd	r25, Y+4	; 0x04
     304:	fc 01       	movw	r30, r24
     306:	20 83       	st	Z, r18

		*next_position_x = *next_position_x + 2;
     308:	8d 81       	ldd	r24, Y+5	; 0x05
     30a:	9e 81       	ldd	r25, Y+6	; 0x06
     30c:	fc 01       	movw	r30, r24
     30e:	80 81       	ld	r24, Z
     310:	91 81       	ldd	r25, Z+1	; 0x01
     312:	9c 01       	movw	r18, r24
     314:	2e 5f       	subi	r18, 0xFE	; 254
     316:	3f 4f       	sbci	r19, 0xFF	; 255
     318:	8d 81       	ldd	r24, Y+5	; 0x05
     31a:	9e 81       	ldd	r25, Y+6	; 0x06
     31c:	fc 01       	movw	r30, r24
     31e:	31 83       	std	Z+1, r19	; 0x01
     320:	20 83       	st	Z, r18
		*next_position_y = *next_position_y + 2;
     322:	8f 81       	ldd	r24, Y+7	; 0x07
     324:	98 85       	ldd	r25, Y+8	; 0x08
     326:	fc 01       	movw	r30, r24
     328:	80 81       	ld	r24, Z
     32a:	91 81       	ldd	r25, Z+1	; 0x01
     32c:	9c 01       	movw	r18, r24
     32e:	2e 5f       	subi	r18, 0xFE	; 254
     330:	3f 4f       	sbci	r19, 0xFF	; 255
     332:	8f 81       	ldd	r24, Y+7	; 0x07
     334:	98 85       	ldd	r25, Y+8	; 0x08
     336:	fc 01       	movw	r30, r24
     338:	31 83       	std	Z+1, r19	; 0x01
     33a:	20 83       	st	Z, r18

		return 'S';
     33c:	83 e5       	ldi	r24, 0x53	; 83
     33e:	4d c0       	rjmp	.+154    	; 0x3da <getNextOrientation+0x2b4>
	}
	else if(*current_position_x >= **next_position_x && *current_position_y == **next_position_y){
     340:	89 81       	ldd	r24, Y+1	; 0x01
     342:	9a 81       	ldd	r25, Y+2	; 0x02
     344:	fc 01       	movw	r30, r24
     346:	20 81       	ld	r18, Z
     348:	8d 81       	ldd	r24, Y+5	; 0x05
     34a:	9e 81       	ldd	r25, Y+6	; 0x06
     34c:	fc 01       	movw	r30, r24
     34e:	80 81       	ld	r24, Z
     350:	91 81       	ldd	r25, Z+1	; 0x01
     352:	fc 01       	movw	r30, r24
     354:	80 81       	ld	r24, Z
     356:	28 17       	cp	r18, r24
     358:	08 f4       	brcc	.+2      	; 0x35c <getNextOrientation+0x236>
     35a:	3f c0       	rjmp	.+126    	; 0x3da <getNextOrientation+0x2b4>
     35c:	8b 81       	ldd	r24, Y+3	; 0x03
     35e:	9c 81       	ldd	r25, Y+4	; 0x04
     360:	fc 01       	movw	r30, r24
     362:	20 81       	ld	r18, Z
     364:	8f 81       	ldd	r24, Y+7	; 0x07
     366:	98 85       	ldd	r25, Y+8	; 0x08
     368:	fc 01       	movw	r30, r24
     36a:	80 81       	ld	r24, Z
     36c:	91 81       	ldd	r25, Z+1	; 0x01
     36e:	fc 01       	movw	r30, r24
     370:	80 81       	ld	r24, Z
     372:	28 17       	cp	r18, r24
     374:	91 f5       	brne	.+100    	; 0x3da <getNextOrientation+0x2b4>
		*current_position_x = **next_position_x;
     376:	8d 81       	ldd	r24, Y+5	; 0x05
     378:	9e 81       	ldd	r25, Y+6	; 0x06
     37a:	fc 01       	movw	r30, r24
     37c:	80 81       	ld	r24, Z
     37e:	91 81       	ldd	r25, Z+1	; 0x01
     380:	fc 01       	movw	r30, r24
     382:	20 81       	ld	r18, Z
     384:	89 81       	ldd	r24, Y+1	; 0x01
     386:	9a 81       	ldd	r25, Y+2	; 0x02
     388:	fc 01       	movw	r30, r24
     38a:	20 83       	st	Z, r18
		*current_position_y = **next_position_y;
     38c:	8f 81       	ldd	r24, Y+7	; 0x07
     38e:	98 85       	ldd	r25, Y+8	; 0x08
     390:	fc 01       	movw	r30, r24
     392:	80 81       	ld	r24, Z
     394:	91 81       	ldd	r25, Z+1	; 0x01
     396:	fc 01       	movw	r30, r24
     398:	20 81       	ld	r18, Z
     39a:	8b 81       	ldd	r24, Y+3	; 0x03
     39c:	9c 81       	ldd	r25, Y+4	; 0x04
     39e:	fc 01       	movw	r30, r24
     3a0:	20 83       	st	Z, r18

		*next_position_x = *next_position_x + 2;
     3a2:	8d 81       	ldd	r24, Y+5	; 0x05
     3a4:	9e 81       	ldd	r25, Y+6	; 0x06
     3a6:	fc 01       	movw	r30, r24
     3a8:	80 81       	ld	r24, Z
     3aa:	91 81       	ldd	r25, Z+1	; 0x01
     3ac:	9c 01       	movw	r18, r24
     3ae:	2e 5f       	subi	r18, 0xFE	; 254
     3b0:	3f 4f       	sbci	r19, 0xFF	; 255
     3b2:	8d 81       	ldd	r24, Y+5	; 0x05
     3b4:	9e 81       	ldd	r25, Y+6	; 0x06
     3b6:	fc 01       	movw	r30, r24
     3b8:	31 83       	std	Z+1, r19	; 0x01
     3ba:	20 83       	st	Z, r18
		*next_position_y = *next_position_y + 2;
     3bc:	8f 81       	ldd	r24, Y+7	; 0x07
     3be:	98 85       	ldd	r25, Y+8	; 0x08
     3c0:	fc 01       	movw	r30, r24
     3c2:	80 81       	ld	r24, Z
     3c4:	91 81       	ldd	r25, Z+1	; 0x01
     3c6:	9c 01       	movw	r18, r24
     3c8:	2e 5f       	subi	r18, 0xFE	; 254
     3ca:	3f 4f       	sbci	r19, 0xFF	; 255
     3cc:	8f 81       	ldd	r24, Y+7	; 0x07
     3ce:	98 85       	ldd	r25, Y+8	; 0x08
     3d0:	fc 01       	movw	r30, r24
     3d2:	31 83       	std	Z+1, r19	; 0x01
     3d4:	20 83       	st	Z, r18

		return 'W';
     3d6:	87 e5       	ldi	r24, 0x57	; 87
     3d8:	00 c0       	rjmp	.+0      	; 0x3da <getNextOrientation+0x2b4>
	}
}
     3da:	28 96       	adiw	r28, 0x08	; 8
     3dc:	0f b6       	in	r0, 0x3f	; 63
     3de:	f8 94       	cli
     3e0:	de bf       	out	0x3e, r29	; 62
     3e2:	0f be       	out	0x3f, r0	; 63
     3e4:	cd bf       	out	0x3d, r28	; 61
     3e6:	df 91       	pop	r29
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <getNextMove>:

char getNextMove(char* current_orientation,char next_orientation)
{
     3ec:	cf 93       	push	r28
     3ee:	df 93       	push	r29
     3f0:	00 d0       	rcall	.+0      	; 0x3f2 <getNextMove+0x6>
     3f2:	cd b7       	in	r28, 0x3d	; 61
     3f4:	de b7       	in	r29, 0x3e	; 62
     3f6:	9a 83       	std	Y+2, r25	; 0x02
     3f8:	89 83       	std	Y+1, r24	; 0x01
     3fa:	6b 83       	std	Y+3, r22	; 0x03
	if((*current_orientation == 'N' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'S') ||
     3fc:	89 81       	ldd	r24, Y+1	; 0x01
     3fe:	9a 81       	ldd	r25, Y+2	; 0x02
     400:	fc 01       	movw	r30, r24
     402:	80 81       	ld	r24, Z
     404:	8e 34       	cpi	r24, 0x4E	; 78
     406:	19 f4       	brne	.+6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     408:	8b 81       	ldd	r24, Y+3	; 0x03
     40a:	85 34       	cpi	r24, 0x45	; 69
     40c:	d9 f0       	breq	.+54     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     40e:	89 81       	ldd	r24, Y+1	; 0x01
     410:	9a 81       	ldd	r25, Y+2	; 0x02
     412:	fc 01       	movw	r30, r24
     414:	80 81       	ld	r24, Z
     416:	85 34       	cpi	r24, 0x45	; 69
     418:	19 f4       	brne	.+6      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     41a:	8b 81       	ldd	r24, Y+3	; 0x03
     41c:	83 35       	cpi	r24, 0x53	; 83
     41e:	91 f0       	breq	.+36     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
	(*current_orientation=='S' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'N')){
     420:	89 81       	ldd	r24, Y+1	; 0x01
     422:	9a 81       	ldd	r25, Y+2	; 0x02
     424:	fc 01       	movw	r30, r24
     426:	80 81       	ld	r24, Z
	}
}

char getNextMove(char* current_orientation,char next_orientation)
{
	if((*current_orientation == 'N' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'S') ||
     428:	83 35       	cpi	r24, 0x53	; 83
     42a:	19 f4       	brne	.+6      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
	(*current_orientation=='S' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'N')){
     42c:	8b 81       	ldd	r24, Y+3	; 0x03
     42e:	87 35       	cpi	r24, 0x57	; 87
     430:	49 f0       	breq	.+18     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     432:	89 81       	ldd	r24, Y+1	; 0x01
     434:	9a 81       	ldd	r25, Y+2	; 0x02
     436:	fc 01       	movw	r30, r24
     438:	80 81       	ld	r24, Z
     43a:	87 35       	cpi	r24, 0x57	; 87
     43c:	51 f4       	brne	.+20     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
     43e:	8b 81       	ldd	r24, Y+3	; 0x03
     440:	8e 34       	cpi	r24, 0x4E	; 78
     442:	39 f4       	brne	.+14     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
		*current_orientation = next_orientation;
     444:	89 81       	ldd	r24, Y+1	; 0x01
     446:	9a 81       	ldd	r25, Y+2	; 0x02
     448:	2b 81       	ldd	r18, Y+3	; 0x03
     44a:	fc 01       	movw	r30, r24
     44c:	20 83       	st	Z, r18
		return 'R';
     44e:	82 e5       	ldi	r24, 0x52	; 82
     450:	57 c0       	rjmp	.+174    	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
	}
	else if((*current_orientation == 'N' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'S') ||
     452:	89 81       	ldd	r24, Y+1	; 0x01
     454:	9a 81       	ldd	r25, Y+2	; 0x02
     456:	fc 01       	movw	r30, r24
     458:	80 81       	ld	r24, Z
     45a:	8e 34       	cpi	r24, 0x4E	; 78
     45c:	19 f4       	brne	.+6      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     45e:	8b 81       	ldd	r24, Y+3	; 0x03
     460:	87 35       	cpi	r24, 0x57	; 87
     462:	d9 f0       	breq	.+54     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     464:	89 81       	ldd	r24, Y+1	; 0x01
     466:	9a 81       	ldd	r25, Y+2	; 0x02
     468:	fc 01       	movw	r30, r24
     46a:	80 81       	ld	r24, Z
     46c:	87 35       	cpi	r24, 0x57	; 87
     46e:	19 f4       	brne	.+6      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     470:	8b 81       	ldd	r24, Y+3	; 0x03
     472:	83 35       	cpi	r24, 0x53	; 83
     474:	91 f0       	breq	.+36     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
	(*current_orientation=='S' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'N')){
     476:	89 81       	ldd	r24, Y+1	; 0x01
     478:	9a 81       	ldd	r25, Y+2	; 0x02
     47a:	fc 01       	movw	r30, r24
     47c:	80 81       	ld	r24, Z
	if((*current_orientation == 'N' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'S') ||
	(*current_orientation=='S' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'N')){
		*current_orientation = next_orientation;
		return 'R';
	}
	else if((*current_orientation == 'N' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'S') ||
     47e:	83 35       	cpi	r24, 0x53	; 83
     480:	19 f4       	brne	.+6      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
	(*current_orientation=='S' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'N')){
     482:	8b 81       	ldd	r24, Y+3	; 0x03
     484:	85 34       	cpi	r24, 0x45	; 69
     486:	49 f0       	breq	.+18     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     488:	89 81       	ldd	r24, Y+1	; 0x01
     48a:	9a 81       	ldd	r25, Y+2	; 0x02
     48c:	fc 01       	movw	r30, r24
     48e:	80 81       	ld	r24, Z
     490:	85 34       	cpi	r24, 0x45	; 69
     492:	51 f4       	brne	.+20     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     494:	8b 81       	ldd	r24, Y+3	; 0x03
     496:	8e 34       	cpi	r24, 0x4E	; 78
     498:	39 f4       	brne	.+14     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
		*current_orientation = next_orientation;
     49a:	89 81       	ldd	r24, Y+1	; 0x01
     49c:	9a 81       	ldd	r25, Y+2	; 0x02
     49e:	2b 81       	ldd	r18, Y+3	; 0x03
     4a0:	fc 01       	movw	r30, r24
     4a2:	20 83       	st	Z, r18
		return 'L';
     4a4:	8c e4       	ldi	r24, 0x4C	; 76
     4a6:	2c c0       	rjmp	.+88     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
	}
	else if((*current_orientation == 'N' && next_orientation == 'N') || (*current_orientation == 'E' && next_orientation == 'E') ||
     4a8:	89 81       	ldd	r24, Y+1	; 0x01
     4aa:	9a 81       	ldd	r25, Y+2	; 0x02
     4ac:	fc 01       	movw	r30, r24
     4ae:	80 81       	ld	r24, Z
     4b0:	8e 34       	cpi	r24, 0x4E	; 78
     4b2:	19 f4       	brne	.+6      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     4b4:	8b 81       	ldd	r24, Y+3	; 0x03
     4b6:	8e 34       	cpi	r24, 0x4E	; 78
     4b8:	d9 f0       	breq	.+54     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     4ba:	89 81       	ldd	r24, Y+1	; 0x01
     4bc:	9a 81       	ldd	r25, Y+2	; 0x02
     4be:	fc 01       	movw	r30, r24
     4c0:	80 81       	ld	r24, Z
     4c2:	85 34       	cpi	r24, 0x45	; 69
     4c4:	19 f4       	brne	.+6      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4c6:	8b 81       	ldd	r24, Y+3	; 0x03
     4c8:	85 34       	cpi	r24, 0x45	; 69
     4ca:	91 f0       	breq	.+36     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
	(*current_orientation=='S' && next_orientation == 'S') || (*current_orientation == 'W' && next_orientation == 'W')){
     4cc:	89 81       	ldd	r24, Y+1	; 0x01
     4ce:	9a 81       	ldd	r25, Y+2	; 0x02
     4d0:	fc 01       	movw	r30, r24
     4d2:	80 81       	ld	r24, Z
	else if((*current_orientation == 'N' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'S') ||
	(*current_orientation=='S' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'N')){
		*current_orientation = next_orientation;
		return 'L';
	}
	else if((*current_orientation == 'N' && next_orientation == 'N') || (*current_orientation == 'E' && next_orientation == 'E') ||
     4d4:	83 35       	cpi	r24, 0x53	; 83
     4d6:	19 f4       	brne	.+6      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
	(*current_orientation=='S' && next_orientation == 'S') || (*current_orientation == 'W' && next_orientation == 'W')){
     4d8:	8b 81       	ldd	r24, Y+3	; 0x03
     4da:	83 35       	cpi	r24, 0x53	; 83
     4dc:	49 f0       	breq	.+18     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     4de:	89 81       	ldd	r24, Y+1	; 0x01
     4e0:	9a 81       	ldd	r25, Y+2	; 0x02
     4e2:	fc 01       	movw	r30, r24
     4e4:	80 81       	ld	r24, Z
     4e6:	87 35       	cpi	r24, 0x57	; 87
     4e8:	51 f4       	brne	.+20     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
     4ea:	8b 81       	ldd	r24, Y+3	; 0x03
     4ec:	87 35       	cpi	r24, 0x57	; 87
     4ee:	39 f4       	brne	.+14     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
		*current_orientation = next_orientation;
     4f0:	89 81       	ldd	r24, Y+1	; 0x01
     4f2:	9a 81       	ldd	r25, Y+2	; 0x02
     4f4:	2b 81       	ldd	r18, Y+3	; 0x03
     4f6:	fc 01       	movw	r30, r24
     4f8:	20 83       	st	Z, r18
		return 'F';
     4fa:	86 e4       	ldi	r24, 0x46	; 70
     4fc:	01 c0       	rjmp	.+2      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
	}
	else
	return 'S';
     4fe:	83 e5       	ldi	r24, 0x53	; 83
}
     500:	0f 90       	pop	r0
     502:	0f 90       	pop	r0
     504:	0f 90       	pop	r0
     506:	df 91       	pop	r29
     508:	cf 91       	pop	r28
     50a:	08 95       	ret

0000050c <path_follow>:



char path_follow(unsigned char L_sen, unsigned char C_sen, unsigned char R_sen)
{
     50c:	cf 93       	push	r28
     50e:	df 93       	push	r29
     510:	cd b7       	in	r28, 0x3d	; 61
     512:	de b7       	in	r29, 0x3e	; 62
     514:	61 97       	sbiw	r28, 0x11	; 17
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	f8 94       	cli
     51a:	de bf       	out	0x3e, r29	; 62
     51c:	0f be       	out	0x3f, r0	; 63
     51e:	cd bf       	out	0x3d, r28	; 61
     520:	8f 87       	std	Y+15, r24	; 0x0f
     522:	68 8b       	std	Y+16, r22	; 0x10
     524:	49 8b       	std	Y+17, r20	; 0x11
	Flag = 0;
     526:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <Flag>
	node_detected = 0;
     52a:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <node_detected>
	if ( (L_sen > min_thresh) && (C_sen > min_thresh) && (R_sen > min_thresh) )		// Node Detected									
     52e:	8f 85       	ldd	r24, Y+15	; 0x0f
     530:	83 33       	cpi	r24, 0x33	; 51
     532:	78 f0       	brcs	.+30     	; 0x552 <path_follow+0x46>
     534:	88 89       	ldd	r24, Y+16	; 0x10
     536:	83 33       	cpi	r24, 0x33	; 51
     538:	60 f0       	brcs	.+24     	; 0x552 <path_follow+0x46>
     53a:	89 89       	ldd	r24, Y+17	; 0x11
     53c:	83 33       	cpi	r24, 0x33	; 51
     53e:	48 f0       	brcs	.+18     	; 0x552 <path_follow+0x46>
	{
		velocity(0,0);
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	28 d2       	rcall	.+1104   	; 0x996 <velocity>
		Flag = 1;
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <Flag>
		node_detected = 1;
     54c:	81 e0       	ldi	r24, 0x01	; 1
     54e:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <node_detected>
	}
	
	if( (L_sen >= min_thresh) && (node_detected == 0) && ( Flag == 0 ) )		// Left
     552:	8f 85       	ldd	r24, Y+15	; 0x0f
     554:	82 33       	cpi	r24, 0x32	; 50
     556:	78 f0       	brcs	.+30     	; 0x576 <path_follow+0x6a>
     558:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <node_detected>
     55c:	88 23       	and	r24, r24
     55e:	59 f4       	brne	.+22     	; 0x576 <path_follow+0x6a>
     560:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <Flag>
     564:	88 23       	and	r24, r24
	{
		forward();
     566:	39 f4       	brne	.+14     	; 0x576 <path_follow+0x6a>
     568:	53 d2       	rcall	.+1190   	; 0xa10 <forward>
		velocity(80,180);
     56a:	64 eb       	ldi	r22, 0xB4	; 180
     56c:	80 e5       	ldi	r24, 0x50	; 80
     56e:	13 d2       	rcall	.+1062   	; 0x996 <velocity>
		Flag = 1;
     570:	81 e0       	ldi	r24, 0x01	; 1
     572:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <Flag>
	}

	if( (R_sen >= min_thresh) && (node_detected == 0) && ( Flag == 0 ) )       // right
     576:	89 89       	ldd	r24, Y+17	; 0x11
     578:	82 33       	cpi	r24, 0x32	; 50
     57a:	78 f0       	brcs	.+30     	; 0x59a <path_follow+0x8e>
     57c:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <node_detected>
     580:	88 23       	and	r24, r24
     582:	59 f4       	brne	.+22     	; 0x59a <path_follow+0x8e>
     584:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <Flag>
     588:	88 23       	and	r24, r24
	{
		forward();
     58a:	39 f4       	brne	.+14     	; 0x59a <path_follow+0x8e>
		velocity(180,80);																									
     58c:	41 d2       	rcall	.+1154   	; 0xa10 <forward>
     58e:	60 e5       	ldi	r22, 0x50	; 80
     590:	84 eb       	ldi	r24, 0xB4	; 180
     592:	01 d2       	rcall	.+1026   	; 0x996 <velocity>
		Flag = 1;
     594:	81 e0       	ldi	r24, 0x01	; 1
     596:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <Flag>
	}
	

	if ( (C_sen >= min_thresh) && (node_detected == 0) && ( Flag == 0 ) )		// Forward
     59a:	88 89       	ldd	r24, Y+16	; 0x10
     59c:	82 33       	cpi	r24, 0x32	; 50
     59e:	78 f0       	brcs	.+30     	; 0x5be <path_follow+0xb2>
     5a0:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <node_detected>
     5a4:	88 23       	and	r24, r24
     5a6:	59 f4       	brne	.+22     	; 0x5be <path_follow+0xb2>
     5a8:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <Flag>
	{
		forward();
     5ac:	88 23       	and	r24, r24
     5ae:	39 f4       	brne	.+14     	; 0x5be <path_follow+0xb2>
		velocity(200,212);																									
     5b0:	2f d2       	rcall	.+1118   	; 0xa10 <forward>
     5b2:	64 ed       	ldi	r22, 0xD4	; 212
     5b4:	88 ec       	ldi	r24, 0xC8	; 200
     5b6:	ef d1       	rcall	.+990    	; 0x996 <velocity>
		Flag =1;
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <Flag>
	}
	
	if (node_detected)
     5be:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <node_detected>
     5c2:	88 23       	and	r24, r24
     5c4:	09 f4       	brne	.+2      	; 0x5c8 <path_follow+0xbc>
     5c6:	ed c0       	rjmp	.+474    	; 0x7a2 <path_follow+0x296>
	{
		next_orientation = getNextOrientation(&current_position_x,&current_position_y,&next_position_x,&next_position_y);
     5c8:	24 e1       	ldi	r18, 0x14	; 20
     5ca:	32 e0       	ldi	r19, 0x02	; 2
     5cc:	42 e1       	ldi	r20, 0x12	; 18
     5ce:	52 e0       	ldi	r21, 0x02	; 2
     5d0:	60 e1       	ldi	r22, 0x10	; 16
     5d2:	72 e0       	ldi	r23, 0x02	; 2
     5d4:	8f e0       	ldi	r24, 0x0F	; 15
     5d6:	92 e0       	ldi	r25, 0x02	; 2
     5d8:	a6 dd       	rcall	.-1204   	; 0x126 <getNextOrientation>
     5da:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <next_orientation>
		lcd_string(1,6,"NO:");
     5de:	46 e1       	ldi	r20, 0x16	; 22
     5e0:	52 e0       	ldi	r21, 0x02	; 2
     5e2:	66 e0       	ldi	r22, 0x06	; 6
     5e4:	81 e0       	ldi	r24, 0x01	; 1
     5e6:	0e 94 08 11 	call	0x2210	; 0x2210 <lcd_string>
		lcd_wr_char(1,10,next_orientation);
     5ea:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <next_orientation>
     5ee:	48 2f       	mov	r20, r24
     5f0:	6a e0       	ldi	r22, 0x0A	; 10
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <lcd_wr_char>
		if (next_orientation == 'x')
     5f8:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <next_orientation>
     5fc:	88 37       	cpi	r24, 0x78	; 120
		  return 'x';
     5fe:	11 f4       	brne	.+4      	; 0x604 <path_follow+0xf8>
     600:	88 e7       	ldi	r24, 0x78	; 120
		next_move = getNextMove(&current_orientation,next_orientation);
     602:	cf c0       	rjmp	.+414    	; 0x7a2 <path_follow+0x296>
     604:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <next_orientation>
     608:	68 2f       	mov	r22, r24
     60a:	81 e1       	ldi	r24, 0x11	; 17
     60c:	92 e0       	ldi	r25, 0x02	; 2
     60e:	ee de       	rcall	.-548    	; 0x3ec <getNextMove>
     610:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <next_move>
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	aa ef       	ldi	r26, 0xFA	; 250
     61a:	b3 e4       	ldi	r27, 0x43	; 67
     61c:	89 83       	std	Y+1, r24	; 0x01
     61e:	9a 83       	std	Y+2, r25	; 0x02
     620:	ab 83       	std	Y+3, r26	; 0x03
     622:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     624:	26 e6       	ldi	r18, 0x66	; 102
     626:	36 e6       	ldi	r19, 0x66	; 102
     628:	46 e6       	ldi	r20, 0x66	; 102
     62a:	55 e4       	ldi	r21, 0x45	; 69
     62c:	69 81       	ldd	r22, Y+1	; 0x01
     62e:	7a 81       	ldd	r23, Y+2	; 0x02
     630:	8b 81       	ldd	r24, Y+3	; 0x03
     632:	9c 81       	ldd	r25, Y+4	; 0x04
     634:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__mulsf3>
     638:	dc 01       	movw	r26, r24
     63a:	cb 01       	movw	r24, r22
     63c:	8d 83       	std	Y+5, r24	; 0x05
     63e:	9e 83       	std	Y+6, r25	; 0x06
     640:	af 83       	std	Y+7, r26	; 0x07
     642:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     644:	20 e0       	ldi	r18, 0x00	; 0
     646:	30 e0       	ldi	r19, 0x00	; 0
     648:	40 e8       	ldi	r20, 0x80	; 128
     64a:	5f e3       	ldi	r21, 0x3F	; 63
     64c:	6d 81       	ldd	r22, Y+5	; 0x05
     64e:	7e 81       	ldd	r23, Y+6	; 0x06
     650:	8f 81       	ldd	r24, Y+7	; 0x07
     652:	98 85       	ldd	r25, Y+8	; 0x08
     654:	0e 94 31 11 	call	0x2262	; 0x2262 <__cmpsf2>
     658:	88 23       	and	r24, r24
     65a:	2c f4       	brge	.+10     	; 0x666 <path_follow+0x15a>
		__ticks = 1;
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	9a 87       	std	Y+10, r25	; 0x0a
     662:	89 87       	std	Y+9, r24	; 0x09
     664:	3f c0       	rjmp	.+126    	; 0x6e4 <path_follow+0x1d8>
	else if (__tmp > 65535)
     666:	20 e0       	ldi	r18, 0x00	; 0
     668:	3f ef       	ldi	r19, 0xFF	; 255
     66a:	4f e7       	ldi	r20, 0x7F	; 127
     66c:	57 e4       	ldi	r21, 0x47	; 71
     66e:	6d 81       	ldd	r22, Y+5	; 0x05
     670:	7e 81       	ldd	r23, Y+6	; 0x06
     672:	8f 81       	ldd	r24, Y+7	; 0x07
     674:	98 85       	ldd	r25, Y+8	; 0x08
     676:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <__gesf2>
     67a:	18 16       	cp	r1, r24
     67c:	4c f5       	brge	.+82     	; 0x6d0 <path_follow+0x1c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     67e:	20 e0       	ldi	r18, 0x00	; 0
     680:	30 e0       	ldi	r19, 0x00	; 0
     682:	40 e2       	ldi	r20, 0x20	; 32
     684:	51 e4       	ldi	r21, 0x41	; 65
     686:	69 81       	ldd	r22, Y+1	; 0x01
     688:	7a 81       	ldd	r23, Y+2	; 0x02
     68a:	8b 81       	ldd	r24, Y+3	; 0x03
     68c:	9c 81       	ldd	r25, Y+4	; 0x04
     68e:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__mulsf3>
     692:	dc 01       	movw	r26, r24
     694:	cb 01       	movw	r24, r22
     696:	bc 01       	movw	r22, r24
     698:	cd 01       	movw	r24, r26
     69a:	0e 94 9d 11 	call	0x233a	; 0x233a <__fixunssfsi>
     69e:	dc 01       	movw	r26, r24
     6a0:	cb 01       	movw	r24, r22
     6a2:	9a 87       	std	Y+10, r25	; 0x0a
     6a4:	89 87       	std	Y+9, r24	; 0x09
     6a6:	0f c0       	rjmp	.+30     	; 0x6c6 <path_follow+0x1ba>
     6a8:	80 e7       	ldi	r24, 0x70	; 112
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	9c 87       	std	Y+12, r25	; 0x0c
     6ae:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     6b0:	8b 85       	ldd	r24, Y+11	; 0x0b
     6b2:	9c 85       	ldd	r25, Y+12	; 0x0c
     6b4:	01 97       	sbiw	r24, 0x01	; 1
     6b6:	f1 f7       	brne	.-4      	; 0x6b4 <path_follow+0x1a8>
     6b8:	9c 87       	std	Y+12, r25	; 0x0c
     6ba:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6bc:	89 85       	ldd	r24, Y+9	; 0x09
     6be:	9a 85       	ldd	r25, Y+10	; 0x0a
     6c0:	01 97       	sbiw	r24, 0x01	; 1
     6c2:	9a 87       	std	Y+10, r25	; 0x0a
     6c4:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6c6:	89 85       	ldd	r24, Y+9	; 0x09
     6c8:	9a 85       	ldd	r25, Y+10	; 0x0a
     6ca:	89 2b       	or	r24, r25
     6cc:	69 f7       	brne	.-38     	; 0x6a8 <path_follow+0x19c>
     6ce:	14 c0       	rjmp	.+40     	; 0x6f8 <path_follow+0x1ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6d0:	6d 81       	ldd	r22, Y+5	; 0x05
     6d2:	7e 81       	ldd	r23, Y+6	; 0x06
     6d4:	8f 81       	ldd	r24, Y+7	; 0x07
     6d6:	98 85       	ldd	r25, Y+8	; 0x08
     6d8:	0e 94 9d 11 	call	0x233a	; 0x233a <__fixunssfsi>
     6dc:	dc 01       	movw	r26, r24
     6de:	cb 01       	movw	r24, r22
     6e0:	9a 87       	std	Y+10, r25	; 0x0a
     6e2:	89 87       	std	Y+9, r24	; 0x09
     6e4:	89 85       	ldd	r24, Y+9	; 0x09
     6e6:	9a 85       	ldd	r25, Y+10	; 0x0a
     6e8:	9e 87       	std	Y+14, r25	; 0x0e
     6ea:	8d 87       	std	Y+13, r24	; 0x0d
     6ec:	8d 85       	ldd	r24, Y+13	; 0x0d
     6ee:	9e 85       	ldd	r25, Y+14	; 0x0e
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <path_follow+0x1e4>
     6f4:	9e 87       	std	Y+14, r25	; 0x0e
     6f6:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(500);
		lcd_string(1,1,"NM:");
     6f8:	4a e1       	ldi	r20, 0x1A	; 26
     6fa:	52 e0       	ldi	r21, 0x02	; 2
     6fc:	61 e0       	ldi	r22, 0x01	; 1
     6fe:	81 e0       	ldi	r24, 0x01	; 1
     700:	0e 94 08 11 	call	0x2210	; 0x2210 <lcd_string>
		lcd_wr_char(1,4,next_move);
     704:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <next_move>
     708:	48 2f       	mov	r20, r24
     70a:	64 e0       	ldi	r22, 0x04	; 4
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <lcd_wr_char>
		lcd_string(2,1,"CP:");
     712:	4e e1       	ldi	r20, 0x1E	; 30
     714:	52 e0       	ldi	r21, 0x02	; 2
     716:	61 e0       	ldi	r22, 0x01	; 1
     718:	82 e0       	ldi	r24, 0x02	; 2
     71a:	0e 94 08 11 	call	0x2210	; 0x2210 <lcd_string>
		lcd_wr_char(2,4,current_position_x);
     71e:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <current_position_x>
     722:	48 2f       	mov	r20, r24
     724:	64 e0       	ldi	r22, 0x04	; 4
     726:	82 e0       	ldi	r24, 0x02	; 2
     728:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <lcd_wr_char>
		lcd_wr_char(2,5,',');
     72c:	4c e2       	ldi	r20, 0x2C	; 44
     72e:	65 e0       	ldi	r22, 0x05	; 5
     730:	82 e0       	ldi	r24, 0x02	; 2
     732:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <lcd_wr_char>
		lcd_wr_char(2,6,current_position_y);
     736:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <current_position_y>
     73a:	48 2f       	mov	r20, r24
     73c:	66 e0       	ldi	r22, 0x06	; 6
     73e:	82 e0       	ldi	r24, 0x02	; 2
     740:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <lcd_wr_char>
			switch(next_move)
     744:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <next_move>
     748:	88 2f       	mov	r24, r24
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	8c 34       	cpi	r24, 0x4C	; 76
     74e:	91 05       	cpc	r25, r1
     750:	e1 f0       	breq	.+56     	; 0x78a <path_follow+0x27e>
     752:	8d 34       	cpi	r24, 0x4D	; 77
     754:	91 05       	cpc	r25, r1
     756:	24 f4       	brge	.+8      	; 0x760 <path_follow+0x254>
     758:	86 34       	cpi	r24, 0x46	; 70
     75a:	91 05       	cpc	r25, r1
     75c:	41 f0       	breq	.+16     	; 0x76e <path_follow+0x262>
     75e:	21 c0       	rjmp	.+66     	; 0x7a2 <path_follow+0x296>
     760:	82 35       	cpi	r24, 0x52	; 82
     762:	91 05       	cpc	r25, r1
     764:	59 f0       	breq	.+22     	; 0x77c <path_follow+0x270>
     766:	83 35       	cpi	r24, 0x53	; 83
     768:	91 05       	cpc	r25, r1
			 {
				 
					case 'F':
							velocity(200,212);
     76a:	b1 f0       	breq	.+44     	; 0x798 <path_follow+0x28c>
     76c:	1a c0       	rjmp	.+52     	; 0x7a2 <path_follow+0x296>
     76e:	64 ed       	ldi	r22, 0xD4	; 212
							forward_mm(85);
     770:	88 ec       	ldi	r24, 0xC8	; 200
     772:	11 d1       	rcall	.+546    	; 0x996 <velocity>
     774:	85 e5       	ldi	r24, 0x55	; 85
							break;
     776:	90 e0       	ldi	r25, 0x00	; 0
											 
					case 'R':
						forward_mm(65);
     778:	f7 d2       	rcall	.+1518   	; 0xd68 <forward_mm>
     77a:	13 c0       	rjmp	.+38     	; 0x7a2 <path_follow+0x296>
     77c:	81 e4       	ldi	r24, 0x41	; 65
						right_degrees(90);
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	f3 d2       	rcall	.+1510   	; 0xd68 <forward_mm>
     782:	8a e5       	ldi	r24, 0x5A	; 90
     784:	90 e0       	ldi	r25, 0x00	; 0
					break;
     786:	1a d3       	rcall	.+1588   	; 0xdbc <right_degrees>
					
					
					case 'L':
						forward_mm(65);
     788:	0c c0       	rjmp	.+24     	; 0x7a2 <path_follow+0x296>
     78a:	81 e4       	ldi	r24, 0x41	; 65
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	ec d2       	rcall	.+1496   	; 0xd68 <forward_mm>
						left_degrees(90);
     790:	8a e5       	ldi	r24, 0x5A	; 90
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	fe d2       	rcall	.+1532   	; 0xd92 <left_degrees>
     796:	05 c0       	rjmp	.+10     	; 0x7a2 <path_follow+0x296>
					break;
     798:	47 e4       	ldi	r20, 0x47	; 71
					
				   case 'S':
						lcd_wr_char(1,6,'G');		
     79a:	66 e0       	ldi	r22, 0x06	; 6
     79c:	81 e0       	ldi	r24, 0x01	; 1
     79e:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <lcd_wr_char>
     7a2:	61 96       	adiw	r28, 0x11	; 17
	{
		
	}*/
	
	
}
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	cd bf       	out	0x3d, r28	; 61
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	08 95       	ret

000007b4 <main>:
     7b4:	cf 93       	push	r28



int main(void)
{
     7b6:	df 93       	push	r29
     7b8:	00 d0       	rcall	.+0      	; 0x7ba <main+0x6>
     7ba:	1f 92       	push	r1
     7bc:	cd b7       	in	r28, 0x3d	; 61
     7be:	de b7       	in	r29, 0x3e	; 62
	unsigned char R_sense,C_sense,L_sense;
	char stop_flag;
	R_sense = 0;
     7c0:	19 82       	std	Y+1, r1	; 0x01
	C_sense = 0;
     7c2:	1a 82       	std	Y+2, r1	; 0x02
	L_sense = 0;
     7c4:	1b 82       	std	Y+3, r1	; 0x03
	lcd_port_config();
     7c6:	e2 d3       	rcall	.+1988   	; 0xf8c <lcd_port_config>
	lcd_init();
     7c8:	0e 94 e1 0e 	call	0x1dc2	; 0x1dc2 <lcd_init>
	motors_pin_config();
	pwm_pin_config();
     7cc:	26 d0       	rcall	.+76     	; 0x81a <motors_pin_config>
	position_encoder_pin_config();
     7ce:	3f d0       	rcall	.+126    	; 0x84e <pwm_pin_config>
	position_encoder_interrupt_config();
     7d0:	58 d0       	rcall	.+176    	; 0x882 <position_encoder_pin_config>
     7d2:	f9 d0       	rcall	.+498    	; 0x9c6 <position_encoder_interrupt_config>
	adc_port_config();					
     7d4:	c3 d3       	rcall	.+1926   	; 0xf5c <adc_port_config>
	adc_init();							
     7d6:	21 d3       	rcall	.+1602   	; 0xe1a <adc_init>
	timer5_init();
     7d8:	6e d0       	rcall	.+220    	; 0x8b6 <timer5_init>
     7da:	68 ec       	ldi	r22, 0xC8	; 200
	velocity(200,200);
     7dc:	88 ec       	ldi	r24, 0xC8	; 200
     7de:	db d0       	rcall	.+438    	; 0x996 <velocity>
     7e0:	02 d3       	rcall	.+1540   	; 0xde6 <buzzer_init>
	buzzer_init();
     7e2:	83 e0       	ldi	r24, 0x03	; 3
     7e4:	61 d3       	rcall	.+1730   	; 0xea8 <ADC_Conversion>
	while(1)
	{
		L_sense = ADC_Conversion(left_wl_sensor_channel);
     7e6:	8b 83       	std	Y+3, r24	; 0x03
     7e8:	82 e0       	ldi	r24, 0x02	; 2
     7ea:	5e d3       	rcall	.+1724   	; 0xea8 <ADC_Conversion>
		C_sense = ADC_Conversion(center_wl_sensor_channel);
     7ec:	8a 83       	std	Y+2, r24	; 0x02
     7ee:	81 e0       	ldi	r24, 0x01	; 1
     7f0:	5b d3       	rcall	.+1718   	; 0xea8 <ADC_Conversion>
     7f2:	89 83       	std	Y+1, r24	; 0x01
		R_sense = ADC_Conversion(right_wl_sensor_channel);
     7f4:	49 81       	ldd	r20, Y+1	; 0x01
     7f6:	6a 81       	ldd	r22, Y+2	; 0x02
     7f8:	8b 81       	ldd	r24, Y+3	; 0x03
     7fa:	88 de       	rcall	.-752    	; 0x50c <path_follow>
		stop_flag = path_follow(L_sense, C_sense, R_sense);
     7fc:	8c 83       	std	Y+4, r24	; 0x04
     7fe:	8c 81       	ldd	r24, Y+4	; 0x04
     800:	88 37       	cpi	r24, 0x78	; 120
     802:	09 f0       	breq	.+2      	; 0x806 <main+0x52>
     804:	ee cf       	rjmp	.-36     	; 0x7e2 <main+0x2e>
     806:	00 00       	nop
		if(stop_flag == 'x')
     808:	80 e0       	ldi	r24, 0x00	; 0
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	0f 90       	pop	r0
		  break;
	}
     80e:	0f 90       	pop	r0
		L_sense = ADC_Conversion(left_wl_sensor_channel);
		C_sense = ADC_Conversion(center_wl_sensor_channel);
		R_sense = ADC_Conversion(right_wl_sensor_channel);
		stop_flag = path_follow(L_sense, C_sense, R_sense);
		if(stop_flag == 'x')
		  break;
     810:	0f 90       	pop	r0
     812:	0f 90       	pop	r0
     814:	df 91       	pop	r29
	}
}
     816:	cf 91       	pop	r28
     818:	08 95       	ret

0000081a <motors_pin_config>:
     81a:	cf 93       	push	r28
     81c:	df 93       	push	r29
     81e:	cd b7       	in	r28, 0x3d	; 61
     820:	de b7       	in	r29, 0x3e	; 62
     822:	81 e2       	ldi	r24, 0x21	; 33
}

void buzzer_off()
{
	buzzer_port_reg &=~(1<<buzzer_pin);
}
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	21 e2       	ldi	r18, 0x21	; 33
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	f9 01       	movw	r30, r18
     82c:	20 81       	ld	r18, Z
     82e:	2f 60       	ori	r18, 0x0F	; 15
     830:	fc 01       	movw	r30, r24
     832:	20 83       	st	Z, r18
     834:	82 e2       	ldi	r24, 0x22	; 34
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	22 e2       	ldi	r18, 0x22	; 34
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	f9 01       	movw	r30, r18
     83e:	20 81       	ld	r18, Z
     840:	20 7f       	andi	r18, 0xF0	; 240
     842:	fc 01       	movw	r30, r24
     844:	20 83       	st	Z, r18
     846:	00 00       	nop
     848:	df 91       	pop	r29
     84a:	cf 91       	pop	r28
     84c:	08 95       	ret

0000084e <pwm_pin_config>:
     84e:	cf 93       	push	r28
     850:	df 93       	push	r29
     852:	cd b7       	in	r28, 0x3d	; 61
     854:	de b7       	in	r29, 0x3e	; 62
     856:	8a e0       	ldi	r24, 0x0A	; 10
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	2a e0       	ldi	r18, 0x0A	; 10
     85c:	31 e0       	ldi	r19, 0x01	; 1
     85e:	f9 01       	movw	r30, r18
     860:	20 81       	ld	r18, Z
     862:	28 61       	ori	r18, 0x18	; 24
     864:	fc 01       	movw	r30, r24
     866:	20 83       	st	Z, r18
     868:	8b e0       	ldi	r24, 0x0B	; 11
     86a:	91 e0       	ldi	r25, 0x01	; 1
     86c:	2b e0       	ldi	r18, 0x0B	; 11
     86e:	31 e0       	ldi	r19, 0x01	; 1
     870:	f9 01       	movw	r30, r18
     872:	20 81       	ld	r18, Z
     874:	28 61       	ori	r18, 0x18	; 24
     876:	fc 01       	movw	r30, r24
     878:	20 83       	st	Z, r18
     87a:	00 00       	nop
     87c:	df 91       	pop	r29
     87e:	cf 91       	pop	r28
     880:	08 95       	ret

00000882 <position_encoder_pin_config>:
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	cd b7       	in	r28, 0x3d	; 61
     888:	de b7       	in	r29, 0x3e	; 62
     88a:	8d e2       	ldi	r24, 0x2D	; 45
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	2d e2       	ldi	r18, 0x2D	; 45
     890:	30 e0       	ldi	r19, 0x00	; 0
     892:	f9 01       	movw	r30, r18
     894:	20 81       	ld	r18, Z
     896:	2f 7c       	andi	r18, 0xCF	; 207
     898:	fc 01       	movw	r30, r24
     89a:	20 83       	st	Z, r18
     89c:	8e e2       	ldi	r24, 0x2E	; 46
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	2e e2       	ldi	r18, 0x2E	; 46
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	f9 01       	movw	r30, r18
     8a6:	20 81       	ld	r18, Z
     8a8:	20 63       	ori	r18, 0x30	; 48
     8aa:	fc 01       	movw	r30, r24
     8ac:	20 83       	st	Z, r18
     8ae:	00 00       	nop
     8b0:	df 91       	pop	r29
     8b2:	cf 91       	pop	r28
     8b4:	08 95       	ret

000008b6 <timer5_init>:
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	cd b7       	in	r28, 0x3d	; 61
     8bc:	de b7       	in	r29, 0x3e	; 62
     8be:	81 e2       	ldi	r24, 0x21	; 33
     8c0:	91 e0       	ldi	r25, 0x01	; 1
     8c2:	fc 01       	movw	r30, r24
     8c4:	10 82       	st	Z, r1
     8c6:	85 e2       	ldi	r24, 0x25	; 37
     8c8:	91 e0       	ldi	r25, 0x01	; 1
     8ca:	2f ef       	ldi	r18, 0xFF	; 255
     8cc:	fc 01       	movw	r30, r24
     8ce:	20 83       	st	Z, r18
     8d0:	84 e2       	ldi	r24, 0x24	; 36
     8d2:	91 e0       	ldi	r25, 0x01	; 1
     8d4:	21 e0       	ldi	r18, 0x01	; 1
     8d6:	fc 01       	movw	r30, r24
     8d8:	20 83       	st	Z, r18
     8da:	89 e2       	ldi	r24, 0x29	; 41
     8dc:	91 e0       	ldi	r25, 0x01	; 1
     8de:	fc 01       	movw	r30, r24
     8e0:	10 82       	st	Z, r1
     8e2:	88 e2       	ldi	r24, 0x28	; 40
     8e4:	91 e0       	ldi	r25, 0x01	; 1
     8e6:	2f ef       	ldi	r18, 0xFF	; 255
     8e8:	fc 01       	movw	r30, r24
     8ea:	20 83       	st	Z, r18
     8ec:	8b e2       	ldi	r24, 0x2B	; 43
     8ee:	91 e0       	ldi	r25, 0x01	; 1
     8f0:	fc 01       	movw	r30, r24
     8f2:	10 82       	st	Z, r1
     8f4:	8a e2       	ldi	r24, 0x2A	; 42
     8f6:	91 e0       	ldi	r25, 0x01	; 1
     8f8:	2f ef       	ldi	r18, 0xFF	; 255
     8fa:	fc 01       	movw	r30, r24
     8fc:	20 83       	st	Z, r18
     8fe:	80 e2       	ldi	r24, 0x20	; 32
     900:	91 e0       	ldi	r25, 0x01	; 1
     902:	20 e2       	ldi	r18, 0x20	; 32
     904:	31 e0       	ldi	r19, 0x01	; 1
     906:	f9 01       	movw	r30, r18
     908:	20 81       	ld	r18, Z
     90a:	20 6a       	ori	r18, 0xA0	; 160
     90c:	fc 01       	movw	r30, r24
     90e:	20 83       	st	Z, r18
     910:	80 e2       	ldi	r24, 0x20	; 32
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	20 e2       	ldi	r18, 0x20	; 32
     916:	31 e0       	ldi	r19, 0x01	; 1
     918:	f9 01       	movw	r30, r18
     91a:	20 81       	ld	r18, Z
     91c:	2f 7a       	andi	r18, 0xAF	; 175
     91e:	fc 01       	movw	r30, r24
     920:	20 83       	st	Z, r18
     922:	80 e2       	ldi	r24, 0x20	; 32
     924:	91 e0       	ldi	r25, 0x01	; 1
     926:	20 e2       	ldi	r18, 0x20	; 32
     928:	31 e0       	ldi	r19, 0x01	; 1
     92a:	f9 01       	movw	r30, r18
     92c:	20 81       	ld	r18, Z
     92e:	21 60       	ori	r18, 0x01	; 1
     930:	fc 01       	movw	r30, r24
     932:	20 83       	st	Z, r18
     934:	80 e2       	ldi	r24, 0x20	; 32
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	20 e2       	ldi	r18, 0x20	; 32
     93a:	31 e0       	ldi	r19, 0x01	; 1
     93c:	f9 01       	movw	r30, r18
     93e:	20 81       	ld	r18, Z
     940:	2d 7f       	andi	r18, 0xFD	; 253
     942:	fc 01       	movw	r30, r24
     944:	20 83       	st	Z, r18
     946:	81 e2       	ldi	r24, 0x21	; 33
     948:	91 e0       	ldi	r25, 0x01	; 1
     94a:	21 e2       	ldi	r18, 0x21	; 33
     94c:	31 e0       	ldi	r19, 0x01	; 1
     94e:	f9 01       	movw	r30, r18
     950:	20 81       	ld	r18, Z
     952:	28 60       	ori	r18, 0x08	; 8
     954:	fc 01       	movw	r30, r24
     956:	20 83       	st	Z, r18
     958:	81 e2       	ldi	r24, 0x21	; 33
     95a:	91 e0       	ldi	r25, 0x01	; 1
     95c:	21 e2       	ldi	r18, 0x21	; 33
     95e:	31 e0       	ldi	r19, 0x01	; 1
     960:	f9 01       	movw	r30, r18
     962:	20 81       	ld	r18, Z
     964:	2f 7e       	andi	r18, 0xEF	; 239
     966:	fc 01       	movw	r30, r24
     968:	20 83       	st	Z, r18
     96a:	81 e2       	ldi	r24, 0x21	; 33
     96c:	91 e0       	ldi	r25, 0x01	; 1
     96e:	21 e2       	ldi	r18, 0x21	; 33
     970:	31 e0       	ldi	r19, 0x01	; 1
     972:	f9 01       	movw	r30, r18
     974:	20 81       	ld	r18, Z
     976:	23 60       	ori	r18, 0x03	; 3
     978:	fc 01       	movw	r30, r24
     97a:	20 83       	st	Z, r18
     97c:	81 e2       	ldi	r24, 0x21	; 33
     97e:	91 e0       	ldi	r25, 0x01	; 1
     980:	21 e2       	ldi	r18, 0x21	; 33
     982:	31 e0       	ldi	r19, 0x01	; 1
     984:	f9 01       	movw	r30, r18
     986:	20 81       	ld	r18, Z
     988:	2b 7f       	andi	r18, 0xFB	; 251
     98a:	fc 01       	movw	r30, r24
     98c:	20 83       	st	Z, r18
     98e:	00 00       	nop
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	08 95       	ret

00000996 <velocity>:
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	1f 92       	push	r1
     99c:	1f 92       	push	r1
     99e:	cd b7       	in	r28, 0x3d	; 61
     9a0:	de b7       	in	r29, 0x3e	; 62
     9a2:	89 83       	std	Y+1, r24	; 0x01
     9a4:	6a 83       	std	Y+2, r22	; 0x02
     9a6:	88 e2       	ldi	r24, 0x28	; 40
     9a8:	91 e0       	ldi	r25, 0x01	; 1
     9aa:	29 81       	ldd	r18, Y+1	; 0x01
     9ac:	fc 01       	movw	r30, r24
     9ae:	20 83       	st	Z, r18
     9b0:	8a e2       	ldi	r24, 0x2A	; 42
     9b2:	91 e0       	ldi	r25, 0x01	; 1
     9b4:	2a 81       	ldd	r18, Y+2	; 0x02
     9b6:	fc 01       	movw	r30, r24
     9b8:	20 83       	st	Z, r18
     9ba:	00 00       	nop
     9bc:	0f 90       	pop	r0
     9be:	0f 90       	pop	r0
     9c0:	df 91       	pop	r29
     9c2:	cf 91       	pop	r28
     9c4:	08 95       	ret

000009c6 <position_encoder_interrupt_config>:
     9c6:	cf 93       	push	r28
     9c8:	df 93       	push	r29
     9ca:	cd b7       	in	r28, 0x3d	; 61
     9cc:	de b7       	in	r29, 0x3e	; 62
     9ce:	f8 94       	cli
     9d0:	8d e3       	ldi	r24, 0x3D	; 61
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	2d e3       	ldi	r18, 0x3D	; 61
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	f9 01       	movw	r30, r18
     9da:	20 81       	ld	r18, Z
     9dc:	20 63       	ori	r18, 0x30	; 48
     9de:	fc 01       	movw	r30, r24
     9e0:	20 83       	st	Z, r18
     9e2:	8a e6       	ldi	r24, 0x6A	; 106
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	2a e6       	ldi	r18, 0x6A	; 106
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	f9 01       	movw	r30, r18
     9ec:	20 81       	ld	r18, Z
     9ee:	2a 60       	ori	r18, 0x0A	; 10
     9f0:	fc 01       	movw	r30, r24
     9f2:	20 83       	st	Z, r18
     9f4:	8a e6       	ldi	r24, 0x6A	; 106
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	2a e6       	ldi	r18, 0x6A	; 106
     9fa:	30 e0       	ldi	r19, 0x00	; 0
     9fc:	f9 01       	movw	r30, r18
     9fe:	20 81       	ld	r18, Z
     a00:	2a 7f       	andi	r18, 0xFA	; 250
     a02:	fc 01       	movw	r30, r24
     a04:	20 83       	st	Z, r18
     a06:	78 94       	sei
     a08:	00 00       	nop
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	08 95       	ret

00000a10 <forward>:
     a10:	cf 93       	push	r28
     a12:	df 93       	push	r29
     a14:	cd b7       	in	r28, 0x3d	; 61
     a16:	de b7       	in	r29, 0x3e	; 62
     a18:	82 e2       	ldi	r24, 0x22	; 34
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	22 e2       	ldi	r18, 0x22	; 34
     a1e:	30 e0       	ldi	r19, 0x00	; 0
     a20:	f9 01       	movw	r30, r18
     a22:	20 81       	ld	r18, Z
     a24:	26 7f       	andi	r18, 0xF6	; 246
     a26:	fc 01       	movw	r30, r24
     a28:	20 83       	st	Z, r18
     a2a:	82 e2       	ldi	r24, 0x22	; 34
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	22 e2       	ldi	r18, 0x22	; 34
     a30:	30 e0       	ldi	r19, 0x00	; 0
     a32:	f9 01       	movw	r30, r18
     a34:	20 81       	ld	r18, Z
     a36:	26 60       	ori	r18, 0x06	; 6
     a38:	fc 01       	movw	r30, r24
     a3a:	20 83       	st	Z, r18
     a3c:	00 00       	nop
     a3e:	df 91       	pop	r29
     a40:	cf 91       	pop	r28
     a42:	08 95       	ret

00000a44 <left>:
     a44:	cf 93       	push	r28
     a46:	df 93       	push	r29
     a48:	cd b7       	in	r28, 0x3d	; 61
     a4a:	de b7       	in	r29, 0x3e	; 62
     a4c:	82 e2       	ldi	r24, 0x22	; 34
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	22 e2       	ldi	r18, 0x22	; 34
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	f9 01       	movw	r30, r18
     a56:	20 81       	ld	r18, Z
     a58:	25 7f       	andi	r18, 0xF5	; 245
     a5a:	fc 01       	movw	r30, r24
     a5c:	20 83       	st	Z, r18
     a5e:	82 e2       	ldi	r24, 0x22	; 34
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	22 e2       	ldi	r18, 0x22	; 34
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	f9 01       	movw	r30, r18
     a68:	20 81       	ld	r18, Z
     a6a:	25 60       	ori	r18, 0x05	; 5
     a6c:	fc 01       	movw	r30, r24
     a6e:	20 83       	st	Z, r18
     a70:	00 00       	nop
     a72:	df 91       	pop	r29
     a74:	cf 91       	pop	r28
     a76:	08 95       	ret

00000a78 <right>:
     a78:	cf 93       	push	r28
     a7a:	df 93       	push	r29
     a7c:	cd b7       	in	r28, 0x3d	; 61
     a7e:	de b7       	in	r29, 0x3e	; 62
     a80:	82 e2       	ldi	r24, 0x22	; 34
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	22 e2       	ldi	r18, 0x22	; 34
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	f9 01       	movw	r30, r18
     a8a:	20 81       	ld	r18, Z
     a8c:	2a 7f       	andi	r18, 0xFA	; 250
     a8e:	fc 01       	movw	r30, r24
     a90:	20 83       	st	Z, r18
     a92:	82 e2       	ldi	r24, 0x22	; 34
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	22 e2       	ldi	r18, 0x22	; 34
     a98:	30 e0       	ldi	r19, 0x00	; 0
     a9a:	f9 01       	movw	r30, r18
     a9c:	20 81       	ld	r18, Z
     a9e:	2a 60       	ori	r18, 0x0A	; 10
     aa0:	fc 01       	movw	r30, r24
     aa2:	20 83       	st	Z, r18
     aa4:	00 00       	nop
     aa6:	df 91       	pop	r29
     aa8:	cf 91       	pop	r28
     aaa:	08 95       	ret

00000aac <stop>:
     aac:	cf 93       	push	r28
     aae:	df 93       	push	r29
     ab0:	cd b7       	in	r28, 0x3d	; 61
     ab2:	de b7       	in	r29, 0x3e	; 62
     ab4:	82 e2       	ldi	r24, 0x22	; 34
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	22 e2       	ldi	r18, 0x22	; 34
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	f9 01       	movw	r30, r18
     abe:	20 81       	ld	r18, Z
     ac0:	20 7f       	andi	r18, 0xF0	; 240
     ac2:	fc 01       	movw	r30, r24
     ac4:	20 83       	st	Z, r18
     ac6:	00 00       	nop
     ac8:	df 91       	pop	r29
     aca:	cf 91       	pop	r28
     acc:	08 95       	ret

00000ace <angle_rotate>:
     ace:	cf 93       	push	r28
     ad0:	df 93       	push	r29
     ad2:	cd b7       	in	r28, 0x3d	; 61
     ad4:	de b7       	in	r29, 0x3e	; 62
     ad6:	2a 97       	sbiw	r28, 0x0a	; 10
     ad8:	0f b6       	in	r0, 0x3f	; 63
     ada:	f8 94       	cli
     adc:	de bf       	out	0x3e, r29	; 62
     ade:	0f be       	out	0x3f, r0	; 63
     ae0:	cd bf       	out	0x3d, r28	; 61
     ae2:	9a 87       	std	Y+10, r25	; 0x0a
     ae4:	89 87       	std	Y+9, r24	; 0x09
     ae6:	19 82       	std	Y+1, r1	; 0x01
     ae8:	1a 82       	std	Y+2, r1	; 0x02
     aea:	1b 82       	std	Y+3, r1	; 0x03
     aec:	1c 82       	std	Y+4, r1	; 0x04
     aee:	1d 82       	std	Y+5, r1	; 0x05
     af0:	1e 82       	std	Y+6, r1	; 0x06
     af2:	1f 82       	std	Y+7, r1	; 0x07
     af4:	18 86       	std	Y+8, r1	; 0x08
     af6:	89 85       	ldd	r24, Y+9	; 0x09
     af8:	9a 85       	ldd	r25, Y+10	; 0x0a
     afa:	cc 01       	movw	r24, r24
     afc:	a0 e0       	ldi	r26, 0x00	; 0
     afe:	b0 e0       	ldi	r27, 0x00	; 0
     b00:	bc 01       	movw	r22, r24
     b02:	cd 01       	movw	r24, r26
     b04:	0e 94 c9 11 	call	0x2392	; 0x2392 <__floatunsisf>
     b08:	dc 01       	movw	r26, r24
     b0a:	cb 01       	movw	r24, r22
     b0c:	28 e4       	ldi	r18, 0x48	; 72
     b0e:	31 ee       	ldi	r19, 0xE1	; 225
     b10:	42 e8       	ldi	r20, 0x82	; 130
     b12:	50 e4       	ldi	r21, 0x40	; 64
     b14:	bc 01       	movw	r22, r24
     b16:	cd 01       	movw	r24, r26
     b18:	0e 94 35 11 	call	0x226a	; 0x226a <__divsf3>
     b1c:	dc 01       	movw	r26, r24
     b1e:	cb 01       	movw	r24, r22
     b20:	89 83       	std	Y+1, r24	; 0x01
     b22:	9a 83       	std	Y+2, r25	; 0x02
     b24:	ab 83       	std	Y+3, r26	; 0x03
     b26:	bc 83       	std	Y+4, r27	; 0x04
     b28:	69 81       	ldd	r22, Y+1	; 0x01
     b2a:	7a 81       	ldd	r23, Y+2	; 0x02
     b2c:	8b 81       	ldd	r24, Y+3	; 0x03
     b2e:	9c 81       	ldd	r25, Y+4	; 0x04
     b30:	0e 94 9d 11 	call	0x233a	; 0x233a <__fixunssfsi>
     b34:	dc 01       	movw	r26, r24
     b36:	cb 01       	movw	r24, r22
     b38:	cc 01       	movw	r24, r24
     b3a:	a0 e0       	ldi	r26, 0x00	; 0
     b3c:	b0 e0       	ldi	r27, 0x00	; 0
     b3e:	8d 83       	std	Y+5, r24	; 0x05
     b40:	9e 83       	std	Y+6, r25	; 0x06
     b42:	af 83       	std	Y+7, r26	; 0x07
     b44:	b8 87       	std	Y+8, r27	; 0x08
     b46:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <ShaftCountRight>
     b4a:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <ShaftCountRight+0x1>
     b4e:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <ShaftCountRight+0x2>
     b52:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <ShaftCountRight+0x3>
     b56:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <__data_end>
     b5a:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <__data_end+0x1>
     b5e:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <__data_end+0x2>
     b62:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <__data_end+0x3>
     b66:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <ShaftCountRight>
     b6a:	30 91 27 02 	lds	r19, 0x0227	; 0x800227 <ShaftCountRight+0x1>
     b6e:	40 91 28 02 	lds	r20, 0x0228	; 0x800228 <ShaftCountRight+0x2>
     b72:	50 91 29 02 	lds	r21, 0x0229	; 0x800229 <ShaftCountRight+0x3>
     b76:	8d 81       	ldd	r24, Y+5	; 0x05
     b78:	9e 81       	ldd	r25, Y+6	; 0x06
     b7a:	af 81       	ldd	r26, Y+7	; 0x07
     b7c:	b8 85       	ldd	r27, Y+8	; 0x08
     b7e:	28 17       	cp	r18, r24
     b80:	39 07       	cpc	r19, r25
     b82:	4a 07       	cpc	r20, r26
     b84:	5b 07       	cpc	r21, r27
     b86:	90 f4       	brcc	.+36     	; 0xbac <angle_rotate+0xde>
     b88:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <__data_end>
     b8c:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <__data_end+0x1>
     b90:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <__data_end+0x2>
     b94:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <__data_end+0x3>
     b98:	8d 81       	ldd	r24, Y+5	; 0x05
     b9a:	9e 81       	ldd	r25, Y+6	; 0x06
     b9c:	af 81       	ldd	r26, Y+7	; 0x07
     b9e:	b8 85       	ldd	r27, Y+8	; 0x08
     ba0:	28 17       	cp	r18, r24
     ba2:	39 07       	cpc	r19, r25
     ba4:	4a 07       	cpc	r20, r26
     ba6:	5b 07       	cpc	r21, r27
     ba8:	08 f4       	brcc	.+2      	; 0xbac <angle_rotate+0xde>
     baa:	dd cf       	rjmp	.-70     	; 0xb66 <angle_rotate+0x98>
     bac:	7f df       	rcall	.-258    	; 0xaac <stop>
     bae:	00 00       	nop
     bb0:	2a 96       	adiw	r28, 0x0a	; 10
     bb2:	0f b6       	in	r0, 0x3f	; 63
     bb4:	f8 94       	cli
     bb6:	de bf       	out	0x3e, r29	; 62
     bb8:	0f be       	out	0x3f, r0	; 63
     bba:	cd bf       	out	0x3d, r28	; 61
     bbc:	df 91       	pop	r29
     bbe:	cf 91       	pop	r28
     bc0:	08 95       	ret

00000bc2 <linear_distance_mm>:
     bc2:	cf 93       	push	r28
     bc4:	df 93       	push	r29
     bc6:	cd b7       	in	r28, 0x3d	; 61
     bc8:	de b7       	in	r29, 0x3e	; 62
     bca:	2a 97       	sbiw	r28, 0x0a	; 10
     bcc:	0f b6       	in	r0, 0x3f	; 63
     bce:	f8 94       	cli
     bd0:	de bf       	out	0x3e, r29	; 62
     bd2:	0f be       	out	0x3f, r0	; 63
     bd4:	cd bf       	out	0x3d, r28	; 61
     bd6:	9a 87       	std	Y+10, r25	; 0x0a
     bd8:	89 87       	std	Y+9, r24	; 0x09
     bda:	19 82       	std	Y+1, r1	; 0x01
     bdc:	1a 82       	std	Y+2, r1	; 0x02
     bde:	1b 82       	std	Y+3, r1	; 0x03
     be0:	1c 82       	std	Y+4, r1	; 0x04
     be2:	1d 82       	std	Y+5, r1	; 0x05
     be4:	1e 82       	std	Y+6, r1	; 0x06
     be6:	1f 82       	std	Y+7, r1	; 0x07
     be8:	18 86       	std	Y+8, r1	; 0x08
     bea:	89 85       	ldd	r24, Y+9	; 0x09
     bec:	9a 85       	ldd	r25, Y+10	; 0x0a
     bee:	cc 01       	movw	r24, r24
     bf0:	a0 e0       	ldi	r26, 0x00	; 0
     bf2:	b0 e0       	ldi	r27, 0x00	; 0
     bf4:	bc 01       	movw	r22, r24
     bf6:	cd 01       	movw	r24, r26
     bf8:	0e 94 c9 11 	call	0x2392	; 0x2392 <__floatunsisf>
     bfc:	dc 01       	movw	r26, r24
     bfe:	cb 01       	movw	r24, r22
     c00:	25 ee       	ldi	r18, 0xE5	; 229
     c02:	30 ed       	ldi	r19, 0xD0	; 208
     c04:	4a ea       	ldi	r20, 0xAA	; 170
     c06:	50 e4       	ldi	r21, 0x40	; 64
     c08:	bc 01       	movw	r22, r24
     c0a:	cd 01       	movw	r24, r26
     c0c:	0e 94 35 11 	call	0x226a	; 0x226a <__divsf3>
     c10:	dc 01       	movw	r26, r24
     c12:	cb 01       	movw	r24, r22
     c14:	89 83       	std	Y+1, r24	; 0x01
     c16:	9a 83       	std	Y+2, r25	; 0x02
     c18:	ab 83       	std	Y+3, r26	; 0x03
     c1a:	bc 83       	std	Y+4, r27	; 0x04
     c1c:	69 81       	ldd	r22, Y+1	; 0x01
     c1e:	7a 81       	ldd	r23, Y+2	; 0x02
     c20:	8b 81       	ldd	r24, Y+3	; 0x03
     c22:	9c 81       	ldd	r25, Y+4	; 0x04
     c24:	0e 94 9d 11 	call	0x233a	; 0x233a <__fixunssfsi>
     c28:	dc 01       	movw	r26, r24
     c2a:	cb 01       	movw	r24, r22
     c2c:	8d 83       	std	Y+5, r24	; 0x05
     c2e:	9e 83       	std	Y+6, r25	; 0x06
     c30:	af 83       	std	Y+7, r26	; 0x07
     c32:	b8 87       	std	Y+8, r27	; 0x08
     c34:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <ShaftCountRight>
     c38:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <ShaftCountRight+0x1>
     c3c:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <ShaftCountRight+0x2>
     c40:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <ShaftCountRight+0x3>
     c44:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <__data_end>
     c48:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <__data_end+0x1>
     c4c:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <__data_end+0x2>
     c50:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <__data_end+0x3>
     c54:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <ShaftCountRight>
     c58:	30 91 27 02 	lds	r19, 0x0227	; 0x800227 <ShaftCountRight+0x1>
     c5c:	40 91 28 02 	lds	r20, 0x0228	; 0x800228 <ShaftCountRight+0x2>
     c60:	50 91 29 02 	lds	r21, 0x0229	; 0x800229 <ShaftCountRight+0x3>
     c64:	8d 81       	ldd	r24, Y+5	; 0x05
     c66:	9e 81       	ldd	r25, Y+6	; 0x06
     c68:	af 81       	ldd	r26, Y+7	; 0x07
     c6a:	b8 85       	ldd	r27, Y+8	; 0x08
     c6c:	28 17       	cp	r18, r24
     c6e:	39 07       	cpc	r19, r25
     c70:	4a 07       	cpc	r20, r26
     c72:	5b 07       	cpc	r21, r27
     c74:	90 f4       	brcc	.+36     	; 0xc9a <linear_distance_mm+0xd8>
     c76:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <__data_end>
     c7a:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <__data_end+0x1>
     c7e:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <__data_end+0x2>
     c82:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <__data_end+0x3>
     c86:	8d 81       	ldd	r24, Y+5	; 0x05
     c88:	9e 81       	ldd	r25, Y+6	; 0x06
     c8a:	af 81       	ldd	r26, Y+7	; 0x07
     c8c:	b8 85       	ldd	r27, Y+8	; 0x08
     c8e:	28 17       	cp	r18, r24
     c90:	39 07       	cpc	r19, r25
     c92:	4a 07       	cpc	r20, r26
     c94:	5b 07       	cpc	r21, r27
     c96:	08 f4       	brcc	.+2      	; 0xc9a <linear_distance_mm+0xd8>
     c98:	dd cf       	rjmp	.-70     	; 0xc54 <linear_distance_mm+0x92>
     c9a:	08 df       	rcall	.-496    	; 0xaac <stop>
     c9c:	00 00       	nop
     c9e:	2a 96       	adiw	r28, 0x0a	; 10
     ca0:	0f b6       	in	r0, 0x3f	; 63
     ca2:	f8 94       	cli
     ca4:	de bf       	out	0x3e, r29	; 62
     ca6:	0f be       	out	0x3f, r0	; 63
     ca8:	cd bf       	out	0x3d, r28	; 61
     caa:	df 91       	pop	r29
     cac:	cf 91       	pop	r28
     cae:	08 95       	ret

00000cb0 <__vector_6>:
     cb0:	1f 92       	push	r1
     cb2:	0f 92       	push	r0
     cb4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     cb8:	0f 92       	push	r0
     cba:	11 24       	eor	r1, r1
     cbc:	8f 93       	push	r24
     cbe:	9f 93       	push	r25
     cc0:	af 93       	push	r26
     cc2:	bf 93       	push	r27
     cc4:	cf 93       	push	r28
     cc6:	df 93       	push	r29
     cc8:	cd b7       	in	r28, 0x3d	; 61
     cca:	de b7       	in	r29, 0x3e	; 62
     ccc:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <ShaftCountRight>
     cd0:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <ShaftCountRight+0x1>
     cd4:	a0 91 28 02 	lds	r26, 0x0228	; 0x800228 <ShaftCountRight+0x2>
     cd8:	b0 91 29 02 	lds	r27, 0x0229	; 0x800229 <ShaftCountRight+0x3>
     cdc:	01 96       	adiw	r24, 0x01	; 1
     cde:	a1 1d       	adc	r26, r1
     ce0:	b1 1d       	adc	r27, r1
     ce2:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <ShaftCountRight>
     ce6:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <ShaftCountRight+0x1>
     cea:	a0 93 28 02 	sts	0x0228, r26	; 0x800228 <ShaftCountRight+0x2>
     cee:	b0 93 29 02 	sts	0x0229, r27	; 0x800229 <ShaftCountRight+0x3>
     cf2:	00 00       	nop
     cf4:	df 91       	pop	r29
     cf6:	cf 91       	pop	r28
     cf8:	bf 91       	pop	r27
     cfa:	af 91       	pop	r26
     cfc:	9f 91       	pop	r25
     cfe:	8f 91       	pop	r24
     d00:	0f 90       	pop	r0
     d02:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     d06:	0f 90       	pop	r0
     d08:	1f 90       	pop	r1
     d0a:	18 95       	reti

00000d0c <__vector_5>:
     d0c:	1f 92       	push	r1
     d0e:	0f 92       	push	r0
     d10:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     d14:	0f 92       	push	r0
     d16:	11 24       	eor	r1, r1
     d18:	8f 93       	push	r24
     d1a:	9f 93       	push	r25
     d1c:	af 93       	push	r26
     d1e:	bf 93       	push	r27
     d20:	cf 93       	push	r28
     d22:	df 93       	push	r29
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
     d28:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <__data_end>
     d2c:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <__data_end+0x1>
     d30:	a0 91 24 02 	lds	r26, 0x0224	; 0x800224 <__data_end+0x2>
     d34:	b0 91 25 02 	lds	r27, 0x0225	; 0x800225 <__data_end+0x3>
     d38:	01 96       	adiw	r24, 0x01	; 1
     d3a:	a1 1d       	adc	r26, r1
     d3c:	b1 1d       	adc	r27, r1
     d3e:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <__data_end>
     d42:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <__data_end+0x1>
     d46:	a0 93 24 02 	sts	0x0224, r26	; 0x800224 <__data_end+0x2>
     d4a:	b0 93 25 02 	sts	0x0225, r27	; 0x800225 <__data_end+0x3>
     d4e:	00 00       	nop
     d50:	df 91       	pop	r29
     d52:	cf 91       	pop	r28
     d54:	bf 91       	pop	r27
     d56:	af 91       	pop	r26
     d58:	9f 91       	pop	r25
     d5a:	8f 91       	pop	r24
     d5c:	0f 90       	pop	r0
     d5e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     d62:	0f 90       	pop	r0
     d64:	1f 90       	pop	r1
     d66:	18 95       	reti

00000d68 <forward_mm>:
     d68:	cf 93       	push	r28
     d6a:	df 93       	push	r29
     d6c:	1f 92       	push	r1
     d6e:	1f 92       	push	r1
     d70:	cd b7       	in	r28, 0x3d	; 61
     d72:	de b7       	in	r29, 0x3e	; 62
     d74:	9a 83       	std	Y+2, r25	; 0x02
     d76:	89 83       	std	Y+1, r24	; 0x01
     d78:	64 ed       	ldi	r22, 0xD4	; 212
     d7a:	88 ec       	ldi	r24, 0xC8	; 200
     d7c:	0c de       	rcall	.-1000   	; 0x996 <velocity>
     d7e:	48 de       	rcall	.-880    	; 0xa10 <forward>
     d80:	89 81       	ldd	r24, Y+1	; 0x01
     d82:	9a 81       	ldd	r25, Y+2	; 0x02
     d84:	1e df       	rcall	.-452    	; 0xbc2 <linear_distance_mm>
     d86:	00 00       	nop
     d88:	0f 90       	pop	r0
     d8a:	0f 90       	pop	r0
     d8c:	df 91       	pop	r29
     d8e:	cf 91       	pop	r28
     d90:	08 95       	ret

00000d92 <left_degrees>:
     d92:	cf 93       	push	r28
     d94:	df 93       	push	r29
     d96:	1f 92       	push	r1
     d98:	1f 92       	push	r1
     d9a:	cd b7       	in	r28, 0x3d	; 61
     d9c:	de b7       	in	r29, 0x3e	; 62
     d9e:	9a 83       	std	Y+2, r25	; 0x02
     da0:	89 83       	std	Y+1, r24	; 0x01
     da2:	64 ed       	ldi	r22, 0xD4	; 212
     da4:	88 ec       	ldi	r24, 0xC8	; 200
     da6:	f7 dd       	rcall	.-1042   	; 0x996 <velocity>
     da8:	4d de       	rcall	.-870    	; 0xa44 <left>
     daa:	89 81       	ldd	r24, Y+1	; 0x01
     dac:	9a 81       	ldd	r25, Y+2	; 0x02
     dae:	8f de       	rcall	.-738    	; 0xace <angle_rotate>
     db0:	00 00       	nop
     db2:	0f 90       	pop	r0
     db4:	0f 90       	pop	r0
     db6:	df 91       	pop	r29
     db8:	cf 91       	pop	r28
     dba:	08 95       	ret

00000dbc <right_degrees>:
     dbc:	cf 93       	push	r28
     dbe:	df 93       	push	r29
     dc0:	1f 92       	push	r1
     dc2:	1f 92       	push	r1
     dc4:	cd b7       	in	r28, 0x3d	; 61
     dc6:	de b7       	in	r29, 0x3e	; 62
     dc8:	9a 83       	std	Y+2, r25	; 0x02
     dca:	89 83       	std	Y+1, r24	; 0x01
     dcc:	64 ed       	ldi	r22, 0xD4	; 212
     dce:	88 ec       	ldi	r24, 0xC8	; 200
     dd0:	e2 dd       	rcall	.-1084   	; 0x996 <velocity>
     dd2:	52 de       	rcall	.-860    	; 0xa78 <right>
     dd4:	89 81       	ldd	r24, Y+1	; 0x01
     dd6:	9a 81       	ldd	r25, Y+2	; 0x02
     dd8:	7a de       	rcall	.-780    	; 0xace <angle_rotate>
     dda:	00 00       	nop
     ddc:	0f 90       	pop	r0
     dde:	0f 90       	pop	r0
     de0:	df 91       	pop	r29
     de2:	cf 91       	pop	r28
     de4:	08 95       	ret

00000de6 <buzzer_init>:
     de6:	cf 93       	push	r28
     de8:	df 93       	push	r29
     dea:	cd b7       	in	r28, 0x3d	; 61
     dec:	de b7       	in	r29, 0x3e	; 62
     dee:	87 e2       	ldi	r24, 0x27	; 39
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	27 e2       	ldi	r18, 0x27	; 39
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	f9 01       	movw	r30, r18
     df8:	20 81       	ld	r18, Z
     dfa:	28 60       	ori	r18, 0x08	; 8
     dfc:	fc 01       	movw	r30, r24
     dfe:	20 83       	st	Z, r18
     e00:	88 e2       	ldi	r24, 0x28	; 40
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	28 e2       	ldi	r18, 0x28	; 40
     e06:	30 e0       	ldi	r19, 0x00	; 0
     e08:	f9 01       	movw	r30, r18
     e0a:	20 81       	ld	r18, Z
     e0c:	27 7f       	andi	r18, 0xF7	; 247
     e0e:	fc 01       	movw	r30, r24
     e10:	20 83       	st	Z, r18
     e12:	00 00       	nop
     e14:	df 91       	pop	r29
     e16:	cf 91       	pop	r28
     e18:	08 95       	ret

00000e1a <adc_init>:


void adc_init(){
     e1a:	cf 93       	push	r28
     e1c:	df 93       	push	r29
     e1e:	cd b7       	in	r28, 0x3d	; 61
     e20:	de b7       	in	r29, 0x3e	; 62
	
	// enable ADC and pre-scalar = 64 (ADEN = 1, ADPS2 = 1, ADPS1 = 1, ADPS0 = 0)
	// and clear ADC start conversion bit, auto trigger enable bit, interrupt flag bit and interrupt enable bit
	ADCSRA_reg	|= ( (1 << ADEN_bit) | (1 << ADPS2_bit) | (1 << ADPS1_bit) );
     e22:	8a e7       	ldi	r24, 0x7A	; 122
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	2a e7       	ldi	r18, 0x7A	; 122
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	f9 01       	movw	r30, r18
     e2c:	20 81       	ld	r18, Z
     e2e:	26 68       	ori	r18, 0x86	; 134
     e30:	fc 01       	movw	r30, r24
     e32:	20 83       	st	Z, r18
	ADCSRA_reg	&= ~( (1 << ADSC_bit) | (1 << ADATE_bit) | (1 << ADIF_bit) | (1 << ADIE_bit) | (1 << ADPS0_bit) );
     e34:	8a e7       	ldi	r24, 0x7A	; 122
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	2a e7       	ldi	r18, 0x7A	; 122
     e3a:	30 e0       	ldi	r19, 0x00	; 0
     e3c:	f9 01       	movw	r30, r18
     e3e:	20 81       	ld	r18, Z
     e40:	26 78       	andi	r18, 0x86	; 134
     e42:	fc 01       	movw	r30, r24
     e44:	20 83       	st	Z, r18
	
	// In ADCSRB, disable Analog Comparator Multiplexer, MUX5 bit and ADC Auto Trigger Source bits
	ADCSRB_reg	&= ~( (1 << ACME_bit) | (1 << MUX5_bit) | (1 << ADTS2_bit) | (1 << ADTS1_bit) | (1 << ADTS0_bit) );
     e46:	8b e7       	ldi	r24, 0x7B	; 123
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	2b e7       	ldi	r18, 0x7B	; 123
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	f9 01       	movw	r30, r18
     e50:	20 81       	ld	r18, Z
     e52:	20 7b       	andi	r18, 0xB0	; 176
     e54:	fc 01       	movw	r30, r24
     e56:	20 83       	st	Z, r18
	
	// In ADMUX, set the Reference Selection bits to use the AVCC as reference, and disable the channel selection bits MUX[4:0]
	ADMUX_reg	&= ~( (1 << REFS1_bit) | (1 << MUX4_bit) | (1 << MUX3_bit) | (1 << MUX2_bit) | (1 << MUX1_bit) | (1 << MUX0_bit) );
     e58:	8c e7       	ldi	r24, 0x7C	; 124
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	2c e7       	ldi	r18, 0x7C	; 124
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	f9 01       	movw	r30, r18
     e62:	20 81       	ld	r18, Z
     e64:	20 76       	andi	r18, 0x60	; 96
     e66:	fc 01       	movw	r30, r24
     e68:	20 83       	st	Z, r18
	ADMUX_reg	|= (1 << REFS0_bit);
     e6a:	8c e7       	ldi	r24, 0x7C	; 124
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	2c e7       	ldi	r18, 0x7C	; 124
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	f9 01       	movw	r30, r18
     e74:	20 81       	ld	r18, Z
     e76:	20 64       	ori	r18, 0x40	; 64
     e78:	fc 01       	movw	r30, r24
     e7a:	20 83       	st	Z, r18
	
	// In ADMUX, enable the ADLAR bit for 8-bit ADC result
	ADMUX_reg	|= (1 << ADLAR_bit);
     e7c:	8c e7       	ldi	r24, 0x7C	; 124
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	2c e7       	ldi	r18, 0x7C	; 124
     e82:	30 e0       	ldi	r19, 0x00	; 0
     e84:	f9 01       	movw	r30, r18
     e86:	20 81       	ld	r18, Z
     e88:	20 62       	ori	r18, 0x20	; 32
     e8a:	fc 01       	movw	r30, r24
     e8c:	20 83       	st	Z, r18
	
	// In ACSR, disable the Analog Comparator by writing 1 to ACD_bit
	ACSR_reg	|= ( 1 << ACD_bit );
     e8e:	80 e5       	ldi	r24, 0x50	; 80
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	20 e5       	ldi	r18, 0x50	; 80
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	f9 01       	movw	r30, r18
     e98:	20 81       	ld	r18, Z
     e9a:	20 68       	ori	r18, 0x80	; 128
     e9c:	fc 01       	movw	r30, r24
     e9e:	20 83       	st	Z, r18
}
     ea0:	00 00       	nop
     ea2:	df 91       	pop	r29
     ea4:	cf 91       	pop	r28
     ea6:	08 95       	ret

00000ea8 <ADC_Conversion>:




unsigned char ADC_Conversion(unsigned char channel_num)
{
     ea8:	cf 93       	push	r28
     eaa:	df 93       	push	r29
     eac:	1f 92       	push	r1
     eae:	1f 92       	push	r1
     eb0:	cd b7       	in	r28, 0x3d	; 61
     eb2:	de b7       	in	r29, 0x3e	; 62
     eb4:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char adc_8bit_data;
	
	// MUX[5:0] bits to select the ADC channel number
	if ( channel_num > 7 )
     eb6:	8a 81       	ldd	r24, Y+2	; 0x02
     eb8:	88 30       	cpi	r24, 0x08	; 8
     eba:	48 f0       	brcs	.+18     	; 0xece <ADC_Conversion+0x26>
	{
		ADCSRB_reg |= ( 1 << MUX5_bit );
     ebc:	8b e7       	ldi	r24, 0x7B	; 123
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	2b e7       	ldi	r18, 0x7B	; 123
     ec2:	30 e0       	ldi	r19, 0x00	; 0
     ec4:	f9 01       	movw	r30, r18
     ec6:	20 81       	ld	r18, Z
     ec8:	28 60       	ori	r18, 0x08	; 8
     eca:	fc 01       	movw	r30, r24
     ecc:	20 83       	st	Z, r18
	}
	channel_num	= channel_num & 0x07;
     ece:	8a 81       	ldd	r24, Y+2	; 0x02
     ed0:	87 70       	andi	r24, 0x07	; 7
     ed2:	8a 83       	std	Y+2, r24	; 0x02
	ADMUX_reg	= ( ADMUX_reg | channel_num );
     ed4:	8c e7       	ldi	r24, 0x7C	; 124
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	2c e7       	ldi	r18, 0x7C	; 124
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	f9 01       	movw	r30, r18
     ede:	30 81       	ld	r19, Z
     ee0:	2a 81       	ldd	r18, Y+2	; 0x02
     ee2:	23 2b       	or	r18, r19
     ee4:	fc 01       	movw	r30, r24
     ee6:	20 83       	st	Z, r18
	
	// set the ADSC bit in ADCSRA register
	ADCSRA_reg		|= ( 1 << ADSC_bit );
     ee8:	8a e7       	ldi	r24, 0x7A	; 122
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	2a e7       	ldi	r18, 0x7A	; 122
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	f9 01       	movw	r30, r18
     ef2:	20 81       	ld	r18, Z
     ef4:	20 64       	ori	r18, 0x40	; 64
     ef6:	fc 01       	movw	r30, r24
     ef8:	20 83       	st	Z, r18
	
	//Wait for ADC conversion to complete
	while( ( ADCSRA_reg & ( 1 << ADIF_bit ) ) == 0x00 );
     efa:	00 00       	nop
     efc:	8a e7       	ldi	r24, 0x7A	; 122
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	fc 01       	movw	r30, r24
     f02:	80 81       	ld	r24, Z
     f04:	88 2f       	mov	r24, r24
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	80 71       	andi	r24, 0x10	; 16
     f0a:	99 27       	eor	r25, r25
     f0c:	89 2b       	or	r24, r25
     f0e:	b1 f3       	breq	.-20     	; 0xefc <ADC_Conversion+0x54>
	
	adc_8bit_data = ADCH_reg;
     f10:	89 e7       	ldi	r24, 0x79	; 121
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	fc 01       	movw	r30, r24
     f16:	80 81       	ld	r24, Z
     f18:	89 83       	std	Y+1, r24	; 0x01
	
	// clear ADIF bit by writing 1 to it
	ADCSRA_reg		|= ( 1 << ADIF_bit );
     f1a:	8a e7       	ldi	r24, 0x7A	; 122
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	2a e7       	ldi	r18, 0x7A	; 122
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	f9 01       	movw	r30, r18
     f24:	20 81       	ld	r18, Z
     f26:	20 61       	ori	r18, 0x10	; 16
     f28:	fc 01       	movw	r30, r24
     f2a:	20 83       	st	Z, r18
	
	// clear the MUX5 bit
	ADCSRB_reg		&= ~( 1 << MUX5_bit );
     f2c:	8b e7       	ldi	r24, 0x7B	; 123
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	2b e7       	ldi	r18, 0x7B	; 123
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	f9 01       	movw	r30, r18
     f36:	20 81       	ld	r18, Z
     f38:	27 7f       	andi	r18, 0xF7	; 247
     f3a:	fc 01       	movw	r30, r24
     f3c:	20 83       	st	Z, r18
	
	// clear the MUX[4:0] bits
	ADMUX_reg		&= ~( (1 << MUX4_bit) | (1 << MUX3_bit) | (1 << MUX2_bit) | (1 << MUX1_bit) | (1 << MUX0_bit) );
     f3e:	8c e7       	ldi	r24, 0x7C	; 124
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	2c e7       	ldi	r18, 0x7C	; 124
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	f9 01       	movw	r30, r18
     f48:	20 81       	ld	r18, Z
     f4a:	20 7e       	andi	r18, 0xE0	; 224
     f4c:	fc 01       	movw	r30, r24
     f4e:	20 83       	st	Z, r18
	
	return adc_8bit_data;
     f50:	89 81       	ldd	r24, Y+1	; 0x01
}
     f52:	0f 90       	pop	r0
     f54:	0f 90       	pop	r0
     f56:	df 91       	pop	r29
     f58:	cf 91       	pop	r28
     f5a:	08 95       	ret

00000f5c <adc_port_config>:



void adc_port_config (void)
{
     f5c:	cf 93       	push	r28
     f5e:	df 93       	push	r29
     f60:	cd b7       	in	r28, 0x3d	; 61
     f62:	de b7       	in	r29, 0x3e	; 62
	adc_sensor_low_ddr_reg		= 0x00;				// set PORTF direction as input
     f64:	80 e3       	ldi	r24, 0x30	; 48
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	fc 01       	movw	r30, r24
     f6a:	10 82       	st	Z, r1
	adc_sensor_low_port_reg		= 0x00;				// set PORTF pins floating
     f6c:	81 e3       	ldi	r24, 0x31	; 49
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	fc 01       	movw	r30, r24
     f72:	10 82       	st	Z, r1
	adc_sensor_high_ddr_reg		= 0x00;				// set PORTK direction as input
     f74:	87 e0       	ldi	r24, 0x07	; 7
     f76:	91 e0       	ldi	r25, 0x01	; 1
     f78:	fc 01       	movw	r30, r24
     f7a:	10 82       	st	Z, r1
	adc_sensor_high_port_reg	= 0x00;				// set PORTK pins floating
     f7c:	88 e0       	ldi	r24, 0x08	; 8
     f7e:	91 e0       	ldi	r25, 0x01	; 1
     f80:	fc 01       	movw	r30, r24
     f82:	10 82       	st	Z, r1
}
     f84:	00 00       	nop
     f86:	df 91       	pop	r29
     f88:	cf 91       	pop	r28
     f8a:	08 95       	ret

00000f8c <lcd_port_config>:
 * Example Call: lcd_clear();
 */
void lcd_clear (void)
{
	lcd_wr_command(0x01);
}
     f8c:	cf 93       	push	r28
     f8e:	df 93       	push	r29
     f90:	cd b7       	in	r28, 0x3d	; 61
     f92:	de b7       	in	r29, 0x3e	; 62
     f94:	87 e2       	ldi	r24, 0x27	; 39
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	27 e2       	ldi	r18, 0x27	; 39
     f9a:	30 e0       	ldi	r19, 0x00	; 0
     f9c:	f9 01       	movw	r30, r18
     f9e:	20 81       	ld	r18, Z
     fa0:	27 60       	ori	r18, 0x07	; 7
     fa2:	fc 01       	movw	r30, r24
     fa4:	20 83       	st	Z, r18
     fa6:	87 e2       	ldi	r24, 0x27	; 39
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	27 e2       	ldi	r18, 0x27	; 39
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	f9 01       	movw	r30, r18
     fb0:	20 81       	ld	r18, Z
     fb2:	20 6f       	ori	r18, 0xF0	; 240
     fb4:	fc 01       	movw	r30, r24
     fb6:	20 83       	st	Z, r18
     fb8:	88 e2       	ldi	r24, 0x28	; 40
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	28 e2       	ldi	r18, 0x28	; 40
     fbe:	30 e0       	ldi	r19, 0x00	; 0
     fc0:	f9 01       	movw	r30, r18
     fc2:	20 81       	ld	r18, Z
     fc4:	28 7f       	andi	r18, 0xF8	; 248
     fc6:	fc 01       	movw	r30, r24
     fc8:	20 83       	st	Z, r18
     fca:	88 e2       	ldi	r24, 0x28	; 40
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	28 e2       	ldi	r18, 0x28	; 40
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	f9 01       	movw	r30, r18
     fd4:	20 81       	ld	r18, Z
     fd6:	2f 70       	andi	r18, 0x0F	; 15
     fd8:	fc 01       	movw	r30, r24
     fda:	20 83       	st	Z, r18
     fdc:	00 00       	nop
     fde:	df 91       	pop	r29
     fe0:	cf 91       	pop	r28
     fe2:	08 95       	ret

00000fe4 <lcd_set_4bit>:
     fe4:	0f 93       	push	r16
     fe6:	1f 93       	push	r17
     fe8:	cf 93       	push	r28
     fea:	df 93       	push	r29
     fec:	cd b7       	in	r28, 0x3d	; 61
     fee:	de b7       	in	r29, 0x3e	; 62
     ff0:	c0 57       	subi	r28, 0x70	; 112
     ff2:	d1 09       	sbc	r29, r1
     ff4:	0f b6       	in	r0, 0x3f	; 63
     ff6:	f8 94       	cli
     ff8:	de bf       	out	0x3e, r29	; 62
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	cd bf       	out	0x3d, r28	; 61
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	a0 e8       	ldi	r26, 0x80	; 128
    1004:	bf e3       	ldi	r27, 0x3F	; 63
    1006:	89 83       	std	Y+1, r24	; 0x01
    1008:	9a 83       	std	Y+2, r25	; 0x02
    100a:	ab 83       	std	Y+3, r26	; 0x03
    100c:	bc 83       	std	Y+4, r27	; 0x04
    100e:	8e 01       	movw	r16, r28
    1010:	09 59       	subi	r16, 0x99	; 153
    1012:	1f 4f       	sbci	r17, 0xFF	; 255
    1014:	26 e6       	ldi	r18, 0x66	; 102
    1016:	36 e6       	ldi	r19, 0x66	; 102
    1018:	46 e6       	ldi	r20, 0x66	; 102
    101a:	55 e4       	ldi	r21, 0x45	; 69
    101c:	69 81       	ldd	r22, Y+1	; 0x01
    101e:	7a 81       	ldd	r23, Y+2	; 0x02
    1020:	8b 81       	ldd	r24, Y+3	; 0x03
    1022:	9c 81       	ldd	r25, Y+4	; 0x04
    1024:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__mulsf3>
    1028:	dc 01       	movw	r26, r24
    102a:	cb 01       	movw	r24, r22
    102c:	f8 01       	movw	r30, r16
    102e:	80 83       	st	Z, r24
    1030:	91 83       	std	Z+1, r25	; 0x01
    1032:	a2 83       	std	Z+2, r26	; 0x02
    1034:	b3 83       	std	Z+3, r27	; 0x03
    1036:	ce 01       	movw	r24, r28
    1038:	89 59       	subi	r24, 0x99	; 153
    103a:	9f 4f       	sbci	r25, 0xFF	; 255
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	40 e8       	ldi	r20, 0x80	; 128
    1042:	5f e3       	ldi	r21, 0x3F	; 63
    1044:	fc 01       	movw	r30, r24
    1046:	60 81       	ld	r22, Z
    1048:	71 81       	ldd	r23, Z+1	; 0x01
    104a:	82 81       	ldd	r24, Z+2	; 0x02
    104c:	93 81       	ldd	r25, Z+3	; 0x03
    104e:	0e 94 31 11 	call	0x2262	; 0x2262 <__cmpsf2>
    1052:	88 23       	and	r24, r24
    1054:	4c f4       	brge	.+18     	; 0x1068 <lcd_set_4bit+0x84>
    1056:	ce 01       	movw	r24, r28
    1058:	85 59       	subi	r24, 0x95	; 149
    105a:	9f 4f       	sbci	r25, 0xFF	; 255
    105c:	21 e0       	ldi	r18, 0x01	; 1
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	fc 01       	movw	r30, r24
    1062:	31 83       	std	Z+1, r19	; 0x01
    1064:	20 83       	st	Z, r18
    1066:	69 c0       	rjmp	.+210    	; 0x113a <lcd_set_4bit+0x156>
    1068:	ce 01       	movw	r24, r28
    106a:	89 59       	subi	r24, 0x99	; 153
    106c:	9f 4f       	sbci	r25, 0xFF	; 255
    106e:	20 e0       	ldi	r18, 0x00	; 0
    1070:	3f ef       	ldi	r19, 0xFF	; 255
    1072:	4f e7       	ldi	r20, 0x7F	; 127
    1074:	57 e4       	ldi	r21, 0x47	; 71
    1076:	fc 01       	movw	r30, r24
    1078:	60 81       	ld	r22, Z
    107a:	71 81       	ldd	r23, Z+1	; 0x01
    107c:	82 81       	ldd	r24, Z+2	; 0x02
    107e:	93 81       	ldd	r25, Z+3	; 0x03
    1080:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <__gesf2>
    1084:	18 16       	cp	r1, r24
    1086:	0c f0       	brlt	.+2      	; 0x108a <lcd_set_4bit+0xa6>
    1088:	46 c0       	rjmp	.+140    	; 0x1116 <lcd_set_4bit+0x132>
    108a:	20 e0       	ldi	r18, 0x00	; 0
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	40 e2       	ldi	r20, 0x20	; 32
    1090:	51 e4       	ldi	r21, 0x41	; 65
    1092:	69 81       	ldd	r22, Y+1	; 0x01
    1094:	7a 81       	ldd	r23, Y+2	; 0x02
    1096:	8b 81       	ldd	r24, Y+3	; 0x03
    1098:	9c 81       	ldd	r25, Y+4	; 0x04
    109a:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__mulsf3>
    109e:	dc 01       	movw	r26, r24
    10a0:	cb 01       	movw	r24, r22
    10a2:	8e 01       	movw	r16, r28
    10a4:	05 59       	subi	r16, 0x95	; 149
    10a6:	1f 4f       	sbci	r17, 0xFF	; 255
    10a8:	bc 01       	movw	r22, r24
    10aa:	cd 01       	movw	r24, r26
    10ac:	0e 94 9d 11 	call	0x233a	; 0x233a <__fixunssfsi>
    10b0:	dc 01       	movw	r26, r24
    10b2:	cb 01       	movw	r24, r22
    10b4:	f8 01       	movw	r30, r16
    10b6:	91 83       	std	Z+1, r25	; 0x01
    10b8:	80 83       	st	Z, r24
    10ba:	24 c0       	rjmp	.+72     	; 0x1104 <lcd_set_4bit+0x120>
    10bc:	ce 01       	movw	r24, r28
    10be:	83 59       	subi	r24, 0x93	; 147
    10c0:	9f 4f       	sbci	r25, 0xFF	; 255
    10c2:	20 e7       	ldi	r18, 0x70	; 112
    10c4:	31 e0       	ldi	r19, 0x01	; 1
    10c6:	fc 01       	movw	r30, r24
    10c8:	31 83       	std	Z+1, r19	; 0x01
    10ca:	20 83       	st	Z, r18
    10cc:	ce 01       	movw	r24, r28
    10ce:	83 59       	subi	r24, 0x93	; 147
    10d0:	9f 4f       	sbci	r25, 0xFF	; 255
    10d2:	fc 01       	movw	r30, r24
    10d4:	80 81       	ld	r24, Z
    10d6:	91 81       	ldd	r25, Z+1	; 0x01
    10d8:	01 97       	sbiw	r24, 0x01	; 1
    10da:	f1 f7       	brne	.-4      	; 0x10d8 <lcd_set_4bit+0xf4>
    10dc:	9e 01       	movw	r18, r28
    10de:	23 59       	subi	r18, 0x93	; 147
    10e0:	3f 4f       	sbci	r19, 0xFF	; 255
    10e2:	f9 01       	movw	r30, r18
    10e4:	91 83       	std	Z+1, r25	; 0x01
    10e6:	80 83       	st	Z, r24
    10e8:	ce 01       	movw	r24, r28
    10ea:	85 59       	subi	r24, 0x95	; 149
    10ec:	9f 4f       	sbci	r25, 0xFF	; 255
    10ee:	9e 01       	movw	r18, r28
    10f0:	25 59       	subi	r18, 0x95	; 149
    10f2:	3f 4f       	sbci	r19, 0xFF	; 255
    10f4:	f9 01       	movw	r30, r18
    10f6:	20 81       	ld	r18, Z
    10f8:	31 81       	ldd	r19, Z+1	; 0x01
    10fa:	21 50       	subi	r18, 0x01	; 1
    10fc:	31 09       	sbc	r19, r1
    10fe:	fc 01       	movw	r30, r24
    1100:	31 83       	std	Z+1, r19	; 0x01
    1102:	20 83       	st	Z, r18
    1104:	ce 01       	movw	r24, r28
    1106:	85 59       	subi	r24, 0x95	; 149
    1108:	9f 4f       	sbci	r25, 0xFF	; 255
    110a:	fc 01       	movw	r30, r24
    110c:	80 81       	ld	r24, Z
    110e:	91 81       	ldd	r25, Z+1	; 0x01
    1110:	89 2b       	or	r24, r25
    1112:	a1 f6       	brne	.-88     	; 0x10bc <lcd_set_4bit+0xd8>
    1114:	2c c0       	rjmp	.+88     	; 0x116e <lcd_set_4bit+0x18a>
    1116:	8e 01       	movw	r16, r28
    1118:	05 59       	subi	r16, 0x95	; 149
    111a:	1f 4f       	sbci	r17, 0xFF	; 255
    111c:	ce 01       	movw	r24, r28
    111e:	89 59       	subi	r24, 0x99	; 153
    1120:	9f 4f       	sbci	r25, 0xFF	; 255
    1122:	fc 01       	movw	r30, r24
    1124:	60 81       	ld	r22, Z
    1126:	71 81       	ldd	r23, Z+1	; 0x01
    1128:	82 81       	ldd	r24, Z+2	; 0x02
    112a:	93 81       	ldd	r25, Z+3	; 0x03
    112c:	0e 94 9d 11 	call	0x233a	; 0x233a <__fixunssfsi>
    1130:	dc 01       	movw	r26, r24
    1132:	cb 01       	movw	r24, r22
    1134:	f8 01       	movw	r30, r16
    1136:	91 83       	std	Z+1, r25	; 0x01
    1138:	80 83       	st	Z, r24
    113a:	ce 01       	movw	r24, r28
    113c:	81 59       	subi	r24, 0x91	; 145
    113e:	9f 4f       	sbci	r25, 0xFF	; 255
    1140:	9e 01       	movw	r18, r28
    1142:	25 59       	subi	r18, 0x95	; 149
    1144:	3f 4f       	sbci	r19, 0xFF	; 255
    1146:	f9 01       	movw	r30, r18
    1148:	20 81       	ld	r18, Z
    114a:	31 81       	ldd	r19, Z+1	; 0x01
    114c:	fc 01       	movw	r30, r24
    114e:	31 83       	std	Z+1, r19	; 0x01
    1150:	20 83       	st	Z, r18
    1152:	ce 01       	movw	r24, r28
    1154:	81 59       	subi	r24, 0x91	; 145
    1156:	9f 4f       	sbci	r25, 0xFF	; 255
    1158:	fc 01       	movw	r30, r24
    115a:	80 81       	ld	r24, Z
    115c:	91 81       	ldd	r25, Z+1	; 0x01
    115e:	01 97       	sbiw	r24, 0x01	; 1
    1160:	f1 f7       	brne	.-4      	; 0x115e <lcd_set_4bit+0x17a>
    1162:	9e 01       	movw	r18, r28
    1164:	21 59       	subi	r18, 0x91	; 145
    1166:	3f 4f       	sbci	r19, 0xFF	; 255
    1168:	f9 01       	movw	r30, r18
    116a:	91 83       	std	Z+1, r25	; 0x01
    116c:	80 83       	st	Z, r24
    116e:	88 e2       	ldi	r24, 0x28	; 40
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	28 e2       	ldi	r18, 0x28	; 40
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	f9 01       	movw	r30, r18
    1178:	20 81       	ld	r18, Z
    117a:	2e 7f       	andi	r18, 0xFE	; 254
    117c:	fc 01       	movw	r30, r24
    117e:	20 83       	st	Z, r18
    1180:	88 e2       	ldi	r24, 0x28	; 40
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	28 e2       	ldi	r18, 0x28	; 40
    1186:	30 e0       	ldi	r19, 0x00	; 0
    1188:	f9 01       	movw	r30, r18
    118a:	20 81       	ld	r18, Z
    118c:	2d 7f       	andi	r18, 0xFD	; 253
    118e:	fc 01       	movw	r30, r24
    1190:	20 83       	st	Z, r18
    1192:	88 e2       	ldi	r24, 0x28	; 40
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	20 e3       	ldi	r18, 0x30	; 48
    1198:	fc 01       	movw	r30, r24
    119a:	20 83       	st	Z, r18
    119c:	88 e2       	ldi	r24, 0x28	; 40
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	28 e2       	ldi	r18, 0x28	; 40
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	f9 01       	movw	r30, r18
    11a6:	20 81       	ld	r18, Z
    11a8:	24 60       	ori	r18, 0x04	; 4
    11aa:	fc 01       	movw	r30, r24
    11ac:	20 83       	st	Z, r18
    11ae:	80 e0       	ldi	r24, 0x00	; 0
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	a0 ea       	ldi	r26, 0xA0	; 160
    11b4:	b0 e4       	ldi	r27, 0x40	; 64
    11b6:	8d 83       	std	Y+5, r24	; 0x05
    11b8:	9e 83       	std	Y+6, r25	; 0x06
    11ba:	af 83       	std	Y+7, r26	; 0x07
    11bc:	b8 87       	std	Y+8, r27	; 0x08
    11be:	8e 01       	movw	r16, r28
    11c0:	03 5a       	subi	r16, 0xA3	; 163
    11c2:	1f 4f       	sbci	r17, 0xFF	; 255
    11c4:	26 e6       	ldi	r18, 0x66	; 102
    11c6:	36 e6       	ldi	r19, 0x66	; 102
    11c8:	46 e6       	ldi	r20, 0x66	; 102
    11ca:	55 e4       	ldi	r21, 0x45	; 69
    11cc:	6d 81       	ldd	r22, Y+5	; 0x05
    11ce:	7e 81       	ldd	r23, Y+6	; 0x06
    11d0:	8f 81       	ldd	r24, Y+7	; 0x07
    11d2:	98 85       	ldd	r25, Y+8	; 0x08
    11d4:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__mulsf3>
    11d8:	dc 01       	movw	r26, r24
    11da:	cb 01       	movw	r24, r22
    11dc:	f8 01       	movw	r30, r16
    11de:	80 83       	st	Z, r24
    11e0:	91 83       	std	Z+1, r25	; 0x01
    11e2:	a2 83       	std	Z+2, r26	; 0x02
    11e4:	b3 83       	std	Z+3, r27	; 0x03
    11e6:	ce 01       	movw	r24, r28
    11e8:	83 5a       	subi	r24, 0xA3	; 163
    11ea:	9f 4f       	sbci	r25, 0xFF	; 255
    11ec:	20 e0       	ldi	r18, 0x00	; 0
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	40 e8       	ldi	r20, 0x80	; 128
    11f2:	5f e3       	ldi	r21, 0x3F	; 63
    11f4:	fc 01       	movw	r30, r24
    11f6:	60 81       	ld	r22, Z
    11f8:	71 81       	ldd	r23, Z+1	; 0x01
    11fa:	82 81       	ldd	r24, Z+2	; 0x02
    11fc:	93 81       	ldd	r25, Z+3	; 0x03
    11fe:	0e 94 31 11 	call	0x2262	; 0x2262 <__cmpsf2>
    1202:	88 23       	and	r24, r24
    1204:	4c f4       	brge	.+18     	; 0x1218 <lcd_set_4bit+0x234>
    1206:	ce 01       	movw	r24, r28
    1208:	8f 59       	subi	r24, 0x9F	; 159
    120a:	9f 4f       	sbci	r25, 0xFF	; 255
    120c:	21 e0       	ldi	r18, 0x01	; 1
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	fc 01       	movw	r30, r24
    1212:	31 83       	std	Z+1, r19	; 0x01
    1214:	20 83       	st	Z, r18
    1216:	69 c0       	rjmp	.+210    	; 0x12ea <lcd_set_4bit+0x306>
    1218:	ce 01       	movw	r24, r28
    121a:	83 5a       	subi	r24, 0xA3	; 163
    121c:	9f 4f       	sbci	r25, 0xFF	; 255
    121e:	20 e0       	ldi	r18, 0x00	; 0
    1220:	3f ef       	ldi	r19, 0xFF	; 255
    1222:	4f e7       	ldi	r20, 0x7F	; 127
    1224:	57 e4       	ldi	r21, 0x47	; 71
    1226:	fc 01       	movw	r30, r24
    1228:	60 81       	ld	r22, Z
    122a:	71 81       	ldd	r23, Z+1	; 0x01
    122c:	82 81       	ldd	r24, Z+2	; 0x02
    122e:	93 81       	ldd	r25, Z+3	; 0x03
    1230:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <__gesf2>
    1234:	18 16       	cp	r1, r24
    1236:	0c f0       	brlt	.+2      	; 0x123a <lcd_set_4bit+0x256>
    1238:	46 c0       	rjmp	.+140    	; 0x12c6 <lcd_set_4bit+0x2e2>
    123a:	20 e0       	ldi	r18, 0x00	; 0
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	40 e2       	ldi	r20, 0x20	; 32
    1240:	51 e4       	ldi	r21, 0x41	; 65
    1242:	6d 81       	ldd	r22, Y+5	; 0x05
    1244:	7e 81       	ldd	r23, Y+6	; 0x06
    1246:	8f 81       	ldd	r24, Y+7	; 0x07
    1248:	98 85       	ldd	r25, Y+8	; 0x08
    124a:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__mulsf3>
    124e:	dc 01       	movw	r26, r24
    1250:	cb 01       	movw	r24, r22
    1252:	8e 01       	movw	r16, r28
    1254:	0f 59       	subi	r16, 0x9F	; 159
    1256:	1f 4f       	sbci	r17, 0xFF	; 255
    1258:	bc 01       	movw	r22, r24
    125a:	cd 01       	movw	r24, r26
    125c:	0e 94 9d 11 	call	0x233a	; 0x233a <__fixunssfsi>
    1260:	dc 01       	movw	r26, r24
    1262:	cb 01       	movw	r24, r22
    1264:	f8 01       	movw	r30, r16
    1266:	91 83       	std	Z+1, r25	; 0x01
    1268:	80 83       	st	Z, r24
    126a:	24 c0       	rjmp	.+72     	; 0x12b4 <lcd_set_4bit+0x2d0>
    126c:	ce 01       	movw	r24, r28
    126e:	8d 59       	subi	r24, 0x9D	; 157
    1270:	9f 4f       	sbci	r25, 0xFF	; 255
    1272:	20 e7       	ldi	r18, 0x70	; 112
    1274:	31 e0       	ldi	r19, 0x01	; 1
    1276:	fc 01       	movw	r30, r24
    1278:	31 83       	std	Z+1, r19	; 0x01
    127a:	20 83       	st	Z, r18
    127c:	ce 01       	movw	r24, r28
    127e:	8d 59       	subi	r24, 0x9D	; 157
    1280:	9f 4f       	sbci	r25, 0xFF	; 255
    1282:	fc 01       	movw	r30, r24
    1284:	80 81       	ld	r24, Z
    1286:	91 81       	ldd	r25, Z+1	; 0x01
    1288:	01 97       	sbiw	r24, 0x01	; 1
    128a:	f1 f7       	brne	.-4      	; 0x1288 <lcd_set_4bit+0x2a4>
    128c:	9e 01       	movw	r18, r28
    128e:	2d 59       	subi	r18, 0x9D	; 157
    1290:	3f 4f       	sbci	r19, 0xFF	; 255
    1292:	f9 01       	movw	r30, r18
    1294:	91 83       	std	Z+1, r25	; 0x01
    1296:	80 83       	st	Z, r24
    1298:	ce 01       	movw	r24, r28
    129a:	8f 59       	subi	r24, 0x9F	; 159
    129c:	9f 4f       	sbci	r25, 0xFF	; 255
    129e:	9e 01       	movw	r18, r28
    12a0:	2f 59       	subi	r18, 0x9F	; 159
    12a2:	3f 4f       	sbci	r19, 0xFF	; 255
    12a4:	f9 01       	movw	r30, r18
    12a6:	20 81       	ld	r18, Z
    12a8:	31 81       	ldd	r19, Z+1	; 0x01
    12aa:	21 50       	subi	r18, 0x01	; 1
    12ac:	31 09       	sbc	r19, r1
    12ae:	fc 01       	movw	r30, r24
    12b0:	31 83       	std	Z+1, r19	; 0x01
    12b2:	20 83       	st	Z, r18
    12b4:	ce 01       	movw	r24, r28
    12b6:	8f 59       	subi	r24, 0x9F	; 159
    12b8:	9f 4f       	sbci	r25, 0xFF	; 255
    12ba:	fc 01       	movw	r30, r24
    12bc:	80 81       	ld	r24, Z
    12be:	91 81       	ldd	r25, Z+1	; 0x01
    12c0:	89 2b       	or	r24, r25
    12c2:	a1 f6       	brne	.-88     	; 0x126c <lcd_set_4bit+0x288>
    12c4:	2c c0       	rjmp	.+88     	; 0x131e <lcd_set_4bit+0x33a>
    12c6:	8e 01       	movw	r16, r28
    12c8:	0f 59       	subi	r16, 0x9F	; 159
    12ca:	1f 4f       	sbci	r17, 0xFF	; 255
    12cc:	ce 01       	movw	r24, r28
    12ce:	83 5a       	subi	r24, 0xA3	; 163
    12d0:	9f 4f       	sbci	r25, 0xFF	; 255
    12d2:	fc 01       	movw	r30, r24
    12d4:	60 81       	ld	r22, Z
    12d6:	71 81       	ldd	r23, Z+1	; 0x01
    12d8:	82 81       	ldd	r24, Z+2	; 0x02
    12da:	93 81       	ldd	r25, Z+3	; 0x03
    12dc:	0e 94 9d 11 	call	0x233a	; 0x233a <__fixunssfsi>
    12e0:	dc 01       	movw	r26, r24
    12e2:	cb 01       	movw	r24, r22
    12e4:	f8 01       	movw	r30, r16
    12e6:	91 83       	std	Z+1, r25	; 0x01
    12e8:	80 83       	st	Z, r24
    12ea:	ce 01       	movw	r24, r28
    12ec:	8b 59       	subi	r24, 0x9B	; 155
    12ee:	9f 4f       	sbci	r25, 0xFF	; 255
    12f0:	9e 01       	movw	r18, r28
    12f2:	2f 59       	subi	r18, 0x9F	; 159
    12f4:	3f 4f       	sbci	r19, 0xFF	; 255
    12f6:	f9 01       	movw	r30, r18
    12f8:	20 81       	ld	r18, Z
    12fa:	31 81       	ldd	r19, Z+1	; 0x01
    12fc:	fc 01       	movw	r30, r24
    12fe:	31 83       	std	Z+1, r19	; 0x01
    1300:	20 83       	st	Z, r18
    1302:	ce 01       	movw	r24, r28
    1304:	8b 59       	subi	r24, 0x9B	; 155
    1306:	9f 4f       	sbci	r25, 0xFF	; 255
    1308:	fc 01       	movw	r30, r24
    130a:	80 81       	ld	r24, Z
    130c:	91 81       	ldd	r25, Z+1	; 0x01
    130e:	01 97       	sbiw	r24, 0x01	; 1
    1310:	f1 f7       	brne	.-4      	; 0x130e <lcd_set_4bit+0x32a>
    1312:	9e 01       	movw	r18, r28
    1314:	2b 59       	subi	r18, 0x9B	; 155
    1316:	3f 4f       	sbci	r19, 0xFF	; 255
    1318:	f9 01       	movw	r30, r18
    131a:	91 83       	std	Z+1, r25	; 0x01
    131c:	80 83       	st	Z, r24
    131e:	88 e2       	ldi	r24, 0x28	; 40
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	28 e2       	ldi	r18, 0x28	; 40
    1324:	30 e0       	ldi	r19, 0x00	; 0
    1326:	f9 01       	movw	r30, r18
    1328:	20 81       	ld	r18, Z
    132a:	2b 7f       	andi	r18, 0xFB	; 251
    132c:	fc 01       	movw	r30, r24
    132e:	20 83       	st	Z, r18
    1330:	80 e0       	ldi	r24, 0x00	; 0
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	a0 e8       	ldi	r26, 0x80	; 128
    1336:	bf e3       	ldi	r27, 0x3F	; 63
    1338:	89 87       	std	Y+9, r24	; 0x09
    133a:	9a 87       	std	Y+10, r25	; 0x0a
    133c:	ab 87       	std	Y+11, r26	; 0x0b
    133e:	bc 87       	std	Y+12, r27	; 0x0c
    1340:	8e 01       	movw	r16, r28
    1342:	0d 5a       	subi	r16, 0xAD	; 173
    1344:	1f 4f       	sbci	r17, 0xFF	; 255
    1346:	26 e6       	ldi	r18, 0x66	; 102
    1348:	36 e6       	ldi	r19, 0x66	; 102
    134a:	46 e6       	ldi	r20, 0x66	; 102
    134c:	55 e4       	ldi	r21, 0x45	; 69
    134e:	69 85       	ldd	r22, Y+9	; 0x09
    1350:	7a 85       	ldd	r23, Y+10	; 0x0a
    1352:	8b 85       	ldd	r24, Y+11	; 0x0b
    1354:	9c 85       	ldd	r25, Y+12	; 0x0c
    1356:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__mulsf3>
    135a:	dc 01       	movw	r26, r24
    135c:	cb 01       	movw	r24, r22
    135e:	f8 01       	movw	r30, r16
    1360:	80 83       	st	Z, r24
    1362:	91 83       	std	Z+1, r25	; 0x01
    1364:	a2 83       	std	Z+2, r26	; 0x02
    1366:	b3 83       	std	Z+3, r27	; 0x03
    1368:	ce 01       	movw	r24, r28
    136a:	8d 5a       	subi	r24, 0xAD	; 173
    136c:	9f 4f       	sbci	r25, 0xFF	; 255
    136e:	20 e0       	ldi	r18, 0x00	; 0
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	40 e8       	ldi	r20, 0x80	; 128
    1374:	5f e3       	ldi	r21, 0x3F	; 63
    1376:	fc 01       	movw	r30, r24
    1378:	60 81       	ld	r22, Z
    137a:	71 81       	ldd	r23, Z+1	; 0x01
    137c:	82 81       	ldd	r24, Z+2	; 0x02
    137e:	93 81       	ldd	r25, Z+3	; 0x03
    1380:	70 d7       	rcall	.+3808   	; 0x2262 <__cmpsf2>
    1382:	88 23       	and	r24, r24
    1384:	4c f4       	brge	.+18     	; 0x1398 <lcd_set_4bit+0x3b4>
    1386:	ce 01       	movw	r24, r28
    1388:	89 5a       	subi	r24, 0xA9	; 169
    138a:	9f 4f       	sbci	r25, 0xFF	; 255
    138c:	21 e0       	ldi	r18, 0x01	; 1
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	fc 01       	movw	r30, r24
    1392:	31 83       	std	Z+1, r19	; 0x01
    1394:	20 83       	st	Z, r18
    1396:	67 c0       	rjmp	.+206    	; 0x1466 <lcd_set_4bit+0x482>
    1398:	ce 01       	movw	r24, r28
    139a:	8d 5a       	subi	r24, 0xAD	; 173
    139c:	9f 4f       	sbci	r25, 0xFF	; 255
    139e:	20 e0       	ldi	r18, 0x00	; 0
    13a0:	3f ef       	ldi	r19, 0xFF	; 255
    13a2:	4f e7       	ldi	r20, 0x7F	; 127
    13a4:	57 e4       	ldi	r21, 0x47	; 71
    13a6:	fc 01       	movw	r30, r24
    13a8:	60 81       	ld	r22, Z
    13aa:	71 81       	ldd	r23, Z+1	; 0x01
    13ac:	82 81       	ldd	r24, Z+2	; 0x02
    13ae:	93 81       	ldd	r25, Z+3	; 0x03
    13b0:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <__gesf2>
    13b4:	18 16       	cp	r1, r24
    13b6:	0c f0       	brlt	.+2      	; 0x13ba <lcd_set_4bit+0x3d6>
    13b8:	45 c0       	rjmp	.+138    	; 0x1444 <lcd_set_4bit+0x460>
    13ba:	20 e0       	ldi	r18, 0x00	; 0
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	40 e2       	ldi	r20, 0x20	; 32
    13c0:	51 e4       	ldi	r21, 0x41	; 65
    13c2:	69 85       	ldd	r22, Y+9	; 0x09
    13c4:	7a 85       	ldd	r23, Y+10	; 0x0a
    13c6:	8b 85       	ldd	r24, Y+11	; 0x0b
    13c8:	9c 85       	ldd	r25, Y+12	; 0x0c
    13ca:	0e 94 7f 12 	call	0x24fe	; 0x24fe <__mulsf3>
    13ce:	dc 01       	movw	r26, r24
    13d0:	cb 01       	movw	r24, r22
    13d2:	8e 01       	movw	r16, r28
    13d4:	09 5a       	subi	r16, 0xA9	; 169
    13d6:	1f 4f       	sbci	r17, 0xFF	; 255
    13d8:	bc 01       	movw	r22, r24
    13da:	cd 01       	movw	r24, r26
    13dc:	ae d7       	rcall	.+3932   	; 0x233a <__fixunssfsi>
    13de:	dc 01       	movw	r26, r24
    13e0:	cb 01       	movw	r24, r22
    13e2:	f8 01       	movw	r30, r16
    13e4:	91 83       	std	Z+1, r25	; 0x01
    13e6:	80 83       	st	Z, r24
    13e8:	24 c0       	rjmp	.+72     	; 0x1432 <lcd_set_4bit+0x44e>
    13ea:	ce 01       	movw	r24, r28
    13ec:	87 5a       	subi	r24, 0xA7	; 167
    13ee:	9f 4f       	sbci	r25, 0xFF	; 255
    13f0:	20 e7       	ldi	r18, 0x70	; 112
    13f2:	31 e0       	ldi	r19, 0x01	; 1
    13f4:	fc 01       	movw	r30, r24
    13f6:	31 83       	std	Z+1, r19	; 0x01
    13f8:	20 83       	st	Z, r18
    13fa:	ce 01       	movw	r24, r28
    13fc:	87 5a       	subi	r24, 0xA7	; 167
    13fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1400:	fc 01       	movw	r30, r24
    1402:	80 81       	ld	r24, Z
    1404:	91 81       	ldd	r25, Z+1	; 0x01
    1406:	01 97       	sbiw	r24, 0x01	; 1
    1408:	f1 f7       	brne	.-4      	; 0x1406 <lcd_set_4bit+0x422>
    140a:	9e 01       	movw	r18, r28
    140c:	27 5a       	subi	r18, 0xA7	; 167
    140e:	3f 4f       	sbci	r19, 0xFF	; 255
    1410:	f9 01       	movw	r30, r18
    1412:	91 83       	std	Z+1, r25	; 0x01
    1414:	80 83       	st	Z, r24
    1416:	ce 01       	movw	r24, r28
    1418:	89 5a       	subi	r24, 0xA9	; 169
    141a:	9f 4f       	sbci	r25, 0xFF	; 255
    141c:	9e 01       	movw	r18, r28
    141e:	29 5a       	subi	r18, 0xA9	; 169
    1420:	3f 4f       	sbci	r19, 0xFF	; 255
    1422:	f9 01       	movw	r30, r18
    1424:	20 81       	ld	r18, Z
    1426:	31 81       	ldd	r19, Z+1	; 0x01
    1428:	21 50       	subi	r18, 0x01	; 1
    142a:	31 09       	sbc	r19, r1
    142c:	fc 01       	movw	r30, r24
    142e:	31 83       	std	Z+1, r19	; 0x01
    1430:	20 83       	st	Z, r18
    1432:	ce 01       	movw	r24, r28
    1434:	89 5a       	subi	r24, 0xA9	; 169
    1436:	9f 4f       	sbci	r25, 0xFF	; 255
    1438:	fc 01       	movw	r30, r24
    143a:	80 81       	ld	r24, Z
    143c:	91 81       	ldd	r25, Z+1	; 0x01
    143e:	89 2b       	or	r24, r25
    1440:	a1 f6       	brne	.-88     	; 0x13ea <lcd_set_4bit+0x406>
    1442:	2b c0       	rjmp	.+86     	; 0x149a <lcd_set_4bit+0x4b6>
    1444:	8e 01       	movw	r16, r28
    1446:	09 5a       	subi	r16, 0xA9	; 169
    1448:	1f 4f       	sbci	r17, 0xFF	; 255
    144a:	ce 01       	movw	r24, r28
    144c:	8d 5a       	subi	r24, 0xAD	; 173
    144e:	9f 4f       	sbci	r25, 0xFF	; 255
    1450:	fc 01       	movw	r30, r24
    1452:	60 81       	ld	r22, Z
    1454:	71 81       	ldd	r23, Z+1	; 0x01
    1456:	82 81       	ldd	r24, Z+2	; 0x02
    1458:	93 81       	ldd	r25, Z+3	; 0x03
    145a:	6f d7       	rcall	.+3806   	; 0x233a <__fixunssfsi>
    145c:	dc 01       	movw	r26, r24
    145e:	cb 01       	movw	r24, r22
    1460:	f8 01       	movw	r30, r16
    1462:	91 83       	std	Z+1, r25	; 0x01
    1464:	80 83       	st	Z, r24
    1466:	ce 01       	movw	r24, r28
    1468:	85 5a       	subi	r24, 0xA5	; 165
    146a:	9f 4f       	sbci	r25, 0xFF	; 255
    146c:	9e 01       	movw	r18, r28
    146e:	29 5a       	subi	r18, 0xA9	; 169
    1470:	3f 4f       	sbci	r19, 0xFF	; 255
    1472:	f9 01       	movw	r30, r18
    1474:	20 81       	ld	r18, Z
    1476:	31 81       	ldd	r19, Z+1	; 0x01
    1478:	fc 01       	movw	r30, r24
    147a:	31 83       	std	Z+1, r19	; 0x01
    147c:	20 83       	st	Z, r18
    147e:	ce 01       	movw	r24, r28
    1480:	85 5a       	subi	r24, 0xA5	; 165
    1482:	9f 4f       	sbci	r25, 0xFF	; 255
    1484:	fc 01       	movw	r30, r24
    1486:	80 81       	ld	r24, Z
    1488:	91 81       	ldd	r25, Z+1	; 0x01
    148a:	01 97       	sbiw	r24, 0x01	; 1
    148c:	f1 f7       	brne	.-4      	; 0x148a <lcd_set_4bit+0x4a6>
    148e:	9e 01       	movw	r18, r28
    1490:	25 5a       	subi	r18, 0xA5	; 165
    1492:	3f 4f       	sbci	r19, 0xFF	; 255
    1494:	f9 01       	movw	r30, r18
    1496:	91 83       	std	Z+1, r25	; 0x01
    1498:	80 83       	st	Z, r24
    149a:	88 e2       	ldi	r24, 0x28	; 40
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	28 e2       	ldi	r18, 0x28	; 40
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	f9 01       	movw	r30, r18
    14a4:	20 81       	ld	r18, Z
    14a6:	2e 7f       	andi	r18, 0xFE	; 254
    14a8:	fc 01       	movw	r30, r24
    14aa:	20 83       	st	Z, r18
    14ac:	88 e2       	ldi	r24, 0x28	; 40
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	28 e2       	ldi	r18, 0x28	; 40
    14b2:	30 e0       	ldi	r19, 0x00	; 0
    14b4:	f9 01       	movw	r30, r18
    14b6:	20 81       	ld	r18, Z
    14b8:	2d 7f       	andi	r18, 0xFD	; 253
    14ba:	fc 01       	movw	r30, r24
    14bc:	20 83       	st	Z, r18
    14be:	88 e2       	ldi	r24, 0x28	; 40
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	20 e3       	ldi	r18, 0x30	; 48
    14c4:	fc 01       	movw	r30, r24
    14c6:	20 83       	st	Z, r18
    14c8:	88 e2       	ldi	r24, 0x28	; 40
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	28 e2       	ldi	r18, 0x28	; 40
    14ce:	30 e0       	ldi	r19, 0x00	; 0
    14d0:	f9 01       	movw	r30, r18
    14d2:	20 81       	ld	r18, Z
    14d4:	24 60       	ori	r18, 0x04	; 4
    14d6:	fc 01       	movw	r30, r24
    14d8:	20 83       	st	Z, r18
    14da:	80 e0       	ldi	r24, 0x00	; 0
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	a0 ea       	ldi	r26, 0xA0	; 160
    14e0:	b0 e4       	ldi	r27, 0x40	; 64
    14e2:	8d 87       	std	Y+13, r24	; 0x0d
    14e4:	9e 87       	std	Y+14, r25	; 0x0e
    14e6:	af 87       	std	Y+15, r26	; 0x0f
    14e8:	b8 8b       	std	Y+16, r27	; 0x10
    14ea:	8e 01       	movw	r16, r28
    14ec:	07 5b       	subi	r16, 0xB7	; 183
    14ee:	1f 4f       	sbci	r17, 0xFF	; 255
    14f0:	26 e6       	ldi	r18, 0x66	; 102
    14f2:	36 e6       	ldi	r19, 0x66	; 102
    14f4:	46 e6       	ldi	r20, 0x66	; 102
    14f6:	55 e4       	ldi	r21, 0x45	; 69
    14f8:	6d 85       	ldd	r22, Y+13	; 0x0d
    14fa:	7e 85       	ldd	r23, Y+14	; 0x0e
    14fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    14fe:	98 89       	ldd	r25, Y+16	; 0x10
    1500:	fe d7       	rcall	.+4092   	; 0x24fe <__mulsf3>
    1502:	dc 01       	movw	r26, r24
    1504:	cb 01       	movw	r24, r22
    1506:	f8 01       	movw	r30, r16
    1508:	80 83       	st	Z, r24
    150a:	91 83       	std	Z+1, r25	; 0x01
    150c:	a2 83       	std	Z+2, r26	; 0x02
    150e:	b3 83       	std	Z+3, r27	; 0x03
    1510:	ce 01       	movw	r24, r28
    1512:	87 5b       	subi	r24, 0xB7	; 183
    1514:	9f 4f       	sbci	r25, 0xFF	; 255
    1516:	20 e0       	ldi	r18, 0x00	; 0
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	40 e8       	ldi	r20, 0x80	; 128
    151c:	5f e3       	ldi	r21, 0x3F	; 63
    151e:	fc 01       	movw	r30, r24
    1520:	60 81       	ld	r22, Z
    1522:	71 81       	ldd	r23, Z+1	; 0x01
    1524:	82 81       	ldd	r24, Z+2	; 0x02
    1526:	93 81       	ldd	r25, Z+3	; 0x03
    1528:	9c d6       	rcall	.+3384   	; 0x2262 <__cmpsf2>
    152a:	88 23       	and	r24, r24
    152c:	4c f4       	brge	.+18     	; 0x1540 <lcd_set_4bit+0x55c>
    152e:	ce 01       	movw	r24, r28
    1530:	83 5b       	subi	r24, 0xB3	; 179
    1532:	9f 4f       	sbci	r25, 0xFF	; 255
    1534:	21 e0       	ldi	r18, 0x01	; 1
    1536:	30 e0       	ldi	r19, 0x00	; 0
    1538:	fc 01       	movw	r30, r24
    153a:	31 83       	std	Z+1, r19	; 0x01
    153c:	20 83       	st	Z, r18
    153e:	65 c0       	rjmp	.+202    	; 0x160a <lcd_set_4bit+0x626>
    1540:	ce 01       	movw	r24, r28
    1542:	87 5b       	subi	r24, 0xB7	; 183
    1544:	9f 4f       	sbci	r25, 0xFF	; 255
    1546:	20 e0       	ldi	r18, 0x00	; 0
    1548:	3f ef       	ldi	r19, 0xFF	; 255
    154a:	4f e7       	ldi	r20, 0x7F	; 127
    154c:	57 e4       	ldi	r21, 0x47	; 71
    154e:	fc 01       	movw	r30, r24
    1550:	60 81       	ld	r22, Z
    1552:	71 81       	ldd	r23, Z+1	; 0x01
    1554:	82 81       	ldd	r24, Z+2	; 0x02
    1556:	93 81       	ldd	r25, Z+3	; 0x03
    1558:	ce d7       	rcall	.+3996   	; 0x24f6 <__gesf2>
    155a:	18 16       	cp	r1, r24
    155c:	0c f0       	brlt	.+2      	; 0x1560 <lcd_set_4bit+0x57c>
    155e:	44 c0       	rjmp	.+136    	; 0x15e8 <lcd_set_4bit+0x604>
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	40 e2       	ldi	r20, 0x20	; 32
    1566:	51 e4       	ldi	r21, 0x41	; 65
    1568:	6d 85       	ldd	r22, Y+13	; 0x0d
    156a:	7e 85       	ldd	r23, Y+14	; 0x0e
    156c:	8f 85       	ldd	r24, Y+15	; 0x0f
    156e:	98 89       	ldd	r25, Y+16	; 0x10
    1570:	c6 d7       	rcall	.+3980   	; 0x24fe <__mulsf3>
    1572:	dc 01       	movw	r26, r24
    1574:	cb 01       	movw	r24, r22
    1576:	8e 01       	movw	r16, r28
    1578:	03 5b       	subi	r16, 0xB3	; 179
    157a:	1f 4f       	sbci	r17, 0xFF	; 255
    157c:	bc 01       	movw	r22, r24
    157e:	cd 01       	movw	r24, r26
    1580:	dc d6       	rcall	.+3512   	; 0x233a <__fixunssfsi>
    1582:	dc 01       	movw	r26, r24
    1584:	cb 01       	movw	r24, r22
    1586:	f8 01       	movw	r30, r16
    1588:	91 83       	std	Z+1, r25	; 0x01
    158a:	80 83       	st	Z, r24
    158c:	24 c0       	rjmp	.+72     	; 0x15d6 <lcd_set_4bit+0x5f2>
    158e:	ce 01       	movw	r24, r28
    1590:	81 5b       	subi	r24, 0xB1	; 177
    1592:	9f 4f       	sbci	r25, 0xFF	; 255
    1594:	20 e7       	ldi	r18, 0x70	; 112
    1596:	31 e0       	ldi	r19, 0x01	; 1
    1598:	fc 01       	movw	r30, r24
    159a:	31 83       	std	Z+1, r19	; 0x01
    159c:	20 83       	st	Z, r18
    159e:	ce 01       	movw	r24, r28
    15a0:	81 5b       	subi	r24, 0xB1	; 177
    15a2:	9f 4f       	sbci	r25, 0xFF	; 255
    15a4:	fc 01       	movw	r30, r24
    15a6:	80 81       	ld	r24, Z
    15a8:	91 81       	ldd	r25, Z+1	; 0x01
    15aa:	01 97       	sbiw	r24, 0x01	; 1
    15ac:	f1 f7       	brne	.-4      	; 0x15aa <lcd_set_4bit+0x5c6>
    15ae:	9e 01       	movw	r18, r28
    15b0:	21 5b       	subi	r18, 0xB1	; 177
    15b2:	3f 4f       	sbci	r19, 0xFF	; 255
    15b4:	f9 01       	movw	r30, r18
    15b6:	91 83       	std	Z+1, r25	; 0x01
    15b8:	80 83       	st	Z, r24
    15ba:	ce 01       	movw	r24, r28
    15bc:	83 5b       	subi	r24, 0xB3	; 179
    15be:	9f 4f       	sbci	r25, 0xFF	; 255
    15c0:	9e 01       	movw	r18, r28
    15c2:	23 5b       	subi	r18, 0xB3	; 179
    15c4:	3f 4f       	sbci	r19, 0xFF	; 255
    15c6:	f9 01       	movw	r30, r18
    15c8:	20 81       	ld	r18, Z
    15ca:	31 81       	ldd	r19, Z+1	; 0x01
    15cc:	21 50       	subi	r18, 0x01	; 1
    15ce:	31 09       	sbc	r19, r1
    15d0:	fc 01       	movw	r30, r24
    15d2:	31 83       	std	Z+1, r19	; 0x01
    15d4:	20 83       	st	Z, r18
    15d6:	ce 01       	movw	r24, r28
    15d8:	83 5b       	subi	r24, 0xB3	; 179
    15da:	9f 4f       	sbci	r25, 0xFF	; 255
    15dc:	fc 01       	movw	r30, r24
    15de:	80 81       	ld	r24, Z
    15e0:	91 81       	ldd	r25, Z+1	; 0x01
    15e2:	89 2b       	or	r24, r25
    15e4:	a1 f6       	brne	.-88     	; 0x158e <lcd_set_4bit+0x5aa>
    15e6:	2b c0       	rjmp	.+86     	; 0x163e <lcd_set_4bit+0x65a>
    15e8:	8e 01       	movw	r16, r28
    15ea:	03 5b       	subi	r16, 0xB3	; 179
    15ec:	1f 4f       	sbci	r17, 0xFF	; 255
    15ee:	ce 01       	movw	r24, r28
    15f0:	87 5b       	subi	r24, 0xB7	; 183
    15f2:	9f 4f       	sbci	r25, 0xFF	; 255
    15f4:	fc 01       	movw	r30, r24
    15f6:	60 81       	ld	r22, Z
    15f8:	71 81       	ldd	r23, Z+1	; 0x01
    15fa:	82 81       	ldd	r24, Z+2	; 0x02
    15fc:	93 81       	ldd	r25, Z+3	; 0x03
    15fe:	9d d6       	rcall	.+3386   	; 0x233a <__fixunssfsi>
    1600:	dc 01       	movw	r26, r24
    1602:	cb 01       	movw	r24, r22
    1604:	f8 01       	movw	r30, r16
    1606:	91 83       	std	Z+1, r25	; 0x01
    1608:	80 83       	st	Z, r24
    160a:	ce 01       	movw	r24, r28
    160c:	8f 5a       	subi	r24, 0xAF	; 175
    160e:	9f 4f       	sbci	r25, 0xFF	; 255
    1610:	9e 01       	movw	r18, r28
    1612:	23 5b       	subi	r18, 0xB3	; 179
    1614:	3f 4f       	sbci	r19, 0xFF	; 255
    1616:	f9 01       	movw	r30, r18
    1618:	20 81       	ld	r18, Z
    161a:	31 81       	ldd	r19, Z+1	; 0x01
    161c:	fc 01       	movw	r30, r24
    161e:	31 83       	std	Z+1, r19	; 0x01
    1620:	20 83       	st	Z, r18
    1622:	ce 01       	movw	r24, r28
    1624:	8f 5a       	subi	r24, 0xAF	; 175
    1626:	9f 4f       	sbci	r25, 0xFF	; 255
    1628:	fc 01       	movw	r30, r24
    162a:	80 81       	ld	r24, Z
    162c:	91 81       	ldd	r25, Z+1	; 0x01
    162e:	01 97       	sbiw	r24, 0x01	; 1
    1630:	f1 f7       	brne	.-4      	; 0x162e <lcd_set_4bit+0x64a>
    1632:	9e 01       	movw	r18, r28
    1634:	2f 5a       	subi	r18, 0xAF	; 175
    1636:	3f 4f       	sbci	r19, 0xFF	; 255
    1638:	f9 01       	movw	r30, r18
    163a:	91 83       	std	Z+1, r25	; 0x01
    163c:	80 83       	st	Z, r24
    163e:	88 e2       	ldi	r24, 0x28	; 40
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	28 e2       	ldi	r18, 0x28	; 40
    1644:	30 e0       	ldi	r19, 0x00	; 0
    1646:	f9 01       	movw	r30, r18
    1648:	20 81       	ld	r18, Z
    164a:	2b 7f       	andi	r18, 0xFB	; 251
    164c:	fc 01       	movw	r30, r24
    164e:	20 83       	st	Z, r18
    1650:	80 e0       	ldi	r24, 0x00	; 0
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	a0 e8       	ldi	r26, 0x80	; 128
    1656:	bf e3       	ldi	r27, 0x3F	; 63
    1658:	89 8b       	std	Y+17, r24	; 0x11
    165a:	9a 8b       	std	Y+18, r25	; 0x12
    165c:	ab 8b       	std	Y+19, r26	; 0x13
    165e:	bc 8b       	std	Y+20, r27	; 0x14
    1660:	8e 01       	movw	r16, r28
    1662:	01 5c       	subi	r16, 0xC1	; 193
    1664:	1f 4f       	sbci	r17, 0xFF	; 255
    1666:	26 e6       	ldi	r18, 0x66	; 102
    1668:	36 e6       	ldi	r19, 0x66	; 102
    166a:	46 e6       	ldi	r20, 0x66	; 102
    166c:	55 e4       	ldi	r21, 0x45	; 69
    166e:	69 89       	ldd	r22, Y+17	; 0x11
    1670:	7a 89       	ldd	r23, Y+18	; 0x12
    1672:	8b 89       	ldd	r24, Y+19	; 0x13
    1674:	9c 89       	ldd	r25, Y+20	; 0x14
    1676:	43 d7       	rcall	.+3718   	; 0x24fe <__mulsf3>
    1678:	dc 01       	movw	r26, r24
    167a:	cb 01       	movw	r24, r22
    167c:	f8 01       	movw	r30, r16
    167e:	80 83       	st	Z, r24
    1680:	91 83       	std	Z+1, r25	; 0x01
    1682:	a2 83       	std	Z+2, r26	; 0x02
    1684:	b3 83       	std	Z+3, r27	; 0x03
    1686:	ce 01       	movw	r24, r28
    1688:	cf 96       	adiw	r24, 0x3f	; 63
    168a:	20 e0       	ldi	r18, 0x00	; 0
    168c:	30 e0       	ldi	r19, 0x00	; 0
    168e:	40 e8       	ldi	r20, 0x80	; 128
    1690:	5f e3       	ldi	r21, 0x3F	; 63
    1692:	fc 01       	movw	r30, r24
    1694:	60 81       	ld	r22, Z
    1696:	71 81       	ldd	r23, Z+1	; 0x01
    1698:	82 81       	ldd	r24, Z+2	; 0x02
    169a:	93 81       	ldd	r25, Z+3	; 0x03
    169c:	e2 d5       	rcall	.+3012   	; 0x2262 <__cmpsf2>
    169e:	88 23       	and	r24, r24
    16a0:	4c f4       	brge	.+18     	; 0x16b4 <lcd_set_4bit+0x6d0>
    16a2:	ce 01       	movw	r24, r28
    16a4:	8d 5b       	subi	r24, 0xBD	; 189
    16a6:	9f 4f       	sbci	r25, 0xFF	; 255
    16a8:	21 e0       	ldi	r18, 0x01	; 1
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	fc 01       	movw	r30, r24
    16ae:	31 83       	std	Z+1, r19	; 0x01
    16b0:	20 83       	st	Z, r18
    16b2:	63 c0       	rjmp	.+198    	; 0x177a <lcd_set_4bit+0x796>
    16b4:	ce 01       	movw	r24, r28
    16b6:	cf 96       	adiw	r24, 0x3f	; 63
    16b8:	20 e0       	ldi	r18, 0x00	; 0
    16ba:	3f ef       	ldi	r19, 0xFF	; 255
    16bc:	4f e7       	ldi	r20, 0x7F	; 127
    16be:	57 e4       	ldi	r21, 0x47	; 71
    16c0:	fc 01       	movw	r30, r24
    16c2:	60 81       	ld	r22, Z
    16c4:	71 81       	ldd	r23, Z+1	; 0x01
    16c6:	82 81       	ldd	r24, Z+2	; 0x02
    16c8:	93 81       	ldd	r25, Z+3	; 0x03
    16ca:	15 d7       	rcall	.+3626   	; 0x24f6 <__gesf2>
    16cc:	18 16       	cp	r1, r24
    16ce:	0c f0       	brlt	.+2      	; 0x16d2 <lcd_set_4bit+0x6ee>
    16d0:	44 c0       	rjmp	.+136    	; 0x175a <lcd_set_4bit+0x776>
    16d2:	20 e0       	ldi	r18, 0x00	; 0
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	40 e2       	ldi	r20, 0x20	; 32
    16d8:	51 e4       	ldi	r21, 0x41	; 65
    16da:	69 89       	ldd	r22, Y+17	; 0x11
    16dc:	7a 89       	ldd	r23, Y+18	; 0x12
    16de:	8b 89       	ldd	r24, Y+19	; 0x13
    16e0:	9c 89       	ldd	r25, Y+20	; 0x14
    16e2:	0d d7       	rcall	.+3610   	; 0x24fe <__mulsf3>
    16e4:	dc 01       	movw	r26, r24
    16e6:	cb 01       	movw	r24, r22
    16e8:	8e 01       	movw	r16, r28
    16ea:	0d 5b       	subi	r16, 0xBD	; 189
    16ec:	1f 4f       	sbci	r17, 0xFF	; 255
    16ee:	bc 01       	movw	r22, r24
    16f0:	cd 01       	movw	r24, r26
    16f2:	23 d6       	rcall	.+3142   	; 0x233a <__fixunssfsi>
    16f4:	dc 01       	movw	r26, r24
    16f6:	cb 01       	movw	r24, r22
    16f8:	f8 01       	movw	r30, r16
    16fa:	91 83       	std	Z+1, r25	; 0x01
    16fc:	80 83       	st	Z, r24
    16fe:	24 c0       	rjmp	.+72     	; 0x1748 <lcd_set_4bit+0x764>
    1700:	ce 01       	movw	r24, r28
    1702:	8b 5b       	subi	r24, 0xBB	; 187
    1704:	9f 4f       	sbci	r25, 0xFF	; 255
    1706:	20 e7       	ldi	r18, 0x70	; 112
    1708:	31 e0       	ldi	r19, 0x01	; 1
    170a:	fc 01       	movw	r30, r24
    170c:	31 83       	std	Z+1, r19	; 0x01
    170e:	20 83       	st	Z, r18
    1710:	ce 01       	movw	r24, r28
    1712:	8b 5b       	subi	r24, 0xBB	; 187
    1714:	9f 4f       	sbci	r25, 0xFF	; 255
    1716:	fc 01       	movw	r30, r24
    1718:	80 81       	ld	r24, Z
    171a:	91 81       	ldd	r25, Z+1	; 0x01
    171c:	01 97       	sbiw	r24, 0x01	; 1
    171e:	f1 f7       	brne	.-4      	; 0x171c <lcd_set_4bit+0x738>
    1720:	9e 01       	movw	r18, r28
    1722:	2b 5b       	subi	r18, 0xBB	; 187
    1724:	3f 4f       	sbci	r19, 0xFF	; 255
    1726:	f9 01       	movw	r30, r18
    1728:	91 83       	std	Z+1, r25	; 0x01
    172a:	80 83       	st	Z, r24
    172c:	ce 01       	movw	r24, r28
    172e:	8d 5b       	subi	r24, 0xBD	; 189
    1730:	9f 4f       	sbci	r25, 0xFF	; 255
    1732:	9e 01       	movw	r18, r28
    1734:	2d 5b       	subi	r18, 0xBD	; 189
    1736:	3f 4f       	sbci	r19, 0xFF	; 255
    1738:	f9 01       	movw	r30, r18
    173a:	20 81       	ld	r18, Z
    173c:	31 81       	ldd	r19, Z+1	; 0x01
    173e:	21 50       	subi	r18, 0x01	; 1
    1740:	31 09       	sbc	r19, r1
    1742:	fc 01       	movw	r30, r24
    1744:	31 83       	std	Z+1, r19	; 0x01
    1746:	20 83       	st	Z, r18
    1748:	ce 01       	movw	r24, r28
    174a:	8d 5b       	subi	r24, 0xBD	; 189
    174c:	9f 4f       	sbci	r25, 0xFF	; 255
    174e:	fc 01       	movw	r30, r24
    1750:	80 81       	ld	r24, Z
    1752:	91 81       	ldd	r25, Z+1	; 0x01
    1754:	89 2b       	or	r24, r25
    1756:	a1 f6       	brne	.-88     	; 0x1700 <lcd_set_4bit+0x71c>
    1758:	2a c0       	rjmp	.+84     	; 0x17ae <lcd_set_4bit+0x7ca>
    175a:	8e 01       	movw	r16, r28
    175c:	0d 5b       	subi	r16, 0xBD	; 189
    175e:	1f 4f       	sbci	r17, 0xFF	; 255
    1760:	ce 01       	movw	r24, r28
    1762:	cf 96       	adiw	r24, 0x3f	; 63
    1764:	fc 01       	movw	r30, r24
    1766:	60 81       	ld	r22, Z
    1768:	71 81       	ldd	r23, Z+1	; 0x01
    176a:	82 81       	ldd	r24, Z+2	; 0x02
    176c:	93 81       	ldd	r25, Z+3	; 0x03
    176e:	e5 d5       	rcall	.+3018   	; 0x233a <__fixunssfsi>
    1770:	dc 01       	movw	r26, r24
    1772:	cb 01       	movw	r24, r22
    1774:	f8 01       	movw	r30, r16
    1776:	91 83       	std	Z+1, r25	; 0x01
    1778:	80 83       	st	Z, r24
    177a:	ce 01       	movw	r24, r28
    177c:	89 5b       	subi	r24, 0xB9	; 185
    177e:	9f 4f       	sbci	r25, 0xFF	; 255
    1780:	9e 01       	movw	r18, r28
    1782:	2d 5b       	subi	r18, 0xBD	; 189
    1784:	3f 4f       	sbci	r19, 0xFF	; 255
    1786:	f9 01       	movw	r30, r18
    1788:	20 81       	ld	r18, Z
    178a:	31 81       	ldd	r19, Z+1	; 0x01
    178c:	fc 01       	movw	r30, r24
    178e:	31 83       	std	Z+1, r19	; 0x01
    1790:	20 83       	st	Z, r18
    1792:	ce 01       	movw	r24, r28
    1794:	89 5b       	subi	r24, 0xB9	; 185
    1796:	9f 4f       	sbci	r25, 0xFF	; 255
    1798:	fc 01       	movw	r30, r24
    179a:	80 81       	ld	r24, Z
    179c:	91 81       	ldd	r25, Z+1	; 0x01
    179e:	01 97       	sbiw	r24, 0x01	; 1
    17a0:	f1 f7       	brne	.-4      	; 0x179e <lcd_set_4bit+0x7ba>
    17a2:	9e 01       	movw	r18, r28
    17a4:	29 5b       	subi	r18, 0xB9	; 185
    17a6:	3f 4f       	sbci	r19, 0xFF	; 255
    17a8:	f9 01       	movw	r30, r18
    17aa:	91 83       	std	Z+1, r25	; 0x01
    17ac:	80 83       	st	Z, r24
    17ae:	88 e2       	ldi	r24, 0x28	; 40
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	28 e2       	ldi	r18, 0x28	; 40
    17b4:	30 e0       	ldi	r19, 0x00	; 0
    17b6:	f9 01       	movw	r30, r18
    17b8:	20 81       	ld	r18, Z
    17ba:	2e 7f       	andi	r18, 0xFE	; 254
    17bc:	fc 01       	movw	r30, r24
    17be:	20 83       	st	Z, r18
    17c0:	88 e2       	ldi	r24, 0x28	; 40
    17c2:	90 e0       	ldi	r25, 0x00	; 0
    17c4:	28 e2       	ldi	r18, 0x28	; 40
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	f9 01       	movw	r30, r18
    17ca:	20 81       	ld	r18, Z
    17cc:	2d 7f       	andi	r18, 0xFD	; 253
    17ce:	fc 01       	movw	r30, r24
    17d0:	20 83       	st	Z, r18
    17d2:	88 e2       	ldi	r24, 0x28	; 40
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	20 e3       	ldi	r18, 0x30	; 48
    17d8:	fc 01       	movw	r30, r24
    17da:	20 83       	st	Z, r18
    17dc:	88 e2       	ldi	r24, 0x28	; 40
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	28 e2       	ldi	r18, 0x28	; 40
    17e2:	30 e0       	ldi	r19, 0x00	; 0
    17e4:	f9 01       	movw	r30, r18
    17e6:	20 81       	ld	r18, Z
    17e8:	24 60       	ori	r18, 0x04	; 4
    17ea:	fc 01       	movw	r30, r24
    17ec:	20 83       	st	Z, r18
    17ee:	80 e0       	ldi	r24, 0x00	; 0
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	a0 ea       	ldi	r26, 0xA0	; 160
    17f4:	b0 e4       	ldi	r27, 0x40	; 64
    17f6:	8d 8b       	std	Y+21, r24	; 0x15
    17f8:	9e 8b       	std	Y+22, r25	; 0x16
    17fa:	af 8b       	std	Y+23, r26	; 0x17
    17fc:	b8 8f       	std	Y+24, r27	; 0x18
    17fe:	26 e6       	ldi	r18, 0x66	; 102
    1800:	36 e6       	ldi	r19, 0x66	; 102
    1802:	46 e6       	ldi	r20, 0x66	; 102
    1804:	55 e4       	ldi	r21, 0x45	; 69
    1806:	6d 89       	ldd	r22, Y+21	; 0x15
    1808:	7e 89       	ldd	r23, Y+22	; 0x16
    180a:	8f 89       	ldd	r24, Y+23	; 0x17
    180c:	98 8d       	ldd	r25, Y+24	; 0x18
    180e:	77 d6       	rcall	.+3310   	; 0x24fe <__mulsf3>
    1810:	dc 01       	movw	r26, r24
    1812:	cb 01       	movw	r24, r22
    1814:	8d ab       	std	Y+53, r24	; 0x35
    1816:	9e ab       	std	Y+54, r25	; 0x36
    1818:	af ab       	std	Y+55, r26	; 0x37
    181a:	b8 af       	std	Y+56, r27	; 0x38
    181c:	20 e0       	ldi	r18, 0x00	; 0
    181e:	30 e0       	ldi	r19, 0x00	; 0
    1820:	40 e8       	ldi	r20, 0x80	; 128
    1822:	5f e3       	ldi	r21, 0x3F	; 63
    1824:	6d a9       	ldd	r22, Y+53	; 0x35
    1826:	7e a9       	ldd	r23, Y+54	; 0x36
    1828:	8f a9       	ldd	r24, Y+55	; 0x37
    182a:	98 ad       	ldd	r25, Y+56	; 0x38
    182c:	1a d5       	rcall	.+2612   	; 0x2262 <__cmpsf2>
    182e:	88 23       	and	r24, r24
    1830:	2c f4       	brge	.+10     	; 0x183c <lcd_set_4bit+0x858>
    1832:	81 e0       	ldi	r24, 0x01	; 1
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	9a af       	std	Y+58, r25	; 0x3a
    1838:	89 af       	std	Y+57, r24	; 0x39
    183a:	3b c0       	rjmp	.+118    	; 0x18b2 <lcd_set_4bit+0x8ce>
    183c:	20 e0       	ldi	r18, 0x00	; 0
    183e:	3f ef       	ldi	r19, 0xFF	; 255
    1840:	4f e7       	ldi	r20, 0x7F	; 127
    1842:	57 e4       	ldi	r21, 0x47	; 71
    1844:	6d a9       	ldd	r22, Y+53	; 0x35
    1846:	7e a9       	ldd	r23, Y+54	; 0x36
    1848:	8f a9       	ldd	r24, Y+55	; 0x37
    184a:	98 ad       	ldd	r25, Y+56	; 0x38
    184c:	54 d6       	rcall	.+3240   	; 0x24f6 <__gesf2>
    184e:	18 16       	cp	r1, r24
    1850:	3c f5       	brge	.+78     	; 0x18a0 <lcd_set_4bit+0x8bc>
    1852:	20 e0       	ldi	r18, 0x00	; 0
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	40 e2       	ldi	r20, 0x20	; 32
    1858:	51 e4       	ldi	r21, 0x41	; 65
    185a:	6d 89       	ldd	r22, Y+21	; 0x15
    185c:	7e 89       	ldd	r23, Y+22	; 0x16
    185e:	8f 89       	ldd	r24, Y+23	; 0x17
    1860:	98 8d       	ldd	r25, Y+24	; 0x18
    1862:	4d d6       	rcall	.+3226   	; 0x24fe <__mulsf3>
    1864:	dc 01       	movw	r26, r24
    1866:	cb 01       	movw	r24, r22
    1868:	bc 01       	movw	r22, r24
    186a:	cd 01       	movw	r24, r26
    186c:	66 d5       	rcall	.+2764   	; 0x233a <__fixunssfsi>
    186e:	dc 01       	movw	r26, r24
    1870:	cb 01       	movw	r24, r22
    1872:	9a af       	std	Y+58, r25	; 0x3a
    1874:	89 af       	std	Y+57, r24	; 0x39
    1876:	0f c0       	rjmp	.+30     	; 0x1896 <lcd_set_4bit+0x8b2>
    1878:	80 e7       	ldi	r24, 0x70	; 112
    187a:	91 e0       	ldi	r25, 0x01	; 1
    187c:	9c af       	std	Y+60, r25	; 0x3c
    187e:	8b af       	std	Y+59, r24	; 0x3b
    1880:	8b ad       	ldd	r24, Y+59	; 0x3b
    1882:	9c ad       	ldd	r25, Y+60	; 0x3c
    1884:	01 97       	sbiw	r24, 0x01	; 1
    1886:	f1 f7       	brne	.-4      	; 0x1884 <lcd_set_4bit+0x8a0>
    1888:	9c af       	std	Y+60, r25	; 0x3c
    188a:	8b af       	std	Y+59, r24	; 0x3b
    188c:	89 ad       	ldd	r24, Y+57	; 0x39
    188e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1890:	01 97       	sbiw	r24, 0x01	; 1
    1892:	9a af       	std	Y+58, r25	; 0x3a
    1894:	89 af       	std	Y+57, r24	; 0x39
    1896:	89 ad       	ldd	r24, Y+57	; 0x39
    1898:	9a ad       	ldd	r25, Y+58	; 0x3a
    189a:	89 2b       	or	r24, r25
    189c:	69 f7       	brne	.-38     	; 0x1878 <lcd_set_4bit+0x894>
    189e:	13 c0       	rjmp	.+38     	; 0x18c6 <lcd_set_4bit+0x8e2>
    18a0:	6d a9       	ldd	r22, Y+53	; 0x35
    18a2:	7e a9       	ldd	r23, Y+54	; 0x36
    18a4:	8f a9       	ldd	r24, Y+55	; 0x37
    18a6:	98 ad       	ldd	r25, Y+56	; 0x38
    18a8:	48 d5       	rcall	.+2704   	; 0x233a <__fixunssfsi>
    18aa:	dc 01       	movw	r26, r24
    18ac:	cb 01       	movw	r24, r22
    18ae:	9a af       	std	Y+58, r25	; 0x3a
    18b0:	89 af       	std	Y+57, r24	; 0x39
    18b2:	89 ad       	ldd	r24, Y+57	; 0x39
    18b4:	9a ad       	ldd	r25, Y+58	; 0x3a
    18b6:	9e af       	std	Y+62, r25	; 0x3e
    18b8:	8d af       	std	Y+61, r24	; 0x3d
    18ba:	8d ad       	ldd	r24, Y+61	; 0x3d
    18bc:	9e ad       	ldd	r25, Y+62	; 0x3e
    18be:	01 97       	sbiw	r24, 0x01	; 1
    18c0:	f1 f7       	brne	.-4      	; 0x18be <lcd_set_4bit+0x8da>
    18c2:	9e af       	std	Y+62, r25	; 0x3e
    18c4:	8d af       	std	Y+61, r24	; 0x3d
    18c6:	88 e2       	ldi	r24, 0x28	; 40
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	28 e2       	ldi	r18, 0x28	; 40
    18cc:	30 e0       	ldi	r19, 0x00	; 0
    18ce:	f9 01       	movw	r30, r18
    18d0:	20 81       	ld	r18, Z
    18d2:	2b 7f       	andi	r18, 0xFB	; 251
    18d4:	fc 01       	movw	r30, r24
    18d6:	20 83       	st	Z, r18
    18d8:	80 e0       	ldi	r24, 0x00	; 0
    18da:	90 e0       	ldi	r25, 0x00	; 0
    18dc:	a0 e8       	ldi	r26, 0x80	; 128
    18de:	bf e3       	ldi	r27, 0x3F	; 63
    18e0:	89 8f       	std	Y+25, r24	; 0x19
    18e2:	9a 8f       	std	Y+26, r25	; 0x1a
    18e4:	ab 8f       	std	Y+27, r26	; 0x1b
    18e6:	bc 8f       	std	Y+28, r27	; 0x1c
    18e8:	26 e6       	ldi	r18, 0x66	; 102
    18ea:	36 e6       	ldi	r19, 0x66	; 102
    18ec:	46 e6       	ldi	r20, 0x66	; 102
    18ee:	55 e4       	ldi	r21, 0x45	; 69
    18f0:	69 8d       	ldd	r22, Y+25	; 0x19
    18f2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18f4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18f6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18f8:	02 d6       	rcall	.+3076   	; 0x24fe <__mulsf3>
    18fa:	dc 01       	movw	r26, r24
    18fc:	cb 01       	movw	r24, r22
    18fe:	8b a7       	std	Y+43, r24	; 0x2b
    1900:	9c a7       	std	Y+44, r25	; 0x2c
    1902:	ad a7       	std	Y+45, r26	; 0x2d
    1904:	be a7       	std	Y+46, r27	; 0x2e
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	40 e8       	ldi	r20, 0x80	; 128
    190c:	5f e3       	ldi	r21, 0x3F	; 63
    190e:	6b a5       	ldd	r22, Y+43	; 0x2b
    1910:	7c a5       	ldd	r23, Y+44	; 0x2c
    1912:	8d a5       	ldd	r24, Y+45	; 0x2d
    1914:	9e a5       	ldd	r25, Y+46	; 0x2e
    1916:	a5 d4       	rcall	.+2378   	; 0x2262 <__cmpsf2>
    1918:	88 23       	and	r24, r24
    191a:	2c f4       	brge	.+10     	; 0x1926 <lcd_set_4bit+0x942>
    191c:	81 e0       	ldi	r24, 0x01	; 1
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	98 ab       	std	Y+48, r25	; 0x30
    1922:	8f a7       	std	Y+47, r24	; 0x2f
    1924:	3b c0       	rjmp	.+118    	; 0x199c <lcd_set_4bit+0x9b8>
    1926:	20 e0       	ldi	r18, 0x00	; 0
    1928:	3f ef       	ldi	r19, 0xFF	; 255
    192a:	4f e7       	ldi	r20, 0x7F	; 127
    192c:	57 e4       	ldi	r21, 0x47	; 71
    192e:	6b a5       	ldd	r22, Y+43	; 0x2b
    1930:	7c a5       	ldd	r23, Y+44	; 0x2c
    1932:	8d a5       	ldd	r24, Y+45	; 0x2d
    1934:	9e a5       	ldd	r25, Y+46	; 0x2e
    1936:	df d5       	rcall	.+3006   	; 0x24f6 <__gesf2>
    1938:	18 16       	cp	r1, r24
    193a:	3c f5       	brge	.+78     	; 0x198a <lcd_set_4bit+0x9a6>
    193c:	20 e0       	ldi	r18, 0x00	; 0
    193e:	30 e0       	ldi	r19, 0x00	; 0
    1940:	40 e2       	ldi	r20, 0x20	; 32
    1942:	51 e4       	ldi	r21, 0x41	; 65
    1944:	69 8d       	ldd	r22, Y+25	; 0x19
    1946:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1948:	8b 8d       	ldd	r24, Y+27	; 0x1b
    194a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    194c:	d8 d5       	rcall	.+2992   	; 0x24fe <__mulsf3>
    194e:	dc 01       	movw	r26, r24
    1950:	cb 01       	movw	r24, r22
    1952:	bc 01       	movw	r22, r24
    1954:	cd 01       	movw	r24, r26
    1956:	f1 d4       	rcall	.+2530   	; 0x233a <__fixunssfsi>
    1958:	dc 01       	movw	r26, r24
    195a:	cb 01       	movw	r24, r22
    195c:	98 ab       	std	Y+48, r25	; 0x30
    195e:	8f a7       	std	Y+47, r24	; 0x2f
    1960:	0f c0       	rjmp	.+30     	; 0x1980 <lcd_set_4bit+0x99c>
    1962:	80 e7       	ldi	r24, 0x70	; 112
    1964:	91 e0       	ldi	r25, 0x01	; 1
    1966:	9a ab       	std	Y+50, r25	; 0x32
    1968:	89 ab       	std	Y+49, r24	; 0x31
    196a:	89 a9       	ldd	r24, Y+49	; 0x31
    196c:	9a a9       	ldd	r25, Y+50	; 0x32
    196e:	01 97       	sbiw	r24, 0x01	; 1
    1970:	f1 f7       	brne	.-4      	; 0x196e <lcd_set_4bit+0x98a>
    1972:	9a ab       	std	Y+50, r25	; 0x32
    1974:	89 ab       	std	Y+49, r24	; 0x31
    1976:	8f a5       	ldd	r24, Y+47	; 0x2f
    1978:	98 a9       	ldd	r25, Y+48	; 0x30
    197a:	01 97       	sbiw	r24, 0x01	; 1
    197c:	98 ab       	std	Y+48, r25	; 0x30
    197e:	8f a7       	std	Y+47, r24	; 0x2f
    1980:	8f a5       	ldd	r24, Y+47	; 0x2f
    1982:	98 a9       	ldd	r25, Y+48	; 0x30
    1984:	89 2b       	or	r24, r25
    1986:	69 f7       	brne	.-38     	; 0x1962 <lcd_set_4bit+0x97e>
    1988:	13 c0       	rjmp	.+38     	; 0x19b0 <lcd_set_4bit+0x9cc>
    198a:	6b a5       	ldd	r22, Y+43	; 0x2b
    198c:	7c a5       	ldd	r23, Y+44	; 0x2c
    198e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1990:	9e a5       	ldd	r25, Y+46	; 0x2e
    1992:	d3 d4       	rcall	.+2470   	; 0x233a <__fixunssfsi>
    1994:	dc 01       	movw	r26, r24
    1996:	cb 01       	movw	r24, r22
    1998:	98 ab       	std	Y+48, r25	; 0x30
    199a:	8f a7       	std	Y+47, r24	; 0x2f
    199c:	8f a5       	ldd	r24, Y+47	; 0x2f
    199e:	98 a9       	ldd	r25, Y+48	; 0x30
    19a0:	9c ab       	std	Y+52, r25	; 0x34
    19a2:	8b ab       	std	Y+51, r24	; 0x33
    19a4:	8b a9       	ldd	r24, Y+51	; 0x33
    19a6:	9c a9       	ldd	r25, Y+52	; 0x34
    19a8:	01 97       	sbiw	r24, 0x01	; 1
    19aa:	f1 f7       	brne	.-4      	; 0x19a8 <lcd_set_4bit+0x9c4>
    19ac:	9c ab       	std	Y+52, r25	; 0x34
    19ae:	8b ab       	std	Y+51, r24	; 0x33
    19b0:	88 e2       	ldi	r24, 0x28	; 40
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	28 e2       	ldi	r18, 0x28	; 40
    19b6:	30 e0       	ldi	r19, 0x00	; 0
    19b8:	f9 01       	movw	r30, r18
    19ba:	20 81       	ld	r18, Z
    19bc:	2e 7f       	andi	r18, 0xFE	; 254
    19be:	fc 01       	movw	r30, r24
    19c0:	20 83       	st	Z, r18
    19c2:	88 e2       	ldi	r24, 0x28	; 40
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	28 e2       	ldi	r18, 0x28	; 40
    19c8:	30 e0       	ldi	r19, 0x00	; 0
    19ca:	f9 01       	movw	r30, r18
    19cc:	20 81       	ld	r18, Z
    19ce:	2d 7f       	andi	r18, 0xFD	; 253
    19d0:	fc 01       	movw	r30, r24
    19d2:	20 83       	st	Z, r18
    19d4:	88 e2       	ldi	r24, 0x28	; 40
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	20 e2       	ldi	r18, 0x20	; 32
    19da:	fc 01       	movw	r30, r24
    19dc:	20 83       	st	Z, r18
    19de:	88 e2       	ldi	r24, 0x28	; 40
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	28 e2       	ldi	r18, 0x28	; 40
    19e4:	30 e0       	ldi	r19, 0x00	; 0
    19e6:	f9 01       	movw	r30, r18
    19e8:	20 81       	ld	r18, Z
    19ea:	24 60       	ori	r18, 0x04	; 4
    19ec:	fc 01       	movw	r30, r24
    19ee:	20 83       	st	Z, r18
    19f0:	80 e0       	ldi	r24, 0x00	; 0
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	a0 ea       	ldi	r26, 0xA0	; 160
    19f6:	b0 e4       	ldi	r27, 0x40	; 64
    19f8:	8d 8f       	std	Y+29, r24	; 0x1d
    19fa:	9e 8f       	std	Y+30, r25	; 0x1e
    19fc:	af 8f       	std	Y+31, r26	; 0x1f
    19fe:	b8 a3       	std	Y+32, r27	; 0x20
    1a00:	26 e6       	ldi	r18, 0x66	; 102
    1a02:	36 e6       	ldi	r19, 0x66	; 102
    1a04:	46 e6       	ldi	r20, 0x66	; 102
    1a06:	55 e4       	ldi	r21, 0x45	; 69
    1a08:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a0a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a0c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a0e:	98 a1       	ldd	r25, Y+32	; 0x20
    1a10:	76 d5       	rcall	.+2796   	; 0x24fe <__mulsf3>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	89 a3       	std	Y+33, r24	; 0x21
    1a18:	9a a3       	std	Y+34, r25	; 0x22
    1a1a:	ab a3       	std	Y+35, r26	; 0x23
    1a1c:	bc a3       	std	Y+36, r27	; 0x24
    1a1e:	20 e0       	ldi	r18, 0x00	; 0
    1a20:	30 e0       	ldi	r19, 0x00	; 0
    1a22:	40 e8       	ldi	r20, 0x80	; 128
    1a24:	5f e3       	ldi	r21, 0x3F	; 63
    1a26:	69 a1       	ldd	r22, Y+33	; 0x21
    1a28:	7a a1       	ldd	r23, Y+34	; 0x22
    1a2a:	8b a1       	ldd	r24, Y+35	; 0x23
    1a2c:	9c a1       	ldd	r25, Y+36	; 0x24
    1a2e:	19 d4       	rcall	.+2098   	; 0x2262 <__cmpsf2>
    1a30:	88 23       	and	r24, r24
    1a32:	2c f4       	brge	.+10     	; 0x1a3e <lcd_set_4bit+0xa5a>
    1a34:	81 e0       	ldi	r24, 0x01	; 1
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	9e a3       	std	Y+38, r25	; 0x26
    1a3a:	8d a3       	std	Y+37, r24	; 0x25
    1a3c:	3b c0       	rjmp	.+118    	; 0x1ab4 <lcd_set_4bit+0xad0>
    1a3e:	20 e0       	ldi	r18, 0x00	; 0
    1a40:	3f ef       	ldi	r19, 0xFF	; 255
    1a42:	4f e7       	ldi	r20, 0x7F	; 127
    1a44:	57 e4       	ldi	r21, 0x47	; 71
    1a46:	69 a1       	ldd	r22, Y+33	; 0x21
    1a48:	7a a1       	ldd	r23, Y+34	; 0x22
    1a4a:	8b a1       	ldd	r24, Y+35	; 0x23
    1a4c:	9c a1       	ldd	r25, Y+36	; 0x24
    1a4e:	53 d5       	rcall	.+2726   	; 0x24f6 <__gesf2>
    1a50:	18 16       	cp	r1, r24
    1a52:	3c f5       	brge	.+78     	; 0x1aa2 <lcd_set_4bit+0xabe>
    1a54:	20 e0       	ldi	r18, 0x00	; 0
    1a56:	30 e0       	ldi	r19, 0x00	; 0
    1a58:	40 e2       	ldi	r20, 0x20	; 32
    1a5a:	51 e4       	ldi	r21, 0x41	; 65
    1a5c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a5e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a60:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a62:	98 a1       	ldd	r25, Y+32	; 0x20
    1a64:	4c d5       	rcall	.+2712   	; 0x24fe <__mulsf3>
    1a66:	dc 01       	movw	r26, r24
    1a68:	cb 01       	movw	r24, r22
    1a6a:	bc 01       	movw	r22, r24
    1a6c:	cd 01       	movw	r24, r26
    1a6e:	65 d4       	rcall	.+2250   	; 0x233a <__fixunssfsi>
    1a70:	dc 01       	movw	r26, r24
    1a72:	cb 01       	movw	r24, r22
    1a74:	9e a3       	std	Y+38, r25	; 0x26
    1a76:	8d a3       	std	Y+37, r24	; 0x25
    1a78:	0f c0       	rjmp	.+30     	; 0x1a98 <lcd_set_4bit+0xab4>
    1a7a:	80 e7       	ldi	r24, 0x70	; 112
    1a7c:	91 e0       	ldi	r25, 0x01	; 1
    1a7e:	98 a7       	std	Y+40, r25	; 0x28
    1a80:	8f a3       	std	Y+39, r24	; 0x27
    1a82:	8f a1       	ldd	r24, Y+39	; 0x27
    1a84:	98 a5       	ldd	r25, Y+40	; 0x28
    1a86:	01 97       	sbiw	r24, 0x01	; 1
    1a88:	f1 f7       	brne	.-4      	; 0x1a86 <lcd_set_4bit+0xaa2>
    1a8a:	98 a7       	std	Y+40, r25	; 0x28
    1a8c:	8f a3       	std	Y+39, r24	; 0x27
    1a8e:	8d a1       	ldd	r24, Y+37	; 0x25
    1a90:	9e a1       	ldd	r25, Y+38	; 0x26
    1a92:	01 97       	sbiw	r24, 0x01	; 1
    1a94:	9e a3       	std	Y+38, r25	; 0x26
    1a96:	8d a3       	std	Y+37, r24	; 0x25
    1a98:	8d a1       	ldd	r24, Y+37	; 0x25
    1a9a:	9e a1       	ldd	r25, Y+38	; 0x26
    1a9c:	89 2b       	or	r24, r25
    1a9e:	69 f7       	brne	.-38     	; 0x1a7a <lcd_set_4bit+0xa96>
    1aa0:	13 c0       	rjmp	.+38     	; 0x1ac8 <lcd_set_4bit+0xae4>
    1aa2:	69 a1       	ldd	r22, Y+33	; 0x21
    1aa4:	7a a1       	ldd	r23, Y+34	; 0x22
    1aa6:	8b a1       	ldd	r24, Y+35	; 0x23
    1aa8:	9c a1       	ldd	r25, Y+36	; 0x24
    1aaa:	47 d4       	rcall	.+2190   	; 0x233a <__fixunssfsi>
    1aac:	dc 01       	movw	r26, r24
    1aae:	cb 01       	movw	r24, r22
    1ab0:	9e a3       	std	Y+38, r25	; 0x26
    1ab2:	8d a3       	std	Y+37, r24	; 0x25
    1ab4:	8d a1       	ldd	r24, Y+37	; 0x25
    1ab6:	9e a1       	ldd	r25, Y+38	; 0x26
    1ab8:	9a a7       	std	Y+42, r25	; 0x2a
    1aba:	89 a7       	std	Y+41, r24	; 0x29
    1abc:	89 a5       	ldd	r24, Y+41	; 0x29
    1abe:	9a a5       	ldd	r25, Y+42	; 0x2a
    1ac0:	01 97       	sbiw	r24, 0x01	; 1
    1ac2:	f1 f7       	brne	.-4      	; 0x1ac0 <lcd_set_4bit+0xadc>
    1ac4:	9a a7       	std	Y+42, r25	; 0x2a
    1ac6:	89 a7       	std	Y+41, r24	; 0x29
    1ac8:	88 e2       	ldi	r24, 0x28	; 40
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	28 e2       	ldi	r18, 0x28	; 40
    1ace:	30 e0       	ldi	r19, 0x00	; 0
    1ad0:	f9 01       	movw	r30, r18
    1ad2:	20 81       	ld	r18, Z
    1ad4:	2b 7f       	andi	r18, 0xFB	; 251
    1ad6:	fc 01       	movw	r30, r24
    1ad8:	20 83       	st	Z, r18
    1ada:	00 00       	nop
    1adc:	c0 59       	subi	r28, 0x90	; 144
    1ade:	df 4f       	sbci	r29, 0xFF	; 255
    1ae0:	0f b6       	in	r0, 0x3f	; 63
    1ae2:	f8 94       	cli
    1ae4:	de bf       	out	0x3e, r29	; 62
    1ae6:	0f be       	out	0x3f, r0	; 63
    1ae8:	cd bf       	out	0x3d, r28	; 61
    1aea:	df 91       	pop	r29
    1aec:	cf 91       	pop	r28
    1aee:	1f 91       	pop	r17
    1af0:	0f 91       	pop	r16
    1af2:	08 95       	ret

00001af4 <lcd_wr_command>:
    1af4:	cf 93       	push	r28
    1af6:	df 93       	push	r29
    1af8:	cd b7       	in	r28, 0x3d	; 61
    1afa:	de b7       	in	r29, 0x3e	; 62
    1afc:	6e 97       	sbiw	r28, 0x1e	; 30
    1afe:	0f b6       	in	r0, 0x3f	; 63
    1b00:	f8 94       	cli
    1b02:	de bf       	out	0x3e, r29	; 62
    1b04:	0f be       	out	0x3f, r0	; 63
    1b06:	cd bf       	out	0x3d, r28	; 61
    1b08:	8e 8f       	std	Y+30, r24	; 0x1e
    1b0a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1b0c:	89 83       	std	Y+1, r24	; 0x01
    1b0e:	89 81       	ldd	r24, Y+1	; 0x01
    1b10:	80 7f       	andi	r24, 0xF0	; 240
    1b12:	89 83       	std	Y+1, r24	; 0x01
    1b14:	88 e2       	ldi	r24, 0x28	; 40
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	28 e2       	ldi	r18, 0x28	; 40
    1b1a:	30 e0       	ldi	r19, 0x00	; 0
    1b1c:	f9 01       	movw	r30, r18
    1b1e:	20 81       	ld	r18, Z
    1b20:	2f 70       	andi	r18, 0x0F	; 15
    1b22:	fc 01       	movw	r30, r24
    1b24:	20 83       	st	Z, r18
    1b26:	88 e2       	ldi	r24, 0x28	; 40
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	28 e2       	ldi	r18, 0x28	; 40
    1b2c:	30 e0       	ldi	r19, 0x00	; 0
    1b2e:	f9 01       	movw	r30, r18
    1b30:	30 81       	ld	r19, Z
    1b32:	29 81       	ldd	r18, Y+1	; 0x01
    1b34:	23 2b       	or	r18, r19
    1b36:	fc 01       	movw	r30, r24
    1b38:	20 83       	st	Z, r18
    1b3a:	88 e2       	ldi	r24, 0x28	; 40
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	28 e2       	ldi	r18, 0x28	; 40
    1b40:	30 e0       	ldi	r19, 0x00	; 0
    1b42:	f9 01       	movw	r30, r18
    1b44:	20 81       	ld	r18, Z
    1b46:	2e 7f       	andi	r18, 0xFE	; 254
    1b48:	fc 01       	movw	r30, r24
    1b4a:	20 83       	st	Z, r18
    1b4c:	88 e2       	ldi	r24, 0x28	; 40
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	28 e2       	ldi	r18, 0x28	; 40
    1b52:	30 e0       	ldi	r19, 0x00	; 0
    1b54:	f9 01       	movw	r30, r18
    1b56:	20 81       	ld	r18, Z
    1b58:	2d 7f       	andi	r18, 0xFD	; 253
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	20 83       	st	Z, r18
    1b5e:	88 e2       	ldi	r24, 0x28	; 40
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	28 e2       	ldi	r18, 0x28	; 40
    1b64:	30 e0       	ldi	r19, 0x00	; 0
    1b66:	f9 01       	movw	r30, r18
    1b68:	20 81       	ld	r18, Z
    1b6a:	24 60       	ori	r18, 0x04	; 4
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	20 83       	st	Z, r18
    1b70:	80 e0       	ldi	r24, 0x00	; 0
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	a0 ea       	ldi	r26, 0xA0	; 160
    1b76:	b0 e4       	ldi	r27, 0x40	; 64
    1b78:	8a 83       	std	Y+2, r24	; 0x02
    1b7a:	9b 83       	std	Y+3, r25	; 0x03
    1b7c:	ac 83       	std	Y+4, r26	; 0x04
    1b7e:	bd 83       	std	Y+5, r27	; 0x05
    1b80:	26 e6       	ldi	r18, 0x66	; 102
    1b82:	36 e6       	ldi	r19, 0x66	; 102
    1b84:	46 e6       	ldi	r20, 0x66	; 102
    1b86:	55 e4       	ldi	r21, 0x45	; 69
    1b88:	6a 81       	ldd	r22, Y+2	; 0x02
    1b8a:	7b 81       	ldd	r23, Y+3	; 0x03
    1b8c:	8c 81       	ldd	r24, Y+4	; 0x04
    1b8e:	9d 81       	ldd	r25, Y+5	; 0x05
    1b90:	b6 d4       	rcall	.+2412   	; 0x24fe <__mulsf3>
    1b92:	dc 01       	movw	r26, r24
    1b94:	cb 01       	movw	r24, r22
    1b96:	8c 8b       	std	Y+20, r24	; 0x14
    1b98:	9d 8b       	std	Y+21, r25	; 0x15
    1b9a:	ae 8b       	std	Y+22, r26	; 0x16
    1b9c:	bf 8b       	std	Y+23, r27	; 0x17
    1b9e:	20 e0       	ldi	r18, 0x00	; 0
    1ba0:	30 e0       	ldi	r19, 0x00	; 0
    1ba2:	40 e8       	ldi	r20, 0x80	; 128
    1ba4:	5f e3       	ldi	r21, 0x3F	; 63
    1ba6:	6c 89       	ldd	r22, Y+20	; 0x14
    1ba8:	7d 89       	ldd	r23, Y+21	; 0x15
    1baa:	8e 89       	ldd	r24, Y+22	; 0x16
    1bac:	9f 89       	ldd	r25, Y+23	; 0x17
    1bae:	59 d3       	rcall	.+1714   	; 0x2262 <__cmpsf2>
    1bb0:	88 23       	and	r24, r24
    1bb2:	2c f4       	brge	.+10     	; 0x1bbe <lcd_wr_command+0xca>
    1bb4:	81 e0       	ldi	r24, 0x01	; 1
    1bb6:	90 e0       	ldi	r25, 0x00	; 0
    1bb8:	99 8f       	std	Y+25, r25	; 0x19
    1bba:	88 8f       	std	Y+24, r24	; 0x18
    1bbc:	3b c0       	rjmp	.+118    	; 0x1c34 <lcd_wr_command+0x140>
    1bbe:	20 e0       	ldi	r18, 0x00	; 0
    1bc0:	3f ef       	ldi	r19, 0xFF	; 255
    1bc2:	4f e7       	ldi	r20, 0x7F	; 127
    1bc4:	57 e4       	ldi	r21, 0x47	; 71
    1bc6:	6c 89       	ldd	r22, Y+20	; 0x14
    1bc8:	7d 89       	ldd	r23, Y+21	; 0x15
    1bca:	8e 89       	ldd	r24, Y+22	; 0x16
    1bcc:	9f 89       	ldd	r25, Y+23	; 0x17
    1bce:	93 d4       	rcall	.+2342   	; 0x24f6 <__gesf2>
    1bd0:	18 16       	cp	r1, r24
    1bd2:	3c f5       	brge	.+78     	; 0x1c22 <lcd_wr_command+0x12e>
    1bd4:	20 e0       	ldi	r18, 0x00	; 0
    1bd6:	30 e0       	ldi	r19, 0x00	; 0
    1bd8:	40 e2       	ldi	r20, 0x20	; 32
    1bda:	51 e4       	ldi	r21, 0x41	; 65
    1bdc:	6a 81       	ldd	r22, Y+2	; 0x02
    1bde:	7b 81       	ldd	r23, Y+3	; 0x03
    1be0:	8c 81       	ldd	r24, Y+4	; 0x04
    1be2:	9d 81       	ldd	r25, Y+5	; 0x05
    1be4:	8c d4       	rcall	.+2328   	; 0x24fe <__mulsf3>
    1be6:	dc 01       	movw	r26, r24
    1be8:	cb 01       	movw	r24, r22
    1bea:	bc 01       	movw	r22, r24
    1bec:	cd 01       	movw	r24, r26
    1bee:	a5 d3       	rcall	.+1866   	; 0x233a <__fixunssfsi>
    1bf0:	dc 01       	movw	r26, r24
    1bf2:	cb 01       	movw	r24, r22
    1bf4:	99 8f       	std	Y+25, r25	; 0x19
    1bf6:	88 8f       	std	Y+24, r24	; 0x18
    1bf8:	0f c0       	rjmp	.+30     	; 0x1c18 <lcd_wr_command+0x124>
    1bfa:	80 e7       	ldi	r24, 0x70	; 112
    1bfc:	91 e0       	ldi	r25, 0x01	; 1
    1bfe:	9b 8f       	std	Y+27, r25	; 0x1b
    1c00:	8a 8f       	std	Y+26, r24	; 0x1a
    1c02:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1c04:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1c06:	01 97       	sbiw	r24, 0x01	; 1
    1c08:	f1 f7       	brne	.-4      	; 0x1c06 <lcd_wr_command+0x112>
    1c0a:	9b 8f       	std	Y+27, r25	; 0x1b
    1c0c:	8a 8f       	std	Y+26, r24	; 0x1a
    1c0e:	88 8d       	ldd	r24, Y+24	; 0x18
    1c10:	99 8d       	ldd	r25, Y+25	; 0x19
    1c12:	01 97       	sbiw	r24, 0x01	; 1
    1c14:	99 8f       	std	Y+25, r25	; 0x19
    1c16:	88 8f       	std	Y+24, r24	; 0x18
    1c18:	88 8d       	ldd	r24, Y+24	; 0x18
    1c1a:	99 8d       	ldd	r25, Y+25	; 0x19
    1c1c:	89 2b       	or	r24, r25
    1c1e:	69 f7       	brne	.-38     	; 0x1bfa <lcd_wr_command+0x106>
    1c20:	13 c0       	rjmp	.+38     	; 0x1c48 <lcd_wr_command+0x154>
    1c22:	6c 89       	ldd	r22, Y+20	; 0x14
    1c24:	7d 89       	ldd	r23, Y+21	; 0x15
    1c26:	8e 89       	ldd	r24, Y+22	; 0x16
    1c28:	9f 89       	ldd	r25, Y+23	; 0x17
    1c2a:	87 d3       	rcall	.+1806   	; 0x233a <__fixunssfsi>
    1c2c:	dc 01       	movw	r26, r24
    1c2e:	cb 01       	movw	r24, r22
    1c30:	99 8f       	std	Y+25, r25	; 0x19
    1c32:	88 8f       	std	Y+24, r24	; 0x18
    1c34:	88 8d       	ldd	r24, Y+24	; 0x18
    1c36:	99 8d       	ldd	r25, Y+25	; 0x19
    1c38:	9d 8f       	std	Y+29, r25	; 0x1d
    1c3a:	8c 8f       	std	Y+28, r24	; 0x1c
    1c3c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1c3e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1c40:	01 97       	sbiw	r24, 0x01	; 1
    1c42:	f1 f7       	brne	.-4      	; 0x1c40 <lcd_wr_command+0x14c>
    1c44:	9d 8f       	std	Y+29, r25	; 0x1d
    1c46:	8c 8f       	std	Y+28, r24	; 0x1c
    1c48:	88 e2       	ldi	r24, 0x28	; 40
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	28 e2       	ldi	r18, 0x28	; 40
    1c4e:	30 e0       	ldi	r19, 0x00	; 0
    1c50:	f9 01       	movw	r30, r18
    1c52:	20 81       	ld	r18, Z
    1c54:	2b 7f       	andi	r18, 0xFB	; 251
    1c56:	fc 01       	movw	r30, r24
    1c58:	20 83       	st	Z, r18
    1c5a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1c5c:	8f 70       	andi	r24, 0x0F	; 15
    1c5e:	8e 8f       	std	Y+30, r24	; 0x1e
    1c60:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1c62:	82 95       	swap	r24
    1c64:	80 7f       	andi	r24, 0xF0	; 240
    1c66:	8e 8f       	std	Y+30, r24	; 0x1e
    1c68:	88 e2       	ldi	r24, 0x28	; 40
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	28 e2       	ldi	r18, 0x28	; 40
    1c6e:	30 e0       	ldi	r19, 0x00	; 0
    1c70:	f9 01       	movw	r30, r18
    1c72:	20 81       	ld	r18, Z
    1c74:	2f 70       	andi	r18, 0x0F	; 15
    1c76:	fc 01       	movw	r30, r24
    1c78:	20 83       	st	Z, r18
    1c7a:	88 e2       	ldi	r24, 0x28	; 40
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	28 e2       	ldi	r18, 0x28	; 40
    1c80:	30 e0       	ldi	r19, 0x00	; 0
    1c82:	f9 01       	movw	r30, r18
    1c84:	30 81       	ld	r19, Z
    1c86:	2e 8d       	ldd	r18, Y+30	; 0x1e
    1c88:	23 2b       	or	r18, r19
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	20 83       	st	Z, r18
    1c8e:	88 e2       	ldi	r24, 0x28	; 40
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	28 e2       	ldi	r18, 0x28	; 40
    1c94:	30 e0       	ldi	r19, 0x00	; 0
    1c96:	f9 01       	movw	r30, r18
    1c98:	20 81       	ld	r18, Z
    1c9a:	2e 7f       	andi	r18, 0xFE	; 254
    1c9c:	fc 01       	movw	r30, r24
    1c9e:	20 83       	st	Z, r18
    1ca0:	88 e2       	ldi	r24, 0x28	; 40
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	28 e2       	ldi	r18, 0x28	; 40
    1ca6:	30 e0       	ldi	r19, 0x00	; 0
    1ca8:	f9 01       	movw	r30, r18
    1caa:	20 81       	ld	r18, Z
    1cac:	2d 7f       	andi	r18, 0xFD	; 253
    1cae:	fc 01       	movw	r30, r24
    1cb0:	20 83       	st	Z, r18
    1cb2:	88 e2       	ldi	r24, 0x28	; 40
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	28 e2       	ldi	r18, 0x28	; 40
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	f9 01       	movw	r30, r18
    1cbc:	20 81       	ld	r18, Z
    1cbe:	24 60       	ori	r18, 0x04	; 4
    1cc0:	fc 01       	movw	r30, r24
    1cc2:	20 83       	st	Z, r18
    1cc4:	80 e0       	ldi	r24, 0x00	; 0
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	a0 ea       	ldi	r26, 0xA0	; 160
    1cca:	b0 e4       	ldi	r27, 0x40	; 64
    1ccc:	8e 83       	std	Y+6, r24	; 0x06
    1cce:	9f 83       	std	Y+7, r25	; 0x07
    1cd0:	a8 87       	std	Y+8, r26	; 0x08
    1cd2:	b9 87       	std	Y+9, r27	; 0x09
    1cd4:	26 e6       	ldi	r18, 0x66	; 102
    1cd6:	36 e6       	ldi	r19, 0x66	; 102
    1cd8:	46 e6       	ldi	r20, 0x66	; 102
    1cda:	55 e4       	ldi	r21, 0x45	; 69
    1cdc:	6e 81       	ldd	r22, Y+6	; 0x06
    1cde:	7f 81       	ldd	r23, Y+7	; 0x07
    1ce0:	88 85       	ldd	r24, Y+8	; 0x08
    1ce2:	99 85       	ldd	r25, Y+9	; 0x09
    1ce4:	0c d4       	rcall	.+2072   	; 0x24fe <__mulsf3>
    1ce6:	dc 01       	movw	r26, r24
    1ce8:	cb 01       	movw	r24, r22
    1cea:	8a 87       	std	Y+10, r24	; 0x0a
    1cec:	9b 87       	std	Y+11, r25	; 0x0b
    1cee:	ac 87       	std	Y+12, r26	; 0x0c
    1cf0:	bd 87       	std	Y+13, r27	; 0x0d
    1cf2:	20 e0       	ldi	r18, 0x00	; 0
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	40 e8       	ldi	r20, 0x80	; 128
    1cf8:	5f e3       	ldi	r21, 0x3F	; 63
    1cfa:	6a 85       	ldd	r22, Y+10	; 0x0a
    1cfc:	7b 85       	ldd	r23, Y+11	; 0x0b
    1cfe:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d00:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d02:	af d2       	rcall	.+1374   	; 0x2262 <__cmpsf2>
    1d04:	88 23       	and	r24, r24
    1d06:	2c f4       	brge	.+10     	; 0x1d12 <lcd_wr_command+0x21e>
    1d08:	81 e0       	ldi	r24, 0x01	; 1
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	9f 87       	std	Y+15, r25	; 0x0f
    1d0e:	8e 87       	std	Y+14, r24	; 0x0e
    1d10:	3b c0       	rjmp	.+118    	; 0x1d88 <lcd_wr_command+0x294>
    1d12:	20 e0       	ldi	r18, 0x00	; 0
    1d14:	3f ef       	ldi	r19, 0xFF	; 255
    1d16:	4f e7       	ldi	r20, 0x7F	; 127
    1d18:	57 e4       	ldi	r21, 0x47	; 71
    1d1a:	6a 85       	ldd	r22, Y+10	; 0x0a
    1d1c:	7b 85       	ldd	r23, Y+11	; 0x0b
    1d1e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d20:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d22:	e9 d3       	rcall	.+2002   	; 0x24f6 <__gesf2>
    1d24:	18 16       	cp	r1, r24
    1d26:	3c f5       	brge	.+78     	; 0x1d76 <lcd_wr_command+0x282>
    1d28:	20 e0       	ldi	r18, 0x00	; 0
    1d2a:	30 e0       	ldi	r19, 0x00	; 0
    1d2c:	40 e2       	ldi	r20, 0x20	; 32
    1d2e:	51 e4       	ldi	r21, 0x41	; 65
    1d30:	6e 81       	ldd	r22, Y+6	; 0x06
    1d32:	7f 81       	ldd	r23, Y+7	; 0x07
    1d34:	88 85       	ldd	r24, Y+8	; 0x08
    1d36:	99 85       	ldd	r25, Y+9	; 0x09
    1d38:	e2 d3       	rcall	.+1988   	; 0x24fe <__mulsf3>
    1d3a:	dc 01       	movw	r26, r24
    1d3c:	cb 01       	movw	r24, r22
    1d3e:	bc 01       	movw	r22, r24
    1d40:	cd 01       	movw	r24, r26
    1d42:	fb d2       	rcall	.+1526   	; 0x233a <__fixunssfsi>
    1d44:	dc 01       	movw	r26, r24
    1d46:	cb 01       	movw	r24, r22
    1d48:	9f 87       	std	Y+15, r25	; 0x0f
    1d4a:	8e 87       	std	Y+14, r24	; 0x0e
    1d4c:	0f c0       	rjmp	.+30     	; 0x1d6c <lcd_wr_command+0x278>
    1d4e:	80 e7       	ldi	r24, 0x70	; 112
    1d50:	91 e0       	ldi	r25, 0x01	; 1
    1d52:	99 8b       	std	Y+17, r25	; 0x11
    1d54:	88 8b       	std	Y+16, r24	; 0x10
    1d56:	88 89       	ldd	r24, Y+16	; 0x10
    1d58:	99 89       	ldd	r25, Y+17	; 0x11
    1d5a:	01 97       	sbiw	r24, 0x01	; 1
    1d5c:	f1 f7       	brne	.-4      	; 0x1d5a <lcd_wr_command+0x266>
    1d5e:	99 8b       	std	Y+17, r25	; 0x11
    1d60:	88 8b       	std	Y+16, r24	; 0x10
    1d62:	8e 85       	ldd	r24, Y+14	; 0x0e
    1d64:	9f 85       	ldd	r25, Y+15	; 0x0f
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	9f 87       	std	Y+15, r25	; 0x0f
    1d6a:	8e 87       	std	Y+14, r24	; 0x0e
    1d6c:	8e 85       	ldd	r24, Y+14	; 0x0e
    1d6e:	9f 85       	ldd	r25, Y+15	; 0x0f
    1d70:	89 2b       	or	r24, r25
    1d72:	69 f7       	brne	.-38     	; 0x1d4e <lcd_wr_command+0x25a>
    1d74:	13 c0       	rjmp	.+38     	; 0x1d9c <lcd_wr_command+0x2a8>
    1d76:	6a 85       	ldd	r22, Y+10	; 0x0a
    1d78:	7b 85       	ldd	r23, Y+11	; 0x0b
    1d7a:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d7c:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d7e:	dd d2       	rcall	.+1466   	; 0x233a <__fixunssfsi>
    1d80:	dc 01       	movw	r26, r24
    1d82:	cb 01       	movw	r24, r22
    1d84:	9f 87       	std	Y+15, r25	; 0x0f
    1d86:	8e 87       	std	Y+14, r24	; 0x0e
    1d88:	8e 85       	ldd	r24, Y+14	; 0x0e
    1d8a:	9f 85       	ldd	r25, Y+15	; 0x0f
    1d8c:	9b 8b       	std	Y+19, r25	; 0x13
    1d8e:	8a 8b       	std	Y+18, r24	; 0x12
    1d90:	8a 89       	ldd	r24, Y+18	; 0x12
    1d92:	9b 89       	ldd	r25, Y+19	; 0x13
    1d94:	01 97       	sbiw	r24, 0x01	; 1
    1d96:	f1 f7       	brne	.-4      	; 0x1d94 <lcd_wr_command+0x2a0>
    1d98:	9b 8b       	std	Y+19, r25	; 0x13
    1d9a:	8a 8b       	std	Y+18, r24	; 0x12
    1d9c:	88 e2       	ldi	r24, 0x28	; 40
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	28 e2       	ldi	r18, 0x28	; 40
    1da2:	30 e0       	ldi	r19, 0x00	; 0
    1da4:	f9 01       	movw	r30, r18
    1da6:	20 81       	ld	r18, Z
    1da8:	2b 7f       	andi	r18, 0xFB	; 251
    1daa:	fc 01       	movw	r30, r24
    1dac:	20 83       	st	Z, r18
    1dae:	00 00       	nop
    1db0:	6e 96       	adiw	r28, 0x1e	; 30
    1db2:	0f b6       	in	r0, 0x3f	; 63
    1db4:	f8 94       	cli
    1db6:	de bf       	out	0x3e, r29	; 62
    1db8:	0f be       	out	0x3f, r0	; 63
    1dba:	cd bf       	out	0x3d, r28	; 61
    1dbc:	df 91       	pop	r29
    1dbe:	cf 91       	pop	r28
    1dc0:	08 95       	ret

00001dc2 <lcd_init>:
    1dc2:	cf 93       	push	r28
    1dc4:	df 93       	push	r29
    1dc6:	cd b7       	in	r28, 0x3d	; 61
    1dc8:	de b7       	in	r29, 0x3e	; 62
    1dca:	2e 97       	sbiw	r28, 0x0e	; 14
    1dcc:	0f b6       	in	r0, 0x3f	; 63
    1dce:	f8 94       	cli
    1dd0:	de bf       	out	0x3e, r29	; 62
    1dd2:	0f be       	out	0x3f, r0	; 63
    1dd4:	cd bf       	out	0x3d, r28	; 61
    1dd6:	06 d9       	rcall	.-3572   	; 0xfe4 <lcd_set_4bit>
    1dd8:	80 e0       	ldi	r24, 0x00	; 0
    1dda:	90 e0       	ldi	r25, 0x00	; 0
    1ddc:	a0 e8       	ldi	r26, 0x80	; 128
    1dde:	bf e3       	ldi	r27, 0x3F	; 63
    1de0:	89 83       	std	Y+1, r24	; 0x01
    1de2:	9a 83       	std	Y+2, r25	; 0x02
    1de4:	ab 83       	std	Y+3, r26	; 0x03
    1de6:	bc 83       	std	Y+4, r27	; 0x04
    1de8:	26 e6       	ldi	r18, 0x66	; 102
    1dea:	36 e6       	ldi	r19, 0x66	; 102
    1dec:	46 e6       	ldi	r20, 0x66	; 102
    1dee:	55 e4       	ldi	r21, 0x45	; 69
    1df0:	69 81       	ldd	r22, Y+1	; 0x01
    1df2:	7a 81       	ldd	r23, Y+2	; 0x02
    1df4:	8b 81       	ldd	r24, Y+3	; 0x03
    1df6:	9c 81       	ldd	r25, Y+4	; 0x04
    1df8:	82 d3       	rcall	.+1796   	; 0x24fe <__mulsf3>
    1dfa:	dc 01       	movw	r26, r24
    1dfc:	cb 01       	movw	r24, r22
    1dfe:	8d 83       	std	Y+5, r24	; 0x05
    1e00:	9e 83       	std	Y+6, r25	; 0x06
    1e02:	af 83       	std	Y+7, r26	; 0x07
    1e04:	b8 87       	std	Y+8, r27	; 0x08
    1e06:	20 e0       	ldi	r18, 0x00	; 0
    1e08:	30 e0       	ldi	r19, 0x00	; 0
    1e0a:	40 e8       	ldi	r20, 0x80	; 128
    1e0c:	5f e3       	ldi	r21, 0x3F	; 63
    1e0e:	6d 81       	ldd	r22, Y+5	; 0x05
    1e10:	7e 81       	ldd	r23, Y+6	; 0x06
    1e12:	8f 81       	ldd	r24, Y+7	; 0x07
    1e14:	98 85       	ldd	r25, Y+8	; 0x08
    1e16:	25 d2       	rcall	.+1098   	; 0x2262 <__cmpsf2>
    1e18:	88 23       	and	r24, r24
    1e1a:	2c f4       	brge	.+10     	; 0x1e26 <lcd_init+0x64>
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	9a 87       	std	Y+10, r25	; 0x0a
    1e22:	89 87       	std	Y+9, r24	; 0x09
    1e24:	3b c0       	rjmp	.+118    	; 0x1e9c <lcd_init+0xda>
    1e26:	20 e0       	ldi	r18, 0x00	; 0
    1e28:	3f ef       	ldi	r19, 0xFF	; 255
    1e2a:	4f e7       	ldi	r20, 0x7F	; 127
    1e2c:	57 e4       	ldi	r21, 0x47	; 71
    1e2e:	6d 81       	ldd	r22, Y+5	; 0x05
    1e30:	7e 81       	ldd	r23, Y+6	; 0x06
    1e32:	8f 81       	ldd	r24, Y+7	; 0x07
    1e34:	98 85       	ldd	r25, Y+8	; 0x08
    1e36:	5f d3       	rcall	.+1726   	; 0x24f6 <__gesf2>
    1e38:	18 16       	cp	r1, r24
    1e3a:	3c f5       	brge	.+78     	; 0x1e8a <lcd_init+0xc8>
    1e3c:	20 e0       	ldi	r18, 0x00	; 0
    1e3e:	30 e0       	ldi	r19, 0x00	; 0
    1e40:	40 e2       	ldi	r20, 0x20	; 32
    1e42:	51 e4       	ldi	r21, 0x41	; 65
    1e44:	69 81       	ldd	r22, Y+1	; 0x01
    1e46:	7a 81       	ldd	r23, Y+2	; 0x02
    1e48:	8b 81       	ldd	r24, Y+3	; 0x03
    1e4a:	9c 81       	ldd	r25, Y+4	; 0x04
    1e4c:	58 d3       	rcall	.+1712   	; 0x24fe <__mulsf3>
    1e4e:	dc 01       	movw	r26, r24
    1e50:	cb 01       	movw	r24, r22
    1e52:	bc 01       	movw	r22, r24
    1e54:	cd 01       	movw	r24, r26
    1e56:	71 d2       	rcall	.+1250   	; 0x233a <__fixunssfsi>
    1e58:	dc 01       	movw	r26, r24
    1e5a:	cb 01       	movw	r24, r22
    1e5c:	9a 87       	std	Y+10, r25	; 0x0a
    1e5e:	89 87       	std	Y+9, r24	; 0x09
    1e60:	0f c0       	rjmp	.+30     	; 0x1e80 <lcd_init+0xbe>
    1e62:	80 e7       	ldi	r24, 0x70	; 112
    1e64:	91 e0       	ldi	r25, 0x01	; 1
    1e66:	9c 87       	std	Y+12, r25	; 0x0c
    1e68:	8b 87       	std	Y+11, r24	; 0x0b
    1e6a:	8b 85       	ldd	r24, Y+11	; 0x0b
    1e6c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e6e:	01 97       	sbiw	r24, 0x01	; 1
    1e70:	f1 f7       	brne	.-4      	; 0x1e6e <lcd_init+0xac>
    1e72:	9c 87       	std	Y+12, r25	; 0x0c
    1e74:	8b 87       	std	Y+11, r24	; 0x0b
    1e76:	89 85       	ldd	r24, Y+9	; 0x09
    1e78:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e7a:	01 97       	sbiw	r24, 0x01	; 1
    1e7c:	9a 87       	std	Y+10, r25	; 0x0a
    1e7e:	89 87       	std	Y+9, r24	; 0x09
    1e80:	89 85       	ldd	r24, Y+9	; 0x09
    1e82:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e84:	89 2b       	or	r24, r25
    1e86:	69 f7       	brne	.-38     	; 0x1e62 <lcd_init+0xa0>
    1e88:	13 c0       	rjmp	.+38     	; 0x1eb0 <lcd_init+0xee>
    1e8a:	6d 81       	ldd	r22, Y+5	; 0x05
    1e8c:	7e 81       	ldd	r23, Y+6	; 0x06
    1e8e:	8f 81       	ldd	r24, Y+7	; 0x07
    1e90:	98 85       	ldd	r25, Y+8	; 0x08
    1e92:	53 d2       	rcall	.+1190   	; 0x233a <__fixunssfsi>
    1e94:	dc 01       	movw	r26, r24
    1e96:	cb 01       	movw	r24, r22
    1e98:	9a 87       	std	Y+10, r25	; 0x0a
    1e9a:	89 87       	std	Y+9, r24	; 0x09
    1e9c:	89 85       	ldd	r24, Y+9	; 0x09
    1e9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ea0:	9e 87       	std	Y+14, r25	; 0x0e
    1ea2:	8d 87       	std	Y+13, r24	; 0x0d
    1ea4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ea6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ea8:	01 97       	sbiw	r24, 0x01	; 1
    1eaa:	f1 f7       	brne	.-4      	; 0x1ea8 <lcd_init+0xe6>
    1eac:	9e 87       	std	Y+14, r25	; 0x0e
    1eae:	8d 87       	std	Y+13, r24	; 0x0d
    1eb0:	88 e2       	ldi	r24, 0x28	; 40
    1eb2:	20 de       	rcall	.-960    	; 0x1af4 <lcd_wr_command>
    1eb4:	81 e0       	ldi	r24, 0x01	; 1
    1eb6:	1e de       	rcall	.-964    	; 0x1af4 <lcd_wr_command>
    1eb8:	86 e0       	ldi	r24, 0x06	; 6
    1eba:	1c de       	rcall	.-968    	; 0x1af4 <lcd_wr_command>
    1ebc:	8e e0       	ldi	r24, 0x0E	; 14
    1ebe:	1a de       	rcall	.-972    	; 0x1af4 <lcd_wr_command>
    1ec0:	80 e8       	ldi	r24, 0x80	; 128
    1ec2:	18 de       	rcall	.-976    	; 0x1af4 <lcd_wr_command>
    1ec4:	00 00       	nop
    1ec6:	2e 96       	adiw	r28, 0x0e	; 14
    1ec8:	0f b6       	in	r0, 0x3f	; 63
    1eca:	f8 94       	cli
    1ecc:	de bf       	out	0x3e, r29	; 62
    1ece:	0f be       	out	0x3f, r0	; 63
    1ed0:	cd bf       	out	0x3d, r28	; 61
    1ed2:	df 91       	pop	r29
    1ed4:	cf 91       	pop	r28
    1ed6:	08 95       	ret

00001ed8 <lcd_cursor>:
    1ed8:	cf 93       	push	r28
    1eda:	df 93       	push	r29
    1edc:	1f 92       	push	r1
    1ede:	1f 92       	push	r1
    1ee0:	cd b7       	in	r28, 0x3d	; 61
    1ee2:	de b7       	in	r29, 0x3e	; 62
    1ee4:	89 83       	std	Y+1, r24	; 0x01
    1ee6:	6a 83       	std	Y+2, r22	; 0x02
    1ee8:	89 81       	ldd	r24, Y+1	; 0x01
    1eea:	88 2f       	mov	r24, r24
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	82 30       	cpi	r24, 0x02	; 2
    1ef0:	91 05       	cpc	r25, r1
    1ef2:	81 f0       	breq	.+32     	; 0x1f14 <lcd_cursor+0x3c>
    1ef4:	83 30       	cpi	r24, 0x03	; 3
    1ef6:	91 05       	cpc	r25, r1
    1ef8:	1c f4       	brge	.+6      	; 0x1f00 <lcd_cursor+0x28>
    1efa:	01 97       	sbiw	r24, 0x01	; 1
    1efc:	39 f0       	breq	.+14     	; 0x1f0c <lcd_cursor+0x34>
    1efe:	16 c0       	rjmp	.+44     	; 0x1f2c <lcd_cursor+0x54>
    1f00:	83 30       	cpi	r24, 0x03	; 3
    1f02:	91 05       	cpc	r25, r1
    1f04:	59 f0       	breq	.+22     	; 0x1f1c <lcd_cursor+0x44>
    1f06:	04 97       	sbiw	r24, 0x04	; 4
    1f08:	69 f0       	breq	.+26     	; 0x1f24 <lcd_cursor+0x4c>
    1f0a:	10 c0       	rjmp	.+32     	; 0x1f2c <lcd_cursor+0x54>
    1f0c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f0e:	81 58       	subi	r24, 0x81	; 129
    1f10:	f1 dd       	rcall	.-1054   	; 0x1af4 <lcd_wr_command>
    1f12:	0c c0       	rjmp	.+24     	; 0x1f2c <lcd_cursor+0x54>
    1f14:	8a 81       	ldd	r24, Y+2	; 0x02
    1f16:	81 54       	subi	r24, 0x41	; 65
    1f18:	ed dd       	rcall	.-1062   	; 0x1af4 <lcd_wr_command>
    1f1a:	08 c0       	rjmp	.+16     	; 0x1f2c <lcd_cursor+0x54>
    1f1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f1e:	8d 56       	subi	r24, 0x6D	; 109
    1f20:	e9 dd       	rcall	.-1070   	; 0x1af4 <lcd_wr_command>
    1f22:	04 c0       	rjmp	.+8      	; 0x1f2c <lcd_cursor+0x54>
    1f24:	8a 81       	ldd	r24, Y+2	; 0x02
    1f26:	8d 52       	subi	r24, 0x2D	; 45
    1f28:	e5 dd       	rcall	.-1078   	; 0x1af4 <lcd_wr_command>
    1f2a:	00 00       	nop
    1f2c:	00 00       	nop
    1f2e:	0f 90       	pop	r0
    1f30:	0f 90       	pop	r0
    1f32:	df 91       	pop	r29
    1f34:	cf 91       	pop	r28
    1f36:	08 95       	ret

00001f38 <lcd_wr_char>:
 * Output: None
 * Logic: This function prints an alpha-numeric character at specified (row, column) position on LCD
 * Example Call: lcd_wr_char(1, 4, 'A') => to write character 'A' to the LCD
 */
void lcd_wr_char(char row, char column, char alpha_num_char)
{
    1f38:	cf 93       	push	r28
    1f3a:	df 93       	push	r29
    1f3c:	cd b7       	in	r28, 0x3d	; 61
    1f3e:	de b7       	in	r29, 0x3e	; 62
    1f40:	a0 97       	sbiw	r28, 0x20	; 32
    1f42:	0f b6       	in	r0, 0x3f	; 63
    1f44:	f8 94       	cli
    1f46:	de bf       	out	0x3e, r29	; 62
    1f48:	0f be       	out	0x3f, r0	; 63
    1f4a:	cd bf       	out	0x3d, r28	; 61
    1f4c:	8e 8f       	std	Y+30, r24	; 0x1e
    1f4e:	6f 8f       	std	Y+31, r22	; 0x1f
    1f50:	48 a3       	std	Y+32, r20	; 0x20
	lcd_cursor (row, column);
    1f52:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1f54:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1f56:	c0 df       	rcall	.-128    	; 0x1ed8 <lcd_cursor>
	
	char temp;
	
	temp = alpha_num_char;
    1f58:	88 a1       	ldd	r24, Y+32	; 0x20
    1f5a:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp & 0xF0);
    1f5c:	89 81       	ldd	r24, Y+1	; 0x01
    1f5e:	80 7f       	andi	r24, 0xF0	; 240
    1f60:	89 83       	std	Y+1, r24	; 0x01
	lcd_data_port_reg &= 0x0F;
    1f62:	88 e2       	ldi	r24, 0x28	; 40
    1f64:	90 e0       	ldi	r25, 0x00	; 0
    1f66:	28 e2       	ldi	r18, 0x28	; 40
    1f68:	30 e0       	ldi	r19, 0x00	; 0
    1f6a:	f9 01       	movw	r30, r18
    1f6c:	20 81       	ld	r18, Z
    1f6e:	2f 70       	andi	r18, 0x0F	; 15
    1f70:	fc 01       	movw	r30, r24
    1f72:	20 83       	st	Z, r18
	lcd_data_port_reg |= temp;
    1f74:	88 e2       	ldi	r24, 0x28	; 40
    1f76:	90 e0       	ldi	r25, 0x00	; 0
    1f78:	28 e2       	ldi	r18, 0x28	; 40
    1f7a:	30 e0       	ldi	r19, 0x00	; 0
    1f7c:	f9 01       	movw	r30, r18
    1f7e:	30 81       	ld	r19, Z
    1f80:	29 81       	ldd	r18, Y+1	; 0x01
    1f82:	23 2b       	or	r18, r19
    1f84:	fc 01       	movw	r30, r24
    1f86:	20 83       	st	Z, r18
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
    1f88:	88 e2       	ldi	r24, 0x28	; 40
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	28 e2       	ldi	r18, 0x28	; 40
    1f8e:	30 e0       	ldi	r19, 0x00	; 0
    1f90:	f9 01       	movw	r30, r18
    1f92:	20 81       	ld	r18, Z
    1f94:	21 60       	ori	r18, 0x01	; 1
    1f96:	fc 01       	movw	r30, r24
    1f98:	20 83       	st	Z, r18
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
    1f9a:	88 e2       	ldi	r24, 0x28	; 40
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	28 e2       	ldi	r18, 0x28	; 40
    1fa0:	30 e0       	ldi	r19, 0x00	; 0
    1fa2:	f9 01       	movw	r30, r18
    1fa4:	20 81       	ld	r18, Z
    1fa6:	2d 7f       	andi	r18, 0xFD	; 253
    1fa8:	fc 01       	movw	r30, r24
    1faa:	20 83       	st	Z, r18
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
    1fac:	88 e2       	ldi	r24, 0x28	; 40
    1fae:	90 e0       	ldi	r25, 0x00	; 0
    1fb0:	28 e2       	ldi	r18, 0x28	; 40
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	f9 01       	movw	r30, r18
    1fb6:	20 81       	ld	r18, Z
    1fb8:	24 60       	ori	r18, 0x04	; 4
    1fba:	fc 01       	movw	r30, r24
    1fbc:	20 83       	st	Z, r18
    1fbe:	80 e0       	ldi	r24, 0x00	; 0
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	a0 ea       	ldi	r26, 0xA0	; 160
    1fc4:	b0 e4       	ldi	r27, 0x40	; 64
    1fc6:	8a 83       	std	Y+2, r24	; 0x02
    1fc8:	9b 83       	std	Y+3, r25	; 0x03
    1fca:	ac 83       	std	Y+4, r26	; 0x04
    1fcc:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1fce:	26 e6       	ldi	r18, 0x66	; 102
    1fd0:	36 e6       	ldi	r19, 0x66	; 102
    1fd2:	46 e6       	ldi	r20, 0x66	; 102
    1fd4:	55 e4       	ldi	r21, 0x45	; 69
    1fd6:	6a 81       	ldd	r22, Y+2	; 0x02
    1fd8:	7b 81       	ldd	r23, Y+3	; 0x03
    1fda:	8c 81       	ldd	r24, Y+4	; 0x04
    1fdc:	9d 81       	ldd	r25, Y+5	; 0x05
    1fde:	8f d2       	rcall	.+1310   	; 0x24fe <__mulsf3>
    1fe0:	dc 01       	movw	r26, r24
    1fe2:	cb 01       	movw	r24, r22
    1fe4:	8c 8b       	std	Y+20, r24	; 0x14
    1fe6:	9d 8b       	std	Y+21, r25	; 0x15
    1fe8:	ae 8b       	std	Y+22, r26	; 0x16
    1fea:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
    1fec:	20 e0       	ldi	r18, 0x00	; 0
    1fee:	30 e0       	ldi	r19, 0x00	; 0
    1ff0:	40 e8       	ldi	r20, 0x80	; 128
    1ff2:	5f e3       	ldi	r21, 0x3F	; 63
    1ff4:	6c 89       	ldd	r22, Y+20	; 0x14
    1ff6:	7d 89       	ldd	r23, Y+21	; 0x15
    1ff8:	8e 89       	ldd	r24, Y+22	; 0x16
    1ffa:	9f 89       	ldd	r25, Y+23	; 0x17
    1ffc:	32 d1       	rcall	.+612    	; 0x2262 <__cmpsf2>
    1ffe:	88 23       	and	r24, r24
    2000:	2c f4       	brge	.+10     	; 0x200c <lcd_wr_char+0xd4>
		__ticks = 1;
    2002:	81 e0       	ldi	r24, 0x01	; 1
    2004:	90 e0       	ldi	r25, 0x00	; 0
    2006:	99 8f       	std	Y+25, r25	; 0x19
    2008:	88 8f       	std	Y+24, r24	; 0x18
    200a:	3b c0       	rjmp	.+118    	; 0x2082 <lcd_wr_char+0x14a>
	else if (__tmp > 65535)
    200c:	20 e0       	ldi	r18, 0x00	; 0
    200e:	3f ef       	ldi	r19, 0xFF	; 255
    2010:	4f e7       	ldi	r20, 0x7F	; 127
    2012:	57 e4       	ldi	r21, 0x47	; 71
    2014:	6c 89       	ldd	r22, Y+20	; 0x14
    2016:	7d 89       	ldd	r23, Y+21	; 0x15
    2018:	8e 89       	ldd	r24, Y+22	; 0x16
    201a:	9f 89       	ldd	r25, Y+23	; 0x17
    201c:	6c d2       	rcall	.+1240   	; 0x24f6 <__gesf2>
    201e:	18 16       	cp	r1, r24
    2020:	3c f5       	brge	.+78     	; 0x2070 <lcd_wr_char+0x138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2022:	20 e0       	ldi	r18, 0x00	; 0
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	40 e2       	ldi	r20, 0x20	; 32
    2028:	51 e4       	ldi	r21, 0x41	; 65
    202a:	6a 81       	ldd	r22, Y+2	; 0x02
    202c:	7b 81       	ldd	r23, Y+3	; 0x03
    202e:	8c 81       	ldd	r24, Y+4	; 0x04
    2030:	9d 81       	ldd	r25, Y+5	; 0x05
    2032:	65 d2       	rcall	.+1226   	; 0x24fe <__mulsf3>
    2034:	dc 01       	movw	r26, r24
    2036:	cb 01       	movw	r24, r22
    2038:	bc 01       	movw	r22, r24
    203a:	cd 01       	movw	r24, r26
    203c:	7e d1       	rcall	.+764    	; 0x233a <__fixunssfsi>
    203e:	dc 01       	movw	r26, r24
    2040:	cb 01       	movw	r24, r22
    2042:	99 8f       	std	Y+25, r25	; 0x19
    2044:	88 8f       	std	Y+24, r24	; 0x18
    2046:	0f c0       	rjmp	.+30     	; 0x2066 <lcd_wr_char+0x12e>
    2048:	80 e7       	ldi	r24, 0x70	; 112
    204a:	91 e0       	ldi	r25, 0x01	; 1
    204c:	9b 8f       	std	Y+27, r25	; 0x1b
    204e:	8a 8f       	std	Y+26, r24	; 0x1a
    2050:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2052:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2054:	01 97       	sbiw	r24, 0x01	; 1
    2056:	f1 f7       	brne	.-4      	; 0x2054 <lcd_wr_char+0x11c>
    2058:	9b 8f       	std	Y+27, r25	; 0x1b
    205a:	8a 8f       	std	Y+26, r24	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    205c:	88 8d       	ldd	r24, Y+24	; 0x18
    205e:	99 8d       	ldd	r25, Y+25	; 0x19
    2060:	01 97       	sbiw	r24, 0x01	; 1
    2062:	99 8f       	std	Y+25, r25	; 0x19
    2064:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2066:	88 8d       	ldd	r24, Y+24	; 0x18
    2068:	99 8d       	ldd	r25, Y+25	; 0x19
    206a:	89 2b       	or	r24, r25
    206c:	69 f7       	brne	.-38     	; 0x2048 <lcd_wr_char+0x110>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    206e:	13 c0       	rjmp	.+38     	; 0x2096 <lcd_wr_char+0x15e>
    2070:	6c 89       	ldd	r22, Y+20	; 0x14
    2072:	7d 89       	ldd	r23, Y+21	; 0x15
    2074:	8e 89       	ldd	r24, Y+22	; 0x16
    2076:	9f 89       	ldd	r25, Y+23	; 0x17
    2078:	60 d1       	rcall	.+704    	; 0x233a <__fixunssfsi>
    207a:	dc 01       	movw	r26, r24
    207c:	cb 01       	movw	r24, r22
    207e:	99 8f       	std	Y+25, r25	; 0x19
    2080:	88 8f       	std	Y+24, r24	; 0x18
    2082:	88 8d       	ldd	r24, Y+24	; 0x18
    2084:	99 8d       	ldd	r25, Y+25	; 0x19
    2086:	9d 8f       	std	Y+29, r25	; 0x1d
    2088:	8c 8f       	std	Y+28, r24	; 0x1c
    208a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    208c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    208e:	01 97       	sbiw	r24, 0x01	; 1
    2090:	f1 f7       	brne	.-4      	; 0x208e <lcd_wr_char+0x156>
    2092:	9d 8f       	std	Y+29, r25	; 0x1d
    2094:	8c 8f       	std	Y+28, r24	; 0x1c
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
    2096:	88 e2       	ldi	r24, 0x28	; 40
    2098:	90 e0       	ldi	r25, 0x00	; 0
    209a:	28 e2       	ldi	r18, 0x28	; 40
    209c:	30 e0       	ldi	r19, 0x00	; 0
    209e:	f9 01       	movw	r30, r18
    20a0:	20 81       	ld	r18, Z
    20a2:	2b 7f       	andi	r18, 0xFB	; 251
    20a4:	fc 01       	movw	r30, r24
    20a6:	20 83       	st	Z, r18
	
	alpha_num_char = (alpha_num_char & 0x0F);
    20a8:	88 a1       	ldd	r24, Y+32	; 0x20
    20aa:	8f 70       	andi	r24, 0x0F	; 15
    20ac:	88 a3       	std	Y+32, r24	; 0x20
	alpha_num_char = (alpha_num_char << 4);
    20ae:	88 a1       	ldd	r24, Y+32	; 0x20
    20b0:	82 95       	swap	r24
    20b2:	80 7f       	andi	r24, 0xF0	; 240
    20b4:	88 a3       	std	Y+32, r24	; 0x20
	lcd_data_port_reg &= 0x0F;
    20b6:	88 e2       	ldi	r24, 0x28	; 40
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	28 e2       	ldi	r18, 0x28	; 40
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	f9 01       	movw	r30, r18
    20c0:	20 81       	ld	r18, Z
    20c2:	2f 70       	andi	r18, 0x0F	; 15
    20c4:	fc 01       	movw	r30, r24
    20c6:	20 83       	st	Z, r18
	lcd_data_port_reg |= alpha_num_char;
    20c8:	88 e2       	ldi	r24, 0x28	; 40
    20ca:	90 e0       	ldi	r25, 0x00	; 0
    20cc:	28 e2       	ldi	r18, 0x28	; 40
    20ce:	30 e0       	ldi	r19, 0x00	; 0
    20d0:	f9 01       	movw	r30, r18
    20d2:	30 81       	ld	r19, Z
    20d4:	28 a1       	ldd	r18, Y+32	; 0x20
    20d6:	23 2b       	or	r18, r19
    20d8:	fc 01       	movw	r30, r24
    20da:	20 83       	st	Z, r18
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
    20dc:	88 e2       	ldi	r24, 0x28	; 40
    20de:	90 e0       	ldi	r25, 0x00	; 0
    20e0:	28 e2       	ldi	r18, 0x28	; 40
    20e2:	30 e0       	ldi	r19, 0x00	; 0
    20e4:	f9 01       	movw	r30, r18
    20e6:	20 81       	ld	r18, Z
    20e8:	21 60       	ori	r18, 0x01	; 1
    20ea:	fc 01       	movw	r30, r24
    20ec:	20 83       	st	Z, r18
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
    20ee:	88 e2       	ldi	r24, 0x28	; 40
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	28 e2       	ldi	r18, 0x28	; 40
    20f4:	30 e0       	ldi	r19, 0x00	; 0
    20f6:	f9 01       	movw	r30, r18
    20f8:	20 81       	ld	r18, Z
    20fa:	2d 7f       	andi	r18, 0xFD	; 253
    20fc:	fc 01       	movw	r30, r24
    20fe:	20 83       	st	Z, r18
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
    2100:	88 e2       	ldi	r24, 0x28	; 40
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	28 e2       	ldi	r18, 0x28	; 40
    2106:	30 e0       	ldi	r19, 0x00	; 0
    2108:	f9 01       	movw	r30, r18
    210a:	20 81       	ld	r18, Z
    210c:	24 60       	ori	r18, 0x04	; 4
    210e:	fc 01       	movw	r30, r24
    2110:	20 83       	st	Z, r18
    2112:	80 e0       	ldi	r24, 0x00	; 0
    2114:	90 e0       	ldi	r25, 0x00	; 0
    2116:	a0 ea       	ldi	r26, 0xA0	; 160
    2118:	b0 e4       	ldi	r27, 0x40	; 64
    211a:	8e 83       	std	Y+6, r24	; 0x06
    211c:	9f 83       	std	Y+7, r25	; 0x07
    211e:	a8 87       	std	Y+8, r26	; 0x08
    2120:	b9 87       	std	Y+9, r27	; 0x09

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2122:	26 e6       	ldi	r18, 0x66	; 102
    2124:	36 e6       	ldi	r19, 0x66	; 102
    2126:	46 e6       	ldi	r20, 0x66	; 102
    2128:	55 e4       	ldi	r21, 0x45	; 69
    212a:	6e 81       	ldd	r22, Y+6	; 0x06
    212c:	7f 81       	ldd	r23, Y+7	; 0x07
    212e:	88 85       	ldd	r24, Y+8	; 0x08
    2130:	99 85       	ldd	r25, Y+9	; 0x09
    2132:	e5 d1       	rcall	.+970    	; 0x24fe <__mulsf3>
    2134:	dc 01       	movw	r26, r24
    2136:	cb 01       	movw	r24, r22
    2138:	8a 87       	std	Y+10, r24	; 0x0a
    213a:	9b 87       	std	Y+11, r25	; 0x0b
    213c:	ac 87       	std	Y+12, r26	; 0x0c
    213e:	bd 87       	std	Y+13, r27	; 0x0d
	if (__tmp < 1.0)
    2140:	20 e0       	ldi	r18, 0x00	; 0
    2142:	30 e0       	ldi	r19, 0x00	; 0
    2144:	40 e8       	ldi	r20, 0x80	; 128
    2146:	5f e3       	ldi	r21, 0x3F	; 63
    2148:	6a 85       	ldd	r22, Y+10	; 0x0a
    214a:	7b 85       	ldd	r23, Y+11	; 0x0b
    214c:	8c 85       	ldd	r24, Y+12	; 0x0c
    214e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2150:	88 d0       	rcall	.+272    	; 0x2262 <__cmpsf2>
    2152:	88 23       	and	r24, r24
    2154:	2c f4       	brge	.+10     	; 0x2160 <lcd_wr_char+0x228>
		__ticks = 1;
    2156:	81 e0       	ldi	r24, 0x01	; 1
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	9f 87       	std	Y+15, r25	; 0x0f
    215c:	8e 87       	std	Y+14, r24	; 0x0e
	else if (__tmp > 65535)
    215e:	3b c0       	rjmp	.+118    	; 0x21d6 <lcd_wr_char+0x29e>
    2160:	20 e0       	ldi	r18, 0x00	; 0
    2162:	3f ef       	ldi	r19, 0xFF	; 255
    2164:	4f e7       	ldi	r20, 0x7F	; 127
    2166:	57 e4       	ldi	r21, 0x47	; 71
    2168:	6a 85       	ldd	r22, Y+10	; 0x0a
    216a:	7b 85       	ldd	r23, Y+11	; 0x0b
    216c:	8c 85       	ldd	r24, Y+12	; 0x0c
    216e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2170:	c2 d1       	rcall	.+900    	; 0x24f6 <__gesf2>
    2172:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2174:	3c f5       	brge	.+78     	; 0x21c4 <lcd_wr_char+0x28c>
    2176:	20 e0       	ldi	r18, 0x00	; 0
    2178:	30 e0       	ldi	r19, 0x00	; 0
    217a:	40 e2       	ldi	r20, 0x20	; 32
    217c:	51 e4       	ldi	r21, 0x41	; 65
    217e:	6e 81       	ldd	r22, Y+6	; 0x06
    2180:	7f 81       	ldd	r23, Y+7	; 0x07
    2182:	88 85       	ldd	r24, Y+8	; 0x08
    2184:	99 85       	ldd	r25, Y+9	; 0x09
    2186:	bb d1       	rcall	.+886    	; 0x24fe <__mulsf3>
    2188:	dc 01       	movw	r26, r24
    218a:	cb 01       	movw	r24, r22
    218c:	bc 01       	movw	r22, r24
    218e:	cd 01       	movw	r24, r26
    2190:	d4 d0       	rcall	.+424    	; 0x233a <__fixunssfsi>
    2192:	dc 01       	movw	r26, r24
    2194:	cb 01       	movw	r24, r22
    2196:	9f 87       	std	Y+15, r25	; 0x0f
    2198:	8e 87       	std	Y+14, r24	; 0x0e
    219a:	0f c0       	rjmp	.+30     	; 0x21ba <lcd_wr_char+0x282>
    219c:	80 e7       	ldi	r24, 0x70	; 112
    219e:	91 e0       	ldi	r25, 0x01	; 1
    21a0:	99 8b       	std	Y+17, r25	; 0x11
    21a2:	88 8b       	std	Y+16, r24	; 0x10
    21a4:	88 89       	ldd	r24, Y+16	; 0x10
    21a6:	99 89       	ldd	r25, Y+17	; 0x11
    21a8:	01 97       	sbiw	r24, 0x01	; 1
    21aa:	f1 f7       	brne	.-4      	; 0x21a8 <lcd_wr_char+0x270>
    21ac:	99 8b       	std	Y+17, r25	; 0x11
    21ae:	88 8b       	std	Y+16, r24	; 0x10
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21b0:	8e 85       	ldd	r24, Y+14	; 0x0e
    21b2:	9f 85       	ldd	r25, Y+15	; 0x0f
    21b4:	01 97       	sbiw	r24, 0x01	; 1
    21b6:	9f 87       	std	Y+15, r25	; 0x0f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21b8:	8e 87       	std	Y+14, r24	; 0x0e
    21ba:	8e 85       	ldd	r24, Y+14	; 0x0e
    21bc:	9f 85       	ldd	r25, Y+15	; 0x0f
    21be:	89 2b       	or	r24, r25
    21c0:	69 f7       	brne	.-38     	; 0x219c <lcd_wr_char+0x264>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21c2:	13 c0       	rjmp	.+38     	; 0x21ea <lcd_wr_char+0x2b2>
    21c4:	6a 85       	ldd	r22, Y+10	; 0x0a
    21c6:	7b 85       	ldd	r23, Y+11	; 0x0b
    21c8:	8c 85       	ldd	r24, Y+12	; 0x0c
    21ca:	9d 85       	ldd	r25, Y+13	; 0x0d
    21cc:	b6 d0       	rcall	.+364    	; 0x233a <__fixunssfsi>
    21ce:	dc 01       	movw	r26, r24
    21d0:	cb 01       	movw	r24, r22
    21d2:	9f 87       	std	Y+15, r25	; 0x0f
    21d4:	8e 87       	std	Y+14, r24	; 0x0e
    21d6:	8e 85       	ldd	r24, Y+14	; 0x0e
    21d8:	9f 85       	ldd	r25, Y+15	; 0x0f
    21da:	9b 8b       	std	Y+19, r25	; 0x13
    21dc:	8a 8b       	std	Y+18, r24	; 0x12
    21de:	8a 89       	ldd	r24, Y+18	; 0x12
    21e0:	9b 89       	ldd	r25, Y+19	; 0x13
    21e2:	01 97       	sbiw	r24, 0x01	; 1
    21e4:	f1 f7       	brne	.-4      	; 0x21e2 <lcd_wr_char+0x2aa>
    21e6:	9b 8b       	std	Y+19, r25	; 0x13
    21e8:	8a 8b       	std	Y+18, r24	; 0x12
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
    21ea:	88 e2       	ldi	r24, 0x28	; 40
    21ec:	90 e0       	ldi	r25, 0x00	; 0
    21ee:	28 e2       	ldi	r18, 0x28	; 40
    21f0:	30 e0       	ldi	r19, 0x00	; 0
    21f2:	f9 01       	movw	r30, r18
    21f4:	20 81       	ld	r18, Z
    21f6:	2b 7f       	andi	r18, 0xFB	; 251
    21f8:	fc 01       	movw	r30, r24
    21fa:	20 83       	st	Z, r18
}
    21fc:	00 00       	nop
    21fe:	a0 96       	adiw	r28, 0x20	; 32
    2200:	0f b6       	in	r0, 0x3f	; 63
    2202:	f8 94       	cli
    2204:	de bf       	out	0x3e, r29	; 62
    2206:	0f be       	out	0x3f, r0	; 63
    2208:	cd bf       	out	0x3d, r28	; 61
    220a:	df 91       	pop	r29
    220c:	cf 91       	pop	r28
    220e:	08 95       	ret

00002210 <lcd_string>:
 * Output: This function prints the given string on the LCD at the specified (row, column) position
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
    2210:	cf 93       	push	r28
    2212:	df 93       	push	r29
    2214:	00 d0       	rcall	.+0      	; 0x2216 <lcd_string+0x6>
    2216:	1f 92       	push	r1
    2218:	cd b7       	in	r28, 0x3d	; 61
    221a:	de b7       	in	r29, 0x3e	; 62
    221c:	89 83       	std	Y+1, r24	; 0x01
    221e:	6a 83       	std	Y+2, r22	; 0x02
    2220:	5c 83       	std	Y+4, r21	; 0x04
    2222:	4b 83       	std	Y+3, r20	; 0x03
	while(*str != '\0')
    2224:	10 c0       	rjmp	.+32     	; 0x2246 <lcd_string+0x36>
	{
		lcd_wr_char(row, column, *str);
    2226:	8b 81       	ldd	r24, Y+3	; 0x03
    2228:	9c 81       	ldd	r25, Y+4	; 0x04
    222a:	fc 01       	movw	r30, r24
    222c:	80 81       	ld	r24, Z
    222e:	48 2f       	mov	r20, r24
    2230:	6a 81       	ldd	r22, Y+2	; 0x02
    2232:	89 81       	ldd	r24, Y+1	; 0x01
    2234:	81 de       	rcall	.-766    	; 0x1f38 <lcd_wr_char>
		str++;
    2236:	8b 81       	ldd	r24, Y+3	; 0x03
    2238:	9c 81       	ldd	r25, Y+4	; 0x04
    223a:	01 96       	adiw	r24, 0x01	; 1
    223c:	9c 83       	std	Y+4, r25	; 0x04
    223e:	8b 83       	std	Y+3, r24	; 0x03
		column+=1;
    2240:	8a 81       	ldd	r24, Y+2	; 0x02
    2242:	8f 5f       	subi	r24, 0xFF	; 255
    2244:	8a 83       	std	Y+2, r24	; 0x02
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
	while(*str != '\0')
    2246:	8b 81       	ldd	r24, Y+3	; 0x03
    2248:	9c 81       	ldd	r25, Y+4	; 0x04
    224a:	fc 01       	movw	r30, r24
    224c:	80 81       	ld	r24, Z
    224e:	88 23       	and	r24, r24
    2250:	51 f7       	brne	.-44     	; 0x2226 <lcd_string+0x16>
	{
		lcd_wr_char(row, column, *str);
		str++;
		column+=1;
	}
}
    2252:	00 00       	nop
    2254:	0f 90       	pop	r0
    2256:	0f 90       	pop	r0
    2258:	0f 90       	pop	r0
    225a:	0f 90       	pop	r0
    225c:	df 91       	pop	r29
    225e:	cf 91       	pop	r28
    2260:	08 95       	ret

00002262 <__cmpsf2>:
    2262:	d4 d0       	rcall	.+424    	; 0x240c <__fp_cmp>
    2264:	08 f4       	brcc	.+2      	; 0x2268 <__cmpsf2+0x6>
    2266:	81 e0       	ldi	r24, 0x01	; 1
    2268:	08 95       	ret

0000226a <__divsf3>:
    226a:	0c d0       	rcall	.+24     	; 0x2284 <__divsf3x>
    226c:	0a c1       	rjmp	.+532    	; 0x2482 <__fp_round>
    226e:	02 d1       	rcall	.+516    	; 0x2474 <__fp_pscB>
    2270:	40 f0       	brcs	.+16     	; 0x2282 <__divsf3+0x18>
    2272:	f9 d0       	rcall	.+498    	; 0x2466 <__fp_pscA>
    2274:	30 f0       	brcs	.+12     	; 0x2282 <__divsf3+0x18>
    2276:	21 f4       	brne	.+8      	; 0x2280 <__divsf3+0x16>
    2278:	5f 3f       	cpi	r21, 0xFF	; 255
    227a:	19 f0       	breq	.+6      	; 0x2282 <__divsf3+0x18>
    227c:	eb c0       	rjmp	.+470    	; 0x2454 <__fp_inf>
    227e:	51 11       	cpse	r21, r1
    2280:	34 c1       	rjmp	.+616    	; 0x24ea <__fp_szero>
    2282:	ee c0       	rjmp	.+476    	; 0x2460 <__fp_nan>

00002284 <__divsf3x>:
    2284:	0f d1       	rcall	.+542    	; 0x24a4 <__fp_split3>
    2286:	98 f3       	brcs	.-26     	; 0x226e <__divsf3+0x4>

00002288 <__divsf3_pse>:
    2288:	99 23       	and	r25, r25
    228a:	c9 f3       	breq	.-14     	; 0x227e <__divsf3+0x14>
    228c:	55 23       	and	r21, r21
    228e:	b1 f3       	breq	.-20     	; 0x227c <__divsf3+0x12>
    2290:	95 1b       	sub	r25, r21
    2292:	55 0b       	sbc	r21, r21
    2294:	bb 27       	eor	r27, r27
    2296:	aa 27       	eor	r26, r26
    2298:	62 17       	cp	r22, r18
    229a:	73 07       	cpc	r23, r19
    229c:	84 07       	cpc	r24, r20
    229e:	38 f0       	brcs	.+14     	; 0x22ae <__divsf3_pse+0x26>
    22a0:	9f 5f       	subi	r25, 0xFF	; 255
    22a2:	5f 4f       	sbci	r21, 0xFF	; 255
    22a4:	22 0f       	add	r18, r18
    22a6:	33 1f       	adc	r19, r19
    22a8:	44 1f       	adc	r20, r20
    22aa:	aa 1f       	adc	r26, r26
    22ac:	a9 f3       	breq	.-22     	; 0x2298 <__divsf3_pse+0x10>
    22ae:	33 d0       	rcall	.+102    	; 0x2316 <__divsf3_pse+0x8e>
    22b0:	0e 2e       	mov	r0, r30
    22b2:	3a f0       	brmi	.+14     	; 0x22c2 <__divsf3_pse+0x3a>
    22b4:	e0 e8       	ldi	r30, 0x80	; 128
    22b6:	30 d0       	rcall	.+96     	; 0x2318 <__divsf3_pse+0x90>
    22b8:	91 50       	subi	r25, 0x01	; 1
    22ba:	50 40       	sbci	r21, 0x00	; 0
    22bc:	e6 95       	lsr	r30
    22be:	00 1c       	adc	r0, r0
    22c0:	ca f7       	brpl	.-14     	; 0x22b4 <__divsf3_pse+0x2c>
    22c2:	29 d0       	rcall	.+82     	; 0x2316 <__divsf3_pse+0x8e>
    22c4:	fe 2f       	mov	r31, r30
    22c6:	27 d0       	rcall	.+78     	; 0x2316 <__divsf3_pse+0x8e>
    22c8:	66 0f       	add	r22, r22
    22ca:	77 1f       	adc	r23, r23
    22cc:	88 1f       	adc	r24, r24
    22ce:	bb 1f       	adc	r27, r27
    22d0:	26 17       	cp	r18, r22
    22d2:	37 07       	cpc	r19, r23
    22d4:	48 07       	cpc	r20, r24
    22d6:	ab 07       	cpc	r26, r27
    22d8:	b0 e8       	ldi	r27, 0x80	; 128
    22da:	09 f0       	breq	.+2      	; 0x22de <__divsf3_pse+0x56>
    22dc:	bb 0b       	sbc	r27, r27
    22de:	80 2d       	mov	r24, r0
    22e0:	bf 01       	movw	r22, r30
    22e2:	ff 27       	eor	r31, r31
    22e4:	93 58       	subi	r25, 0x83	; 131
    22e6:	5f 4f       	sbci	r21, 0xFF	; 255
    22e8:	2a f0       	brmi	.+10     	; 0x22f4 <__divsf3_pse+0x6c>
    22ea:	9e 3f       	cpi	r25, 0xFE	; 254
    22ec:	51 05       	cpc	r21, r1
    22ee:	68 f0       	brcs	.+26     	; 0x230a <__divsf3_pse+0x82>
    22f0:	b1 c0       	rjmp	.+354    	; 0x2454 <__fp_inf>
    22f2:	fb c0       	rjmp	.+502    	; 0x24ea <__fp_szero>
    22f4:	5f 3f       	cpi	r21, 0xFF	; 255
    22f6:	ec f3       	brlt	.-6      	; 0x22f2 <__divsf3_pse+0x6a>
    22f8:	98 3e       	cpi	r25, 0xE8	; 232
    22fa:	dc f3       	brlt	.-10     	; 0x22f2 <__divsf3_pse+0x6a>
    22fc:	86 95       	lsr	r24
    22fe:	77 95       	ror	r23
    2300:	67 95       	ror	r22
    2302:	b7 95       	ror	r27
    2304:	f7 95       	ror	r31
    2306:	9f 5f       	subi	r25, 0xFF	; 255
    2308:	c9 f7       	brne	.-14     	; 0x22fc <__divsf3_pse+0x74>
    230a:	88 0f       	add	r24, r24
    230c:	91 1d       	adc	r25, r1
    230e:	96 95       	lsr	r25
    2310:	87 95       	ror	r24
    2312:	97 f9       	bld	r25, 7
    2314:	08 95       	ret
    2316:	e1 e0       	ldi	r30, 0x01	; 1
    2318:	66 0f       	add	r22, r22
    231a:	77 1f       	adc	r23, r23
    231c:	88 1f       	adc	r24, r24
    231e:	bb 1f       	adc	r27, r27
    2320:	62 17       	cp	r22, r18
    2322:	73 07       	cpc	r23, r19
    2324:	84 07       	cpc	r24, r20
    2326:	ba 07       	cpc	r27, r26
    2328:	20 f0       	brcs	.+8      	; 0x2332 <__divsf3_pse+0xaa>
    232a:	62 1b       	sub	r22, r18
    232c:	73 0b       	sbc	r23, r19
    232e:	84 0b       	sbc	r24, r20
    2330:	ba 0b       	sbc	r27, r26
    2332:	ee 1f       	adc	r30, r30
    2334:	88 f7       	brcc	.-30     	; 0x2318 <__divsf3_pse+0x90>
    2336:	e0 95       	com	r30
    2338:	08 95       	ret

0000233a <__fixunssfsi>:
    233a:	bc d0       	rcall	.+376    	; 0x24b4 <__fp_splitA>
    233c:	88 f0       	brcs	.+34     	; 0x2360 <__fixunssfsi+0x26>
    233e:	9f 57       	subi	r25, 0x7F	; 127
    2340:	90 f0       	brcs	.+36     	; 0x2366 <__fixunssfsi+0x2c>
    2342:	b9 2f       	mov	r27, r25
    2344:	99 27       	eor	r25, r25
    2346:	b7 51       	subi	r27, 0x17	; 23
    2348:	a0 f0       	brcs	.+40     	; 0x2372 <__fixunssfsi+0x38>
    234a:	d1 f0       	breq	.+52     	; 0x2380 <__fixunssfsi+0x46>
    234c:	66 0f       	add	r22, r22
    234e:	77 1f       	adc	r23, r23
    2350:	88 1f       	adc	r24, r24
    2352:	99 1f       	adc	r25, r25
    2354:	1a f0       	brmi	.+6      	; 0x235c <__fixunssfsi+0x22>
    2356:	ba 95       	dec	r27
    2358:	c9 f7       	brne	.-14     	; 0x234c <__fixunssfsi+0x12>
    235a:	12 c0       	rjmp	.+36     	; 0x2380 <__fixunssfsi+0x46>
    235c:	b1 30       	cpi	r27, 0x01	; 1
    235e:	81 f0       	breq	.+32     	; 0x2380 <__fixunssfsi+0x46>
    2360:	c3 d0       	rcall	.+390    	; 0x24e8 <__fp_zero>
    2362:	b1 e0       	ldi	r27, 0x01	; 1
    2364:	08 95       	ret
    2366:	c0 c0       	rjmp	.+384    	; 0x24e8 <__fp_zero>
    2368:	67 2f       	mov	r22, r23
    236a:	78 2f       	mov	r23, r24
    236c:	88 27       	eor	r24, r24
    236e:	b8 5f       	subi	r27, 0xF8	; 248
    2370:	39 f0       	breq	.+14     	; 0x2380 <__fixunssfsi+0x46>
    2372:	b9 3f       	cpi	r27, 0xF9	; 249
    2374:	cc f3       	brlt	.-14     	; 0x2368 <__fixunssfsi+0x2e>
    2376:	86 95       	lsr	r24
    2378:	77 95       	ror	r23
    237a:	67 95       	ror	r22
    237c:	b3 95       	inc	r27
    237e:	d9 f7       	brne	.-10     	; 0x2376 <__fixunssfsi+0x3c>
    2380:	3e f4       	brtc	.+14     	; 0x2390 <__fixunssfsi+0x56>
    2382:	90 95       	com	r25
    2384:	80 95       	com	r24
    2386:	70 95       	com	r23
    2388:	61 95       	neg	r22
    238a:	7f 4f       	sbci	r23, 0xFF	; 255
    238c:	8f 4f       	sbci	r24, 0xFF	; 255
    238e:	9f 4f       	sbci	r25, 0xFF	; 255
    2390:	08 95       	ret

00002392 <__floatunsisf>:
    2392:	e8 94       	clt
    2394:	09 c0       	rjmp	.+18     	; 0x23a8 <__floatsisf+0x12>

00002396 <__floatsisf>:
    2396:	97 fb       	bst	r25, 7
    2398:	3e f4       	brtc	.+14     	; 0x23a8 <__floatsisf+0x12>
    239a:	90 95       	com	r25
    239c:	80 95       	com	r24
    239e:	70 95       	com	r23
    23a0:	61 95       	neg	r22
    23a2:	7f 4f       	sbci	r23, 0xFF	; 255
    23a4:	8f 4f       	sbci	r24, 0xFF	; 255
    23a6:	9f 4f       	sbci	r25, 0xFF	; 255
    23a8:	99 23       	and	r25, r25
    23aa:	a9 f0       	breq	.+42     	; 0x23d6 <__floatsisf+0x40>
    23ac:	f9 2f       	mov	r31, r25
    23ae:	96 e9       	ldi	r25, 0x96	; 150
    23b0:	bb 27       	eor	r27, r27
    23b2:	93 95       	inc	r25
    23b4:	f6 95       	lsr	r31
    23b6:	87 95       	ror	r24
    23b8:	77 95       	ror	r23
    23ba:	67 95       	ror	r22
    23bc:	b7 95       	ror	r27
    23be:	f1 11       	cpse	r31, r1
    23c0:	f8 cf       	rjmp	.-16     	; 0x23b2 <__floatsisf+0x1c>
    23c2:	fa f4       	brpl	.+62     	; 0x2402 <__floatsisf+0x6c>
    23c4:	bb 0f       	add	r27, r27
    23c6:	11 f4       	brne	.+4      	; 0x23cc <__floatsisf+0x36>
    23c8:	60 ff       	sbrs	r22, 0
    23ca:	1b c0       	rjmp	.+54     	; 0x2402 <__floatsisf+0x6c>
    23cc:	6f 5f       	subi	r22, 0xFF	; 255
    23ce:	7f 4f       	sbci	r23, 0xFF	; 255
    23d0:	8f 4f       	sbci	r24, 0xFF	; 255
    23d2:	9f 4f       	sbci	r25, 0xFF	; 255
    23d4:	16 c0       	rjmp	.+44     	; 0x2402 <__floatsisf+0x6c>
    23d6:	88 23       	and	r24, r24
    23d8:	11 f0       	breq	.+4      	; 0x23de <__floatsisf+0x48>
    23da:	96 e9       	ldi	r25, 0x96	; 150
    23dc:	11 c0       	rjmp	.+34     	; 0x2400 <__floatsisf+0x6a>
    23de:	77 23       	and	r23, r23
    23e0:	21 f0       	breq	.+8      	; 0x23ea <__floatsisf+0x54>
    23e2:	9e e8       	ldi	r25, 0x8E	; 142
    23e4:	87 2f       	mov	r24, r23
    23e6:	76 2f       	mov	r23, r22
    23e8:	05 c0       	rjmp	.+10     	; 0x23f4 <__floatsisf+0x5e>
    23ea:	66 23       	and	r22, r22
    23ec:	71 f0       	breq	.+28     	; 0x240a <__floatsisf+0x74>
    23ee:	96 e8       	ldi	r25, 0x86	; 134
    23f0:	86 2f       	mov	r24, r22
    23f2:	70 e0       	ldi	r23, 0x00	; 0
    23f4:	60 e0       	ldi	r22, 0x00	; 0
    23f6:	2a f0       	brmi	.+10     	; 0x2402 <__floatsisf+0x6c>
    23f8:	9a 95       	dec	r25
    23fa:	66 0f       	add	r22, r22
    23fc:	77 1f       	adc	r23, r23
    23fe:	88 1f       	adc	r24, r24
    2400:	da f7       	brpl	.-10     	; 0x23f8 <__floatsisf+0x62>
    2402:	88 0f       	add	r24, r24
    2404:	96 95       	lsr	r25
    2406:	87 95       	ror	r24
    2408:	97 f9       	bld	r25, 7
    240a:	08 95       	ret

0000240c <__fp_cmp>:
    240c:	99 0f       	add	r25, r25
    240e:	00 08       	sbc	r0, r0
    2410:	55 0f       	add	r21, r21
    2412:	aa 0b       	sbc	r26, r26
    2414:	e0 e8       	ldi	r30, 0x80	; 128
    2416:	fe ef       	ldi	r31, 0xFE	; 254
    2418:	16 16       	cp	r1, r22
    241a:	17 06       	cpc	r1, r23
    241c:	e8 07       	cpc	r30, r24
    241e:	f9 07       	cpc	r31, r25
    2420:	c0 f0       	brcs	.+48     	; 0x2452 <__fp_cmp+0x46>
    2422:	12 16       	cp	r1, r18
    2424:	13 06       	cpc	r1, r19
    2426:	e4 07       	cpc	r30, r20
    2428:	f5 07       	cpc	r31, r21
    242a:	98 f0       	brcs	.+38     	; 0x2452 <__fp_cmp+0x46>
    242c:	62 1b       	sub	r22, r18
    242e:	73 0b       	sbc	r23, r19
    2430:	84 0b       	sbc	r24, r20
    2432:	95 0b       	sbc	r25, r21
    2434:	39 f4       	brne	.+14     	; 0x2444 <__fp_cmp+0x38>
    2436:	0a 26       	eor	r0, r26
    2438:	61 f0       	breq	.+24     	; 0x2452 <__fp_cmp+0x46>
    243a:	23 2b       	or	r18, r19
    243c:	24 2b       	or	r18, r20
    243e:	25 2b       	or	r18, r21
    2440:	21 f4       	brne	.+8      	; 0x244a <__fp_cmp+0x3e>
    2442:	08 95       	ret
    2444:	0a 26       	eor	r0, r26
    2446:	09 f4       	brne	.+2      	; 0x244a <__fp_cmp+0x3e>
    2448:	a1 40       	sbci	r26, 0x01	; 1
    244a:	a6 95       	lsr	r26
    244c:	8f ef       	ldi	r24, 0xFF	; 255
    244e:	81 1d       	adc	r24, r1
    2450:	81 1d       	adc	r24, r1
    2452:	08 95       	ret

00002454 <__fp_inf>:
    2454:	97 f9       	bld	r25, 7
    2456:	9f 67       	ori	r25, 0x7F	; 127
    2458:	80 e8       	ldi	r24, 0x80	; 128
    245a:	70 e0       	ldi	r23, 0x00	; 0
    245c:	60 e0       	ldi	r22, 0x00	; 0
    245e:	08 95       	ret

00002460 <__fp_nan>:
    2460:	9f ef       	ldi	r25, 0xFF	; 255
    2462:	80 ec       	ldi	r24, 0xC0	; 192
    2464:	08 95       	ret

00002466 <__fp_pscA>:
    2466:	00 24       	eor	r0, r0
    2468:	0a 94       	dec	r0
    246a:	16 16       	cp	r1, r22
    246c:	17 06       	cpc	r1, r23
    246e:	18 06       	cpc	r1, r24
    2470:	09 06       	cpc	r0, r25
    2472:	08 95       	ret

00002474 <__fp_pscB>:
    2474:	00 24       	eor	r0, r0
    2476:	0a 94       	dec	r0
    2478:	12 16       	cp	r1, r18
    247a:	13 06       	cpc	r1, r19
    247c:	14 06       	cpc	r1, r20
    247e:	05 06       	cpc	r0, r21
    2480:	08 95       	ret

00002482 <__fp_round>:
    2482:	09 2e       	mov	r0, r25
    2484:	03 94       	inc	r0
    2486:	00 0c       	add	r0, r0
    2488:	11 f4       	brne	.+4      	; 0x248e <__fp_round+0xc>
    248a:	88 23       	and	r24, r24
    248c:	52 f0       	brmi	.+20     	; 0x24a2 <__fp_round+0x20>
    248e:	bb 0f       	add	r27, r27
    2490:	40 f4       	brcc	.+16     	; 0x24a2 <__fp_round+0x20>
    2492:	bf 2b       	or	r27, r31
    2494:	11 f4       	brne	.+4      	; 0x249a <__fp_round+0x18>
    2496:	60 ff       	sbrs	r22, 0
    2498:	04 c0       	rjmp	.+8      	; 0x24a2 <__fp_round+0x20>
    249a:	6f 5f       	subi	r22, 0xFF	; 255
    249c:	7f 4f       	sbci	r23, 0xFF	; 255
    249e:	8f 4f       	sbci	r24, 0xFF	; 255
    24a0:	9f 4f       	sbci	r25, 0xFF	; 255
    24a2:	08 95       	ret

000024a4 <__fp_split3>:
    24a4:	57 fd       	sbrc	r21, 7
    24a6:	90 58       	subi	r25, 0x80	; 128
    24a8:	44 0f       	add	r20, r20
    24aa:	55 1f       	adc	r21, r21
    24ac:	59 f0       	breq	.+22     	; 0x24c4 <__fp_splitA+0x10>
    24ae:	5f 3f       	cpi	r21, 0xFF	; 255
    24b0:	71 f0       	breq	.+28     	; 0x24ce <__fp_splitA+0x1a>
    24b2:	47 95       	ror	r20

000024b4 <__fp_splitA>:
    24b4:	88 0f       	add	r24, r24
    24b6:	97 fb       	bst	r25, 7
    24b8:	99 1f       	adc	r25, r25
    24ba:	61 f0       	breq	.+24     	; 0x24d4 <__fp_splitA+0x20>
    24bc:	9f 3f       	cpi	r25, 0xFF	; 255
    24be:	79 f0       	breq	.+30     	; 0x24de <__fp_splitA+0x2a>
    24c0:	87 95       	ror	r24
    24c2:	08 95       	ret
    24c4:	12 16       	cp	r1, r18
    24c6:	13 06       	cpc	r1, r19
    24c8:	14 06       	cpc	r1, r20
    24ca:	55 1f       	adc	r21, r21
    24cc:	f2 cf       	rjmp	.-28     	; 0x24b2 <__fp_split3+0xe>
    24ce:	46 95       	lsr	r20
    24d0:	f1 df       	rcall	.-30     	; 0x24b4 <__fp_splitA>
    24d2:	08 c0       	rjmp	.+16     	; 0x24e4 <__fp_splitA+0x30>
    24d4:	16 16       	cp	r1, r22
    24d6:	17 06       	cpc	r1, r23
    24d8:	18 06       	cpc	r1, r24
    24da:	99 1f       	adc	r25, r25
    24dc:	f1 cf       	rjmp	.-30     	; 0x24c0 <__fp_splitA+0xc>
    24de:	86 95       	lsr	r24
    24e0:	71 05       	cpc	r23, r1
    24e2:	61 05       	cpc	r22, r1
    24e4:	08 94       	sec
    24e6:	08 95       	ret

000024e8 <__fp_zero>:
    24e8:	e8 94       	clt

000024ea <__fp_szero>:
    24ea:	bb 27       	eor	r27, r27
    24ec:	66 27       	eor	r22, r22
    24ee:	77 27       	eor	r23, r23
    24f0:	cb 01       	movw	r24, r22
    24f2:	97 f9       	bld	r25, 7
    24f4:	08 95       	ret

000024f6 <__gesf2>:
    24f6:	8a df       	rcall	.-236    	; 0x240c <__fp_cmp>
    24f8:	08 f4       	brcc	.+2      	; 0x24fc <__gesf2+0x6>
    24fa:	8f ef       	ldi	r24, 0xFF	; 255
    24fc:	08 95       	ret

000024fe <__mulsf3>:
    24fe:	0b d0       	rcall	.+22     	; 0x2516 <__mulsf3x>
    2500:	c0 cf       	rjmp	.-128    	; 0x2482 <__fp_round>
    2502:	b1 df       	rcall	.-158    	; 0x2466 <__fp_pscA>
    2504:	28 f0       	brcs	.+10     	; 0x2510 <__mulsf3+0x12>
    2506:	b6 df       	rcall	.-148    	; 0x2474 <__fp_pscB>
    2508:	18 f0       	brcs	.+6      	; 0x2510 <__mulsf3+0x12>
    250a:	95 23       	and	r25, r21
    250c:	09 f0       	breq	.+2      	; 0x2510 <__mulsf3+0x12>
    250e:	a2 cf       	rjmp	.-188    	; 0x2454 <__fp_inf>
    2510:	a7 cf       	rjmp	.-178    	; 0x2460 <__fp_nan>
    2512:	11 24       	eor	r1, r1
    2514:	ea cf       	rjmp	.-44     	; 0x24ea <__fp_szero>

00002516 <__mulsf3x>:
    2516:	c6 df       	rcall	.-116    	; 0x24a4 <__fp_split3>
    2518:	a0 f3       	brcs	.-24     	; 0x2502 <__mulsf3+0x4>

0000251a <__mulsf3_pse>:
    251a:	95 9f       	mul	r25, r21
    251c:	d1 f3       	breq	.-12     	; 0x2512 <__mulsf3+0x14>
    251e:	95 0f       	add	r25, r21
    2520:	50 e0       	ldi	r21, 0x00	; 0
    2522:	55 1f       	adc	r21, r21
    2524:	62 9f       	mul	r22, r18
    2526:	f0 01       	movw	r30, r0
    2528:	72 9f       	mul	r23, r18
    252a:	bb 27       	eor	r27, r27
    252c:	f0 0d       	add	r31, r0
    252e:	b1 1d       	adc	r27, r1
    2530:	63 9f       	mul	r22, r19
    2532:	aa 27       	eor	r26, r26
    2534:	f0 0d       	add	r31, r0
    2536:	b1 1d       	adc	r27, r1
    2538:	aa 1f       	adc	r26, r26
    253a:	64 9f       	mul	r22, r20
    253c:	66 27       	eor	r22, r22
    253e:	b0 0d       	add	r27, r0
    2540:	a1 1d       	adc	r26, r1
    2542:	66 1f       	adc	r22, r22
    2544:	82 9f       	mul	r24, r18
    2546:	22 27       	eor	r18, r18
    2548:	b0 0d       	add	r27, r0
    254a:	a1 1d       	adc	r26, r1
    254c:	62 1f       	adc	r22, r18
    254e:	73 9f       	mul	r23, r19
    2550:	b0 0d       	add	r27, r0
    2552:	a1 1d       	adc	r26, r1
    2554:	62 1f       	adc	r22, r18
    2556:	83 9f       	mul	r24, r19
    2558:	a0 0d       	add	r26, r0
    255a:	61 1d       	adc	r22, r1
    255c:	22 1f       	adc	r18, r18
    255e:	74 9f       	mul	r23, r20
    2560:	33 27       	eor	r19, r19
    2562:	a0 0d       	add	r26, r0
    2564:	61 1d       	adc	r22, r1
    2566:	23 1f       	adc	r18, r19
    2568:	84 9f       	mul	r24, r20
    256a:	60 0d       	add	r22, r0
    256c:	21 1d       	adc	r18, r1
    256e:	82 2f       	mov	r24, r18
    2570:	76 2f       	mov	r23, r22
    2572:	6a 2f       	mov	r22, r26
    2574:	11 24       	eor	r1, r1
    2576:	9f 57       	subi	r25, 0x7F	; 127
    2578:	50 40       	sbci	r21, 0x00	; 0
    257a:	8a f0       	brmi	.+34     	; 0x259e <__mulsf3_pse+0x84>
    257c:	e1 f0       	breq	.+56     	; 0x25b6 <__mulsf3_pse+0x9c>
    257e:	88 23       	and	r24, r24
    2580:	4a f0       	brmi	.+18     	; 0x2594 <__mulsf3_pse+0x7a>
    2582:	ee 0f       	add	r30, r30
    2584:	ff 1f       	adc	r31, r31
    2586:	bb 1f       	adc	r27, r27
    2588:	66 1f       	adc	r22, r22
    258a:	77 1f       	adc	r23, r23
    258c:	88 1f       	adc	r24, r24
    258e:	91 50       	subi	r25, 0x01	; 1
    2590:	50 40       	sbci	r21, 0x00	; 0
    2592:	a9 f7       	brne	.-22     	; 0x257e <__mulsf3_pse+0x64>
    2594:	9e 3f       	cpi	r25, 0xFE	; 254
    2596:	51 05       	cpc	r21, r1
    2598:	70 f0       	brcs	.+28     	; 0x25b6 <__mulsf3_pse+0x9c>
    259a:	5c cf       	rjmp	.-328    	; 0x2454 <__fp_inf>
    259c:	a6 cf       	rjmp	.-180    	; 0x24ea <__fp_szero>
    259e:	5f 3f       	cpi	r21, 0xFF	; 255
    25a0:	ec f3       	brlt	.-6      	; 0x259c <__mulsf3_pse+0x82>
    25a2:	98 3e       	cpi	r25, 0xE8	; 232
    25a4:	dc f3       	brlt	.-10     	; 0x259c <__mulsf3_pse+0x82>
    25a6:	86 95       	lsr	r24
    25a8:	77 95       	ror	r23
    25aa:	67 95       	ror	r22
    25ac:	b7 95       	ror	r27
    25ae:	f7 95       	ror	r31
    25b0:	e7 95       	ror	r30
    25b2:	9f 5f       	subi	r25, 0xFF	; 255
    25b4:	c1 f7       	brne	.-16     	; 0x25a6 <__mulsf3_pse+0x8c>
    25b6:	fe 2b       	or	r31, r30
    25b8:	88 0f       	add	r24, r24
    25ba:	91 1d       	adc	r25, r1
    25bc:	96 95       	lsr	r25
    25be:	87 95       	ror	r24
    25c0:	97 f9       	bld	r25, 7
    25c2:	08 95       	ret

000025c4 <_exit>:
    25c4:	f8 94       	cli

000025c6 <__stop_program>:
    25c6:	ff cf       	rjmp	.-2      	; 0x25c6 <__stop_program>
