
5_Position_Control_Interrupts.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800200  00002612  000026a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002612  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800226  00800226  000026cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000026cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  0000273c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b54  00000000  00000000  000028bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e78  00000000  00000000  00004410  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001580  00000000  00000000  00005288  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000560  00000000  00000000  00006808  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009de  00000000  00000000  00006d68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000aa2  00000000  00000000  00007746  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  000081e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	a0 c6       	rjmp	.+3392   	; 0xd56 <__vector_5>
      16:	00 00       	nop
      18:	70 c6       	rjmp	.+3296   	; 0xcfa <__vector_6>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e1       	ldi	r30, 0x12	; 18
      fc:	f6 e2       	ldi	r31, 0x26	; 38
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a6 32       	cpi	r26, 0x26	; 38
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a6 e2       	ldi	r26, 0x26	; 38
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 33       	cpi	r26, 0x32	; 50
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	6f d3       	rcall	.+1758   	; 0x7fe <main>
     120:	0c 94 07 13 	jmp	0x260e	; 0x260e <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <getNextOrientation>:
char *next_position_x = &path[0];
char *next_position_y = &path[1];


char getNextOrientation(char* current_position_x,char* current_position_y,char** next_position_x,char** next_position_y)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	28 97       	sbiw	r28, 0x08	; 8
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	f8 94       	cli
     134:	de bf       	out	0x3e, r29	; 62
     136:	0f be       	out	0x3f, r0	; 63
     138:	cd bf       	out	0x3d, r28	; 61
     13a:	9a 83       	std	Y+2, r25	; 0x02
     13c:	89 83       	std	Y+1, r24	; 0x01
     13e:	7c 83       	std	Y+4, r23	; 0x04
     140:	6b 83       	std	Y+3, r22	; 0x03
     142:	5e 83       	std	Y+6, r21	; 0x06
     144:	4d 83       	std	Y+5, r20	; 0x05
     146:	38 87       	std	Y+8, r19	; 0x08
     148:	2f 83       	std	Y+7, r18	; 0x07
	if( **next_position_x == '\0' || **next_position_y == '\0' )
     14a:	8d 81       	ldd	r24, Y+5	; 0x05
     14c:	9e 81       	ldd	r25, Y+6	; 0x06
     14e:	fc 01       	movw	r30, r24
     150:	80 81       	ld	r24, Z
     152:	91 81       	ldd	r25, Z+1	; 0x01
     154:	fc 01       	movw	r30, r24
     156:	80 81       	ld	r24, Z
     158:	88 23       	and	r24, r24
     15a:	49 f0       	breq	.+18     	; 0x16e <getNextOrientation+0x48>
     15c:	8f 81       	ldd	r24, Y+7	; 0x07
     15e:	98 85       	ldd	r25, Y+8	; 0x08
     160:	fc 01       	movw	r30, r24
     162:	80 81       	ld	r24, Z
     164:	91 81       	ldd	r25, Z+1	; 0x01
     166:	fc 01       	movw	r30, r24
     168:	80 81       	ld	r24, Z
     16a:	88 23       	and	r24, r24
     16c:	11 f4       	brne	.+4      	; 0x172 <getNextOrientation+0x4c>
	{
		return 'x';
     16e:	88 e7       	ldi	r24, 0x78	; 120
     170:	34 c1       	rjmp	.+616    	; 0x3da <getNextOrientation+0x2b4>
	}
	if(*current_position_x == **next_position_x && *current_position_y <= **next_position_y){
     172:	89 81       	ldd	r24, Y+1	; 0x01
     174:	9a 81       	ldd	r25, Y+2	; 0x02
     176:	fc 01       	movw	r30, r24
     178:	20 81       	ld	r18, Z
     17a:	8d 81       	ldd	r24, Y+5	; 0x05
     17c:	9e 81       	ldd	r25, Y+6	; 0x06
     17e:	fc 01       	movw	r30, r24
     180:	80 81       	ld	r24, Z
     182:	91 81       	ldd	r25, Z+1	; 0x01
     184:	fc 01       	movw	r30, r24
     186:	80 81       	ld	r24, Z
     188:	28 17       	cp	r18, r24
     18a:	09 f0       	breq	.+2      	; 0x18e <getNextOrientation+0x68>
     18c:	3f c0       	rjmp	.+126    	; 0x20c <getNextOrientation+0xe6>
     18e:	8b 81       	ldd	r24, Y+3	; 0x03
     190:	9c 81       	ldd	r25, Y+4	; 0x04
     192:	fc 01       	movw	r30, r24
     194:	20 81       	ld	r18, Z
     196:	8f 81       	ldd	r24, Y+7	; 0x07
     198:	98 85       	ldd	r25, Y+8	; 0x08
     19a:	fc 01       	movw	r30, r24
     19c:	80 81       	ld	r24, Z
     19e:	91 81       	ldd	r25, Z+1	; 0x01
     1a0:	fc 01       	movw	r30, r24
     1a2:	80 81       	ld	r24, Z
     1a4:	82 17       	cp	r24, r18
     1a6:	90 f1       	brcs	.+100    	; 0x20c <getNextOrientation+0xe6>
		*current_position_x = **next_position_x;
     1a8:	8d 81       	ldd	r24, Y+5	; 0x05
     1aa:	9e 81       	ldd	r25, Y+6	; 0x06
     1ac:	fc 01       	movw	r30, r24
     1ae:	80 81       	ld	r24, Z
     1b0:	91 81       	ldd	r25, Z+1	; 0x01
     1b2:	fc 01       	movw	r30, r24
     1b4:	20 81       	ld	r18, Z
     1b6:	89 81       	ldd	r24, Y+1	; 0x01
     1b8:	9a 81       	ldd	r25, Y+2	; 0x02
     1ba:	fc 01       	movw	r30, r24
     1bc:	20 83       	st	Z, r18
		*current_position_y = **next_position_y;
     1be:	8f 81       	ldd	r24, Y+7	; 0x07
     1c0:	98 85       	ldd	r25, Y+8	; 0x08
     1c2:	fc 01       	movw	r30, r24
     1c4:	80 81       	ld	r24, Z
     1c6:	91 81       	ldd	r25, Z+1	; 0x01
     1c8:	fc 01       	movw	r30, r24
     1ca:	20 81       	ld	r18, Z
     1cc:	8b 81       	ldd	r24, Y+3	; 0x03
     1ce:	9c 81       	ldd	r25, Y+4	; 0x04
     1d0:	fc 01       	movw	r30, r24
     1d2:	20 83       	st	Z, r18

		*next_position_x = *next_position_x + 2;
     1d4:	8d 81       	ldd	r24, Y+5	; 0x05
     1d6:	9e 81       	ldd	r25, Y+6	; 0x06
     1d8:	fc 01       	movw	r30, r24
     1da:	80 81       	ld	r24, Z
     1dc:	91 81       	ldd	r25, Z+1	; 0x01
     1de:	9c 01       	movw	r18, r24
     1e0:	2e 5f       	subi	r18, 0xFE	; 254
     1e2:	3f 4f       	sbci	r19, 0xFF	; 255
     1e4:	8d 81       	ldd	r24, Y+5	; 0x05
     1e6:	9e 81       	ldd	r25, Y+6	; 0x06
     1e8:	fc 01       	movw	r30, r24
     1ea:	31 83       	std	Z+1, r19	; 0x01
     1ec:	20 83       	st	Z, r18
		*next_position_y = *next_position_y + 2;
     1ee:	8f 81       	ldd	r24, Y+7	; 0x07
     1f0:	98 85       	ldd	r25, Y+8	; 0x08
     1f2:	fc 01       	movw	r30, r24
     1f4:	80 81       	ld	r24, Z
     1f6:	91 81       	ldd	r25, Z+1	; 0x01
     1f8:	9c 01       	movw	r18, r24
     1fa:	2e 5f       	subi	r18, 0xFE	; 254
     1fc:	3f 4f       	sbci	r19, 0xFF	; 255
     1fe:	8f 81       	ldd	r24, Y+7	; 0x07
     200:	98 85       	ldd	r25, Y+8	; 0x08
     202:	fc 01       	movw	r30, r24
     204:	31 83       	std	Z+1, r19	; 0x01
     206:	20 83       	st	Z, r18

		return 'N';
     208:	8e e4       	ldi	r24, 0x4E	; 78
     20a:	e7 c0       	rjmp	.+462    	; 0x3da <getNextOrientation+0x2b4>
	}
	else if(*current_position_x <= **next_position_x && *current_position_y == **next_position_y){
     20c:	89 81       	ldd	r24, Y+1	; 0x01
     20e:	9a 81       	ldd	r25, Y+2	; 0x02
     210:	fc 01       	movw	r30, r24
     212:	20 81       	ld	r18, Z
     214:	8d 81       	ldd	r24, Y+5	; 0x05
     216:	9e 81       	ldd	r25, Y+6	; 0x06
     218:	fc 01       	movw	r30, r24
     21a:	80 81       	ld	r24, Z
     21c:	91 81       	ldd	r25, Z+1	; 0x01
     21e:	fc 01       	movw	r30, r24
     220:	80 81       	ld	r24, Z
     222:	82 17       	cp	r24, r18
     224:	08 f4       	brcc	.+2      	; 0x228 <getNextOrientation+0x102>
     226:	3f c0       	rjmp	.+126    	; 0x2a6 <getNextOrientation+0x180>
     228:	8b 81       	ldd	r24, Y+3	; 0x03
     22a:	9c 81       	ldd	r25, Y+4	; 0x04
     22c:	fc 01       	movw	r30, r24
     22e:	20 81       	ld	r18, Z
     230:	8f 81       	ldd	r24, Y+7	; 0x07
     232:	98 85       	ldd	r25, Y+8	; 0x08
     234:	fc 01       	movw	r30, r24
     236:	80 81       	ld	r24, Z
     238:	91 81       	ldd	r25, Z+1	; 0x01
     23a:	fc 01       	movw	r30, r24
     23c:	80 81       	ld	r24, Z
     23e:	28 17       	cp	r18, r24
     240:	91 f5       	brne	.+100    	; 0x2a6 <getNextOrientation+0x180>
		*current_position_x = **next_position_x;
     242:	8d 81       	ldd	r24, Y+5	; 0x05
     244:	9e 81       	ldd	r25, Y+6	; 0x06
     246:	fc 01       	movw	r30, r24
     248:	80 81       	ld	r24, Z
     24a:	91 81       	ldd	r25, Z+1	; 0x01
     24c:	fc 01       	movw	r30, r24
     24e:	20 81       	ld	r18, Z
     250:	89 81       	ldd	r24, Y+1	; 0x01
     252:	9a 81       	ldd	r25, Y+2	; 0x02
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18
		*current_position_y = **next_position_y;
     258:	8f 81       	ldd	r24, Y+7	; 0x07
     25a:	98 85       	ldd	r25, Y+8	; 0x08
     25c:	fc 01       	movw	r30, r24
     25e:	80 81       	ld	r24, Z
     260:	91 81       	ldd	r25, Z+1	; 0x01
     262:	fc 01       	movw	r30, r24
     264:	20 81       	ld	r18, Z
     266:	8b 81       	ldd	r24, Y+3	; 0x03
     268:	9c 81       	ldd	r25, Y+4	; 0x04
     26a:	fc 01       	movw	r30, r24
     26c:	20 83       	st	Z, r18

		*next_position_x = *next_position_x + 2;
     26e:	8d 81       	ldd	r24, Y+5	; 0x05
     270:	9e 81       	ldd	r25, Y+6	; 0x06
     272:	fc 01       	movw	r30, r24
     274:	80 81       	ld	r24, Z
     276:	91 81       	ldd	r25, Z+1	; 0x01
     278:	9c 01       	movw	r18, r24
     27a:	2e 5f       	subi	r18, 0xFE	; 254
     27c:	3f 4f       	sbci	r19, 0xFF	; 255
     27e:	8d 81       	ldd	r24, Y+5	; 0x05
     280:	9e 81       	ldd	r25, Y+6	; 0x06
     282:	fc 01       	movw	r30, r24
     284:	31 83       	std	Z+1, r19	; 0x01
     286:	20 83       	st	Z, r18
		*next_position_y = *next_position_y + 2;
     288:	8f 81       	ldd	r24, Y+7	; 0x07
     28a:	98 85       	ldd	r25, Y+8	; 0x08
     28c:	fc 01       	movw	r30, r24
     28e:	80 81       	ld	r24, Z
     290:	91 81       	ldd	r25, Z+1	; 0x01
     292:	9c 01       	movw	r18, r24
     294:	2e 5f       	subi	r18, 0xFE	; 254
     296:	3f 4f       	sbci	r19, 0xFF	; 255
     298:	8f 81       	ldd	r24, Y+7	; 0x07
     29a:	98 85       	ldd	r25, Y+8	; 0x08
     29c:	fc 01       	movw	r30, r24
     29e:	31 83       	std	Z+1, r19	; 0x01
     2a0:	20 83       	st	Z, r18

		return 'E';
     2a2:	85 e4       	ldi	r24, 0x45	; 69
     2a4:	9a c0       	rjmp	.+308    	; 0x3da <getNextOrientation+0x2b4>
	}
	else if(*current_position_x == **next_position_x && *current_position_y >= **next_position_y){
     2a6:	89 81       	ldd	r24, Y+1	; 0x01
     2a8:	9a 81       	ldd	r25, Y+2	; 0x02
     2aa:	fc 01       	movw	r30, r24
     2ac:	20 81       	ld	r18, Z
     2ae:	8d 81       	ldd	r24, Y+5	; 0x05
     2b0:	9e 81       	ldd	r25, Y+6	; 0x06
     2b2:	fc 01       	movw	r30, r24
     2b4:	80 81       	ld	r24, Z
     2b6:	91 81       	ldd	r25, Z+1	; 0x01
     2b8:	fc 01       	movw	r30, r24
     2ba:	80 81       	ld	r24, Z
     2bc:	28 17       	cp	r18, r24
     2be:	09 f0       	breq	.+2      	; 0x2c2 <getNextOrientation+0x19c>
     2c0:	3f c0       	rjmp	.+126    	; 0x340 <getNextOrientation+0x21a>
     2c2:	8b 81       	ldd	r24, Y+3	; 0x03
     2c4:	9c 81       	ldd	r25, Y+4	; 0x04
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 81       	ld	r18, Z
     2ca:	8f 81       	ldd	r24, Y+7	; 0x07
     2cc:	98 85       	ldd	r25, Y+8	; 0x08
     2ce:	fc 01       	movw	r30, r24
     2d0:	80 81       	ld	r24, Z
     2d2:	91 81       	ldd	r25, Z+1	; 0x01
     2d4:	fc 01       	movw	r30, r24
     2d6:	80 81       	ld	r24, Z
     2d8:	28 17       	cp	r18, r24
     2da:	90 f1       	brcs	.+100    	; 0x340 <getNextOrientation+0x21a>
		*current_position_x = **next_position_x;
     2dc:	8d 81       	ldd	r24, Y+5	; 0x05
     2de:	9e 81       	ldd	r25, Y+6	; 0x06
     2e0:	fc 01       	movw	r30, r24
     2e2:	80 81       	ld	r24, Z
     2e4:	91 81       	ldd	r25, Z+1	; 0x01
     2e6:	fc 01       	movw	r30, r24
     2e8:	20 81       	ld	r18, Z
     2ea:	89 81       	ldd	r24, Y+1	; 0x01
     2ec:	9a 81       	ldd	r25, Y+2	; 0x02
     2ee:	fc 01       	movw	r30, r24
     2f0:	20 83       	st	Z, r18
		*current_position_y = **next_position_y;
     2f2:	8f 81       	ldd	r24, Y+7	; 0x07
     2f4:	98 85       	ldd	r25, Y+8	; 0x08
     2f6:	fc 01       	movw	r30, r24
     2f8:	80 81       	ld	r24, Z
     2fa:	91 81       	ldd	r25, Z+1	; 0x01
     2fc:	fc 01       	movw	r30, r24
     2fe:	20 81       	ld	r18, Z
     300:	8b 81       	ldd	r24, Y+3	; 0x03
     302:	9c 81       	ldd	r25, Y+4	; 0x04
     304:	fc 01       	movw	r30, r24
     306:	20 83       	st	Z, r18

		*next_position_x = *next_position_x + 2;
     308:	8d 81       	ldd	r24, Y+5	; 0x05
     30a:	9e 81       	ldd	r25, Y+6	; 0x06
     30c:	fc 01       	movw	r30, r24
     30e:	80 81       	ld	r24, Z
     310:	91 81       	ldd	r25, Z+1	; 0x01
     312:	9c 01       	movw	r18, r24
     314:	2e 5f       	subi	r18, 0xFE	; 254
     316:	3f 4f       	sbci	r19, 0xFF	; 255
     318:	8d 81       	ldd	r24, Y+5	; 0x05
     31a:	9e 81       	ldd	r25, Y+6	; 0x06
     31c:	fc 01       	movw	r30, r24
     31e:	31 83       	std	Z+1, r19	; 0x01
     320:	20 83       	st	Z, r18
		*next_position_y = *next_position_y + 2;
     322:	8f 81       	ldd	r24, Y+7	; 0x07
     324:	98 85       	ldd	r25, Y+8	; 0x08
     326:	fc 01       	movw	r30, r24
     328:	80 81       	ld	r24, Z
     32a:	91 81       	ldd	r25, Z+1	; 0x01
     32c:	9c 01       	movw	r18, r24
     32e:	2e 5f       	subi	r18, 0xFE	; 254
     330:	3f 4f       	sbci	r19, 0xFF	; 255
     332:	8f 81       	ldd	r24, Y+7	; 0x07
     334:	98 85       	ldd	r25, Y+8	; 0x08
     336:	fc 01       	movw	r30, r24
     338:	31 83       	std	Z+1, r19	; 0x01
     33a:	20 83       	st	Z, r18

		return 'S';
     33c:	83 e5       	ldi	r24, 0x53	; 83
     33e:	4d c0       	rjmp	.+154    	; 0x3da <getNextOrientation+0x2b4>
	}
	else if(*current_position_x >= **next_position_x && *current_position_y == **next_position_y){
     340:	89 81       	ldd	r24, Y+1	; 0x01
     342:	9a 81       	ldd	r25, Y+2	; 0x02
     344:	fc 01       	movw	r30, r24
     346:	20 81       	ld	r18, Z
     348:	8d 81       	ldd	r24, Y+5	; 0x05
     34a:	9e 81       	ldd	r25, Y+6	; 0x06
     34c:	fc 01       	movw	r30, r24
     34e:	80 81       	ld	r24, Z
     350:	91 81       	ldd	r25, Z+1	; 0x01
     352:	fc 01       	movw	r30, r24
     354:	80 81       	ld	r24, Z
     356:	28 17       	cp	r18, r24
     358:	08 f4       	brcc	.+2      	; 0x35c <getNextOrientation+0x236>
     35a:	3f c0       	rjmp	.+126    	; 0x3da <getNextOrientation+0x2b4>
     35c:	8b 81       	ldd	r24, Y+3	; 0x03
     35e:	9c 81       	ldd	r25, Y+4	; 0x04
     360:	fc 01       	movw	r30, r24
     362:	20 81       	ld	r18, Z
     364:	8f 81       	ldd	r24, Y+7	; 0x07
     366:	98 85       	ldd	r25, Y+8	; 0x08
     368:	fc 01       	movw	r30, r24
     36a:	80 81       	ld	r24, Z
     36c:	91 81       	ldd	r25, Z+1	; 0x01
     36e:	fc 01       	movw	r30, r24
     370:	80 81       	ld	r24, Z
     372:	28 17       	cp	r18, r24
     374:	91 f5       	brne	.+100    	; 0x3da <getNextOrientation+0x2b4>
		*current_position_x = **next_position_x;
     376:	8d 81       	ldd	r24, Y+5	; 0x05
     378:	9e 81       	ldd	r25, Y+6	; 0x06
     37a:	fc 01       	movw	r30, r24
     37c:	80 81       	ld	r24, Z
     37e:	91 81       	ldd	r25, Z+1	; 0x01
     380:	fc 01       	movw	r30, r24
     382:	20 81       	ld	r18, Z
     384:	89 81       	ldd	r24, Y+1	; 0x01
     386:	9a 81       	ldd	r25, Y+2	; 0x02
     388:	fc 01       	movw	r30, r24
     38a:	20 83       	st	Z, r18
		*current_position_y = **next_position_y;
     38c:	8f 81       	ldd	r24, Y+7	; 0x07
     38e:	98 85       	ldd	r25, Y+8	; 0x08
     390:	fc 01       	movw	r30, r24
     392:	80 81       	ld	r24, Z
     394:	91 81       	ldd	r25, Z+1	; 0x01
     396:	fc 01       	movw	r30, r24
     398:	20 81       	ld	r18, Z
     39a:	8b 81       	ldd	r24, Y+3	; 0x03
     39c:	9c 81       	ldd	r25, Y+4	; 0x04
     39e:	fc 01       	movw	r30, r24
     3a0:	20 83       	st	Z, r18

		*next_position_x = *next_position_x + 2;
     3a2:	8d 81       	ldd	r24, Y+5	; 0x05
     3a4:	9e 81       	ldd	r25, Y+6	; 0x06
     3a6:	fc 01       	movw	r30, r24
     3a8:	80 81       	ld	r24, Z
     3aa:	91 81       	ldd	r25, Z+1	; 0x01
     3ac:	9c 01       	movw	r18, r24
     3ae:	2e 5f       	subi	r18, 0xFE	; 254
     3b0:	3f 4f       	sbci	r19, 0xFF	; 255
     3b2:	8d 81       	ldd	r24, Y+5	; 0x05
     3b4:	9e 81       	ldd	r25, Y+6	; 0x06
     3b6:	fc 01       	movw	r30, r24
     3b8:	31 83       	std	Z+1, r19	; 0x01
     3ba:	20 83       	st	Z, r18
		*next_position_y = *next_position_y + 2;
     3bc:	8f 81       	ldd	r24, Y+7	; 0x07
     3be:	98 85       	ldd	r25, Y+8	; 0x08
     3c0:	fc 01       	movw	r30, r24
     3c2:	80 81       	ld	r24, Z
     3c4:	91 81       	ldd	r25, Z+1	; 0x01
     3c6:	9c 01       	movw	r18, r24
     3c8:	2e 5f       	subi	r18, 0xFE	; 254
     3ca:	3f 4f       	sbci	r19, 0xFF	; 255
     3cc:	8f 81       	ldd	r24, Y+7	; 0x07
     3ce:	98 85       	ldd	r25, Y+8	; 0x08
     3d0:	fc 01       	movw	r30, r24
     3d2:	31 83       	std	Z+1, r19	; 0x01
     3d4:	20 83       	st	Z, r18

		return 'W';
     3d6:	87 e5       	ldi	r24, 0x57	; 87
     3d8:	00 c0       	rjmp	.+0      	; 0x3da <getNextOrientation+0x2b4>
	}
}
     3da:	28 96       	adiw	r28, 0x08	; 8
     3dc:	0f b6       	in	r0, 0x3f	; 63
     3de:	f8 94       	cli
     3e0:	de bf       	out	0x3e, r29	; 62
     3e2:	0f be       	out	0x3f, r0	; 63
     3e4:	cd bf       	out	0x3d, r28	; 61
     3e6:	df 91       	pop	r29
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <getNextMove>:

char getNextMove(char* current_orientation,char next_orientation)
{
     3ec:	cf 93       	push	r28
     3ee:	df 93       	push	r29
     3f0:	00 d0       	rcall	.+0      	; 0x3f2 <getNextMove+0x6>
     3f2:	cd b7       	in	r28, 0x3d	; 61
     3f4:	de b7       	in	r29, 0x3e	; 62
     3f6:	9a 83       	std	Y+2, r25	; 0x02
     3f8:	89 83       	std	Y+1, r24	; 0x01
     3fa:	6b 83       	std	Y+3, r22	; 0x03
	if((*current_orientation == 'N' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'S') ||
     3fc:	89 81       	ldd	r24, Y+1	; 0x01
     3fe:	9a 81       	ldd	r25, Y+2	; 0x02
     400:	fc 01       	movw	r30, r24
     402:	80 81       	ld	r24, Z
     404:	8e 34       	cpi	r24, 0x4E	; 78
     406:	19 f4       	brne	.+6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     408:	8b 81       	ldd	r24, Y+3	; 0x03
     40a:	85 34       	cpi	r24, 0x45	; 69
     40c:	d9 f0       	breq	.+54     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     40e:	89 81       	ldd	r24, Y+1	; 0x01
     410:	9a 81       	ldd	r25, Y+2	; 0x02
     412:	fc 01       	movw	r30, r24
     414:	80 81       	ld	r24, Z
     416:	85 34       	cpi	r24, 0x45	; 69
     418:	19 f4       	brne	.+6      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     41a:	8b 81       	ldd	r24, Y+3	; 0x03
     41c:	83 35       	cpi	r24, 0x53	; 83
     41e:	91 f0       	breq	.+36     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
	(*current_orientation=='S' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'N')){
     420:	89 81       	ldd	r24, Y+1	; 0x01
     422:	9a 81       	ldd	r25, Y+2	; 0x02
     424:	fc 01       	movw	r30, r24
     426:	80 81       	ld	r24, Z
	}
}

char getNextMove(char* current_orientation,char next_orientation)
{
	if((*current_orientation == 'N' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'S') ||
     428:	83 35       	cpi	r24, 0x53	; 83
     42a:	19 f4       	brne	.+6      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
	(*current_orientation=='S' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'N')){
     42c:	8b 81       	ldd	r24, Y+3	; 0x03
     42e:	87 35       	cpi	r24, 0x57	; 87
     430:	49 f0       	breq	.+18     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     432:	89 81       	ldd	r24, Y+1	; 0x01
     434:	9a 81       	ldd	r25, Y+2	; 0x02
     436:	fc 01       	movw	r30, r24
     438:	80 81       	ld	r24, Z
     43a:	87 35       	cpi	r24, 0x57	; 87
     43c:	51 f4       	brne	.+20     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
     43e:	8b 81       	ldd	r24, Y+3	; 0x03
     440:	8e 34       	cpi	r24, 0x4E	; 78
     442:	39 f4       	brne	.+14     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
		*current_orientation = next_orientation;
     444:	89 81       	ldd	r24, Y+1	; 0x01
     446:	9a 81       	ldd	r25, Y+2	; 0x02
     448:	2b 81       	ldd	r18, Y+3	; 0x03
     44a:	fc 01       	movw	r30, r24
     44c:	20 83       	st	Z, r18
		return 'R';
     44e:	82 e5       	ldi	r24, 0x52	; 82
     450:	57 c0       	rjmp	.+174    	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
	}
	else if((*current_orientation == 'N' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'S') ||
     452:	89 81       	ldd	r24, Y+1	; 0x01
     454:	9a 81       	ldd	r25, Y+2	; 0x02
     456:	fc 01       	movw	r30, r24
     458:	80 81       	ld	r24, Z
     45a:	8e 34       	cpi	r24, 0x4E	; 78
     45c:	19 f4       	brne	.+6      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     45e:	8b 81       	ldd	r24, Y+3	; 0x03
     460:	87 35       	cpi	r24, 0x57	; 87
     462:	d9 f0       	breq	.+54     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     464:	89 81       	ldd	r24, Y+1	; 0x01
     466:	9a 81       	ldd	r25, Y+2	; 0x02
     468:	fc 01       	movw	r30, r24
     46a:	80 81       	ld	r24, Z
     46c:	87 35       	cpi	r24, 0x57	; 87
     46e:	19 f4       	brne	.+6      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     470:	8b 81       	ldd	r24, Y+3	; 0x03
     472:	83 35       	cpi	r24, 0x53	; 83
     474:	91 f0       	breq	.+36     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
	(*current_orientation=='S' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'N')){
     476:	89 81       	ldd	r24, Y+1	; 0x01
     478:	9a 81       	ldd	r25, Y+2	; 0x02
     47a:	fc 01       	movw	r30, r24
     47c:	80 81       	ld	r24, Z
	if((*current_orientation == 'N' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'S') ||
	(*current_orientation=='S' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'N')){
		*current_orientation = next_orientation;
		return 'R';
	}
	else if((*current_orientation == 'N' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'S') ||
     47e:	83 35       	cpi	r24, 0x53	; 83
     480:	19 f4       	brne	.+6      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
	(*current_orientation=='S' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'N')){
     482:	8b 81       	ldd	r24, Y+3	; 0x03
     484:	85 34       	cpi	r24, 0x45	; 69
     486:	49 f0       	breq	.+18     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     488:	89 81       	ldd	r24, Y+1	; 0x01
     48a:	9a 81       	ldd	r25, Y+2	; 0x02
     48c:	fc 01       	movw	r30, r24
     48e:	80 81       	ld	r24, Z
     490:	85 34       	cpi	r24, 0x45	; 69
     492:	51 f4       	brne	.+20     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     494:	8b 81       	ldd	r24, Y+3	; 0x03
     496:	8e 34       	cpi	r24, 0x4E	; 78
     498:	39 f4       	brne	.+14     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
		*current_orientation = next_orientation;
     49a:	89 81       	ldd	r24, Y+1	; 0x01
     49c:	9a 81       	ldd	r25, Y+2	; 0x02
     49e:	2b 81       	ldd	r18, Y+3	; 0x03
     4a0:	fc 01       	movw	r30, r24
     4a2:	20 83       	st	Z, r18
		return 'L';
     4a4:	8c e4       	ldi	r24, 0x4C	; 76
     4a6:	2c c0       	rjmp	.+88     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
	}
	else if((*current_orientation == 'N' && next_orientation == 'N') || (*current_orientation == 'E' && next_orientation == 'E') ||
     4a8:	89 81       	ldd	r24, Y+1	; 0x01
     4aa:	9a 81       	ldd	r25, Y+2	; 0x02
     4ac:	fc 01       	movw	r30, r24
     4ae:	80 81       	ld	r24, Z
     4b0:	8e 34       	cpi	r24, 0x4E	; 78
     4b2:	19 f4       	brne	.+6      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     4b4:	8b 81       	ldd	r24, Y+3	; 0x03
     4b6:	8e 34       	cpi	r24, 0x4E	; 78
     4b8:	d9 f0       	breq	.+54     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     4ba:	89 81       	ldd	r24, Y+1	; 0x01
     4bc:	9a 81       	ldd	r25, Y+2	; 0x02
     4be:	fc 01       	movw	r30, r24
     4c0:	80 81       	ld	r24, Z
     4c2:	85 34       	cpi	r24, 0x45	; 69
     4c4:	19 f4       	brne	.+6      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
     4c6:	8b 81       	ldd	r24, Y+3	; 0x03
     4c8:	85 34       	cpi	r24, 0x45	; 69
     4ca:	91 f0       	breq	.+36     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
	(*current_orientation=='S' && next_orientation == 'S') || (*current_orientation == 'W' && next_orientation == 'W')){
     4cc:	89 81       	ldd	r24, Y+1	; 0x01
     4ce:	9a 81       	ldd	r25, Y+2	; 0x02
     4d0:	fc 01       	movw	r30, r24
     4d2:	80 81       	ld	r24, Z
	else if((*current_orientation == 'N' && next_orientation == 'W') || (*current_orientation == 'W' && next_orientation == 'S') ||
	(*current_orientation=='S' && next_orientation == 'E') || (*current_orientation == 'E' && next_orientation == 'N')){
		*current_orientation = next_orientation;
		return 'L';
	}
	else if((*current_orientation == 'N' && next_orientation == 'N') || (*current_orientation == 'E' && next_orientation == 'E') ||
     4d4:	83 35       	cpi	r24, 0x53	; 83
     4d6:	19 f4       	brne	.+6      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
	(*current_orientation=='S' && next_orientation == 'S') || (*current_orientation == 'W' && next_orientation == 'W')){
     4d8:	8b 81       	ldd	r24, Y+3	; 0x03
     4da:	83 35       	cpi	r24, 0x53	; 83
     4dc:	49 f0       	breq	.+18     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     4de:	89 81       	ldd	r24, Y+1	; 0x01
     4e0:	9a 81       	ldd	r25, Y+2	; 0x02
     4e2:	fc 01       	movw	r30, r24
     4e4:	80 81       	ld	r24, Z
     4e6:	87 35       	cpi	r24, 0x57	; 87
     4e8:	51 f4       	brne	.+20     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
     4ea:	8b 81       	ldd	r24, Y+3	; 0x03
     4ec:	87 35       	cpi	r24, 0x57	; 87
     4ee:	39 f4       	brne	.+14     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
		*current_orientation = next_orientation;
     4f0:	89 81       	ldd	r24, Y+1	; 0x01
     4f2:	9a 81       	ldd	r25, Y+2	; 0x02
     4f4:	2b 81       	ldd	r18, Y+3	; 0x03
     4f6:	fc 01       	movw	r30, r24
     4f8:	20 83       	st	Z, r18
		return 'F';
     4fa:	86 e4       	ldi	r24, 0x46	; 70
     4fc:	01 c0       	rjmp	.+2      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
	}
	else
	return 'S';
     4fe:	83 e5       	ldi	r24, 0x53	; 83
}
     500:	0f 90       	pop	r0
     502:	0f 90       	pop	r0
     504:	0f 90       	pop	r0
     506:	df 91       	pop	r29
     508:	cf 91       	pop	r28
     50a:	08 95       	ret

0000050c <path_follow>:



char path_follow(unsigned char L_sen, unsigned char C_sen, unsigned char R_sen)
{
     50c:	cf 93       	push	r28
     50e:	df 93       	push	r29
     510:	cd b7       	in	r28, 0x3d	; 61
     512:	de b7       	in	r29, 0x3e	; 62
     514:	61 97       	sbiw	r28, 0x11	; 17
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	f8 94       	cli
     51a:	de bf       	out	0x3e, r29	; 62
     51c:	0f be       	out	0x3f, r0	; 63
     51e:	cd bf       	out	0x3d, r28	; 61
     520:	8f 87       	std	Y+15, r24	; 0x0f
     522:	68 8b       	std	Y+16, r22	; 0x10
     524:	49 8b       	std	Y+17, r20	; 0x11
	Flag = 0;
     526:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <Flag>
	node_detected = 0;
     52a:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <node_detected>
	if ( (L_sen > min_thresh) && (C_sen > min_thresh) && (R_sen > min_thresh) )		// Node Detected									
     52e:	8f 85       	ldd	r24, Y+15	; 0x0f
     530:	83 33       	cpi	r24, 0x33	; 51
     532:	78 f0       	brcs	.+30     	; 0x552 <path_follow+0x46>
     534:	88 89       	ldd	r24, Y+16	; 0x10
     536:	83 33       	cpi	r24, 0x33	; 51
     538:	60 f0       	brcs	.+24     	; 0x552 <path_follow+0x46>
     53a:	89 89       	ldd	r24, Y+17	; 0x11
     53c:	83 33       	cpi	r24, 0x33	; 51
     53e:	48 f0       	brcs	.+18     	; 0x552 <path_follow+0x46>
	{
		velocity(0,0);
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	4d d2       	rcall	.+1178   	; 0x9e0 <velocity>
		Flag = 1;
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <Flag>
		node_detected = 1;
     54c:	81 e0       	ldi	r24, 0x01	; 1
     54e:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <node_detected>
	}
	
	if( (L_sen >= min_thresh) && (node_detected == 0) && ( Flag == 0 ) )		// Left
     552:	8f 85       	ldd	r24, Y+15	; 0x0f
     554:	82 33       	cpi	r24, 0x32	; 50
     556:	78 f0       	brcs	.+30     	; 0x576 <path_follow+0x6a>
     558:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <node_detected>
     55c:	88 23       	and	r24, r24
     55e:	59 f4       	brne	.+22     	; 0x576 <path_follow+0x6a>
     560:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <Flag>
     564:	88 23       	and	r24, r24
	{
		forward();
     566:	39 f4       	brne	.+14     	; 0x576 <path_follow+0x6a>
     568:	78 d2       	rcall	.+1264   	; 0xa5a <forward>
		velocity(80,180);
     56a:	64 eb       	ldi	r22, 0xB4	; 180
     56c:	80 e5       	ldi	r24, 0x50	; 80
     56e:	38 d2       	rcall	.+1136   	; 0x9e0 <velocity>
		Flag = 1;
     570:	81 e0       	ldi	r24, 0x01	; 1
     572:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <Flag>
	}

	if( (R_sen >= min_thresh) && (node_detected == 0) && ( Flag == 0 ) )       // right
     576:	89 89       	ldd	r24, Y+17	; 0x11
     578:	82 33       	cpi	r24, 0x32	; 50
     57a:	78 f0       	brcs	.+30     	; 0x59a <path_follow+0x8e>
     57c:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <node_detected>
     580:	88 23       	and	r24, r24
     582:	59 f4       	brne	.+22     	; 0x59a <path_follow+0x8e>
     584:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <Flag>
     588:	88 23       	and	r24, r24
	{
		forward();
     58a:	39 f4       	brne	.+14     	; 0x59a <path_follow+0x8e>
		velocity(180,80);																									
     58c:	66 d2       	rcall	.+1228   	; 0xa5a <forward>
     58e:	60 e5       	ldi	r22, 0x50	; 80
     590:	84 eb       	ldi	r24, 0xB4	; 180
     592:	26 d2       	rcall	.+1100   	; 0x9e0 <velocity>
		Flag = 1;
     594:	81 e0       	ldi	r24, 0x01	; 1
     596:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <Flag>
	}
	

	if ( (C_sen >= min_thresh) && (node_detected == 0) && ( Flag == 0 ) )		// Forward
     59a:	88 89       	ldd	r24, Y+16	; 0x10
     59c:	82 33       	cpi	r24, 0x32	; 50
     59e:	78 f0       	brcs	.+30     	; 0x5be <path_follow+0xb2>
     5a0:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <node_detected>
     5a4:	88 23       	and	r24, r24
     5a6:	59 f4       	brne	.+22     	; 0x5be <path_follow+0xb2>
     5a8:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <Flag>
	{
		forward();
     5ac:	88 23       	and	r24, r24
     5ae:	39 f4       	brne	.+14     	; 0x5be <path_follow+0xb2>
		velocity(200,212);																									
     5b0:	54 d2       	rcall	.+1192   	; 0xa5a <forward>
     5b2:	64 ed       	ldi	r22, 0xD4	; 212
     5b4:	88 ec       	ldi	r24, 0xC8	; 200
     5b6:	14 d2       	rcall	.+1064   	; 0x9e0 <velocity>
		Flag =1;
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <Flag>
	}
	
	if (node_detected)
     5be:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <node_detected>
     5c2:	88 23       	and	r24, r24
     5c4:	09 f4       	brne	.+2      	; 0x5c8 <path_follow+0xbc>
     5c6:	12 c1       	rjmp	.+548    	; 0x7ec <path_follow+0x2e0>
	{	
		lcd_string(2,1,"CO:");
     5c8:	46 e1       	ldi	r20, 0x16	; 22
     5ca:	52 e0       	ldi	r21, 0x02	; 2
     5cc:	61 e0       	ldi	r22, 0x01	; 1
     5ce:	82 e0       	ldi	r24, 0x02	; 2
     5d0:	0e 94 2d 11 	call	0x225a	; 0x225a <lcd_string>
		lcd_wr_char(2,4,current_orientation);
     5d4:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <current_orientation>
     5d8:	48 2f       	mov	r20, r24
     5da:	64 e0       	ldi	r22, 0x04	; 4
     5dc:	82 e0       	ldi	r24, 0x02	; 2
     5de:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <lcd_wr_char>
		
		lcd_string(1,1,"CP:");
     5e2:	4a e1       	ldi	r20, 0x1A	; 26
     5e4:	52 e0       	ldi	r21, 0x02	; 2
     5e6:	61 e0       	ldi	r22, 0x01	; 1
     5e8:	81 e0       	ldi	r24, 0x01	; 1
     5ea:	0e 94 2d 11 	call	0x225a	; 0x225a <lcd_string>
		lcd_wr_char(1,4,current_position_x);
     5ee:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <current_position_x>
     5f2:	48 2f       	mov	r20, r24
     5f4:	64 e0       	ldi	r22, 0x04	; 4
     5f6:	81 e0       	ldi	r24, 0x01	; 1
     5f8:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <lcd_wr_char>
		lcd_wr_char(1,5,',');
     5fc:	4c e2       	ldi	r20, 0x2C	; 44
     5fe:	65 e0       	ldi	r22, 0x05	; 5
     600:	81 e0       	ldi	r24, 0x01	; 1
     602:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <lcd_wr_char>
		lcd_wr_char(1,6,current_position_y);
     606:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <current_position_y>
     60a:	48 2f       	mov	r20, r24
     60c:	66 e0       	ldi	r22, 0x06	; 6
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <lcd_wr_char>
		
				lcd_string(1,8,"NP:");
     614:	4e e1       	ldi	r20, 0x1E	; 30
     616:	52 e0       	ldi	r21, 0x02	; 2
     618:	68 e0       	ldi	r22, 0x08	; 8
     61a:	81 e0       	ldi	r24, 0x01	; 1
     61c:	0e 94 2d 11 	call	0x225a	; 0x225a <lcd_string>
				lcd_wr_char(1,11,*next_position_x);
     620:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <next_position_x>
     624:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <next_position_x+0x1>
     628:	fc 01       	movw	r30, r24
     62a:	80 81       	ld	r24, Z
     62c:	48 2f       	mov	r20, r24
     62e:	6b e0       	ldi	r22, 0x0B	; 11
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <lcd_wr_char>
				lcd_wr_char(1,12,',');
     636:	4c e2       	ldi	r20, 0x2C	; 44
     638:	6c e0       	ldi	r22, 0x0C	; 12
     63a:	81 e0       	ldi	r24, 0x01	; 1
     63c:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <lcd_wr_char>
				lcd_wr_char(1,13,*next_position_y);
     640:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <next_position_y>
     644:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <next_position_y+0x1>
     648:	fc 01       	movw	r30, r24
     64a:	80 81       	ld	r24, Z
     64c:	48 2f       	mov	r20, r24
     64e:	6d e0       	ldi	r22, 0x0D	; 13
     650:	81 e0       	ldi	r24, 0x01	; 1
     652:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <lcd_wr_char>
				
		
		next_orientation = getNextOrientation(&current_position_x,&current_position_y,&next_position_x,&next_position_y);
     656:	24 e1       	ldi	r18, 0x14	; 20
     658:	32 e0       	ldi	r19, 0x02	; 2
     65a:	42 e1       	ldi	r20, 0x12	; 18
     65c:	52 e0       	ldi	r21, 0x02	; 2
     65e:	60 e1       	ldi	r22, 0x10	; 16
     660:	72 e0       	ldi	r23, 0x02	; 2
     662:	8f e0       	ldi	r24, 0x0F	; 15
     664:	92 e0       	ldi	r25, 0x02	; 2
     666:	5f dd       	rcall	.-1346   	; 0x126 <getNextOrientation>
     668:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <next_orientation>
		lcd_string(2,8,"NO:");
     66c:	42 e2       	ldi	r20, 0x22	; 34
     66e:	52 e0       	ldi	r21, 0x02	; 2
     670:	68 e0       	ldi	r22, 0x08	; 8
     672:	82 e0       	ldi	r24, 0x02	; 2
     674:	0e 94 2d 11 	call	0x225a	; 0x225a <lcd_string>
		lcd_wr_char(2,11,next_orientation);
     678:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <next_orientation>
     67c:	48 2f       	mov	r20, r24
     67e:	6b e0       	ldi	r22, 0x0B	; 11
     680:	82 e0       	ldi	r24, 0x02	; 2
     682:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <lcd_wr_char>
		
		
		if (next_orientation == 'x')
     686:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <next_orientation>
     68a:	88 37       	cpi	r24, 0x78	; 120
		  return 'x';
     68c:	11 f4       	brne	.+4      	; 0x692 <path_follow+0x186>
     68e:	88 e7       	ldi	r24, 0x78	; 120
		next_move = getNextMove(&current_orientation,next_orientation);
     690:	ad c0       	rjmp	.+346    	; 0x7ec <path_follow+0x2e0>
     692:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <next_orientation>
     696:	68 2f       	mov	r22, r24
     698:	81 e1       	ldi	r24, 0x11	; 17
     69a:	92 e0       	ldi	r25, 0x02	; 2
     69c:	a7 de       	rcall	.-690    	; 0x3ec <getNextMove>
     69e:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <next_move>
		current_orientation = next_orientation;
     6a2:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <next_orientation>
     6a6:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <current_orientation>
     6aa:	80 e0       	ldi	r24, 0x00	; 0
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	aa ef       	ldi	r26, 0xFA	; 250
     6b0:	b3 e4       	ldi	r27, 0x43	; 67
     6b2:	89 83       	std	Y+1, r24	; 0x01
     6b4:	9a 83       	std	Y+2, r25	; 0x02
     6b6:	ab 83       	std	Y+3, r26	; 0x03
     6b8:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     6ba:	26 e6       	ldi	r18, 0x66	; 102
     6bc:	36 e6       	ldi	r19, 0x66	; 102
     6be:	46 e6       	ldi	r20, 0x66	; 102
     6c0:	55 e4       	ldi	r21, 0x45	; 69
     6c2:	69 81       	ldd	r22, Y+1	; 0x01
     6c4:	7a 81       	ldd	r23, Y+2	; 0x02
     6c6:	8b 81       	ldd	r24, Y+3	; 0x03
     6c8:	9c 81       	ldd	r25, Y+4	; 0x04
     6ca:	0e 94 a4 12 	call	0x2548	; 0x2548 <__mulsf3>
     6ce:	dc 01       	movw	r26, r24
     6d0:	cb 01       	movw	r24, r22
     6d2:	8d 83       	std	Y+5, r24	; 0x05
     6d4:	9e 83       	std	Y+6, r25	; 0x06
     6d6:	af 83       	std	Y+7, r26	; 0x07
     6d8:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     6da:	20 e0       	ldi	r18, 0x00	; 0
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	40 e8       	ldi	r20, 0x80	; 128
     6e0:	5f e3       	ldi	r21, 0x3F	; 63
     6e2:	6d 81       	ldd	r22, Y+5	; 0x05
     6e4:	7e 81       	ldd	r23, Y+6	; 0x06
     6e6:	8f 81       	ldd	r24, Y+7	; 0x07
     6e8:	98 85       	ldd	r25, Y+8	; 0x08
     6ea:	0e 94 56 11 	call	0x22ac	; 0x22ac <__cmpsf2>
     6ee:	88 23       	and	r24, r24
     6f0:	2c f4       	brge	.+10     	; 0x6fc <path_follow+0x1f0>
		__ticks = 1;
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	9a 87       	std	Y+10, r25	; 0x0a
     6f8:	89 87       	std	Y+9, r24	; 0x09
     6fa:	3f c0       	rjmp	.+126    	; 0x77a <path_follow+0x26e>
	else if (__tmp > 65535)
     6fc:	20 e0       	ldi	r18, 0x00	; 0
     6fe:	3f ef       	ldi	r19, 0xFF	; 255
     700:	4f e7       	ldi	r20, 0x7F	; 127
     702:	57 e4       	ldi	r21, 0x47	; 71
     704:	6d 81       	ldd	r22, Y+5	; 0x05
     706:	7e 81       	ldd	r23, Y+6	; 0x06
     708:	8f 81       	ldd	r24, Y+7	; 0x07
     70a:	98 85       	ldd	r25, Y+8	; 0x08
     70c:	0e 94 a0 12 	call	0x2540	; 0x2540 <__gesf2>
     710:	18 16       	cp	r1, r24
     712:	4c f5       	brge	.+82     	; 0x766 <path_follow+0x25a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     714:	20 e0       	ldi	r18, 0x00	; 0
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	40 e2       	ldi	r20, 0x20	; 32
     71a:	51 e4       	ldi	r21, 0x41	; 65
     71c:	69 81       	ldd	r22, Y+1	; 0x01
     71e:	7a 81       	ldd	r23, Y+2	; 0x02
     720:	8b 81       	ldd	r24, Y+3	; 0x03
     722:	9c 81       	ldd	r25, Y+4	; 0x04
     724:	0e 94 a4 12 	call	0x2548	; 0x2548 <__mulsf3>
     728:	dc 01       	movw	r26, r24
     72a:	cb 01       	movw	r24, r22
     72c:	bc 01       	movw	r22, r24
     72e:	cd 01       	movw	r24, r26
     730:	0e 94 c2 11 	call	0x2384	; 0x2384 <__fixunssfsi>
     734:	dc 01       	movw	r26, r24
     736:	cb 01       	movw	r24, r22
     738:	9a 87       	std	Y+10, r25	; 0x0a
     73a:	89 87       	std	Y+9, r24	; 0x09
     73c:	0f c0       	rjmp	.+30     	; 0x75c <path_follow+0x250>
     73e:	80 e7       	ldi	r24, 0x70	; 112
     740:	91 e0       	ldi	r25, 0x01	; 1
     742:	9c 87       	std	Y+12, r25	; 0x0c
     744:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     746:	8b 85       	ldd	r24, Y+11	; 0x0b
     748:	9c 85       	ldd	r25, Y+12	; 0x0c
     74a:	01 97       	sbiw	r24, 0x01	; 1
     74c:	f1 f7       	brne	.-4      	; 0x74a <path_follow+0x23e>
     74e:	9c 87       	std	Y+12, r25	; 0x0c
     750:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     752:	89 85       	ldd	r24, Y+9	; 0x09
     754:	9a 85       	ldd	r25, Y+10	; 0x0a
     756:	01 97       	sbiw	r24, 0x01	; 1
     758:	9a 87       	std	Y+10, r25	; 0x0a
     75a:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     75c:	89 85       	ldd	r24, Y+9	; 0x09
     75e:	9a 85       	ldd	r25, Y+10	; 0x0a
     760:	89 2b       	or	r24, r25
     762:	69 f7       	brne	.-38     	; 0x73e <path_follow+0x232>
     764:	14 c0       	rjmp	.+40     	; 0x78e <path_follow+0x282>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     766:	6d 81       	ldd	r22, Y+5	; 0x05
     768:	7e 81       	ldd	r23, Y+6	; 0x06
     76a:	8f 81       	ldd	r24, Y+7	; 0x07
     76c:	98 85       	ldd	r25, Y+8	; 0x08
     76e:	0e 94 c2 11 	call	0x2384	; 0x2384 <__fixunssfsi>
     772:	dc 01       	movw	r26, r24
     774:	cb 01       	movw	r24, r22
     776:	9a 87       	std	Y+10, r25	; 0x0a
     778:	89 87       	std	Y+9, r24	; 0x09
     77a:	89 85       	ldd	r24, Y+9	; 0x09
     77c:	9a 85       	ldd	r25, Y+10	; 0x0a
     77e:	9e 87       	std	Y+14, r25	; 0x0e
     780:	8d 87       	std	Y+13, r24	; 0x0d
     782:	8d 85       	ldd	r24, Y+13	; 0x0d
     784:	9e 85       	ldd	r25, Y+14	; 0x0e
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	f1 f7       	brne	.-4      	; 0x786 <path_follow+0x27a>
     78a:	9e 87       	std	Y+14, r25	; 0x0e
     78c:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(500);

			switch(next_move)
     78e:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <next_move>
     792:	88 2f       	mov	r24, r24
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	8c 34       	cpi	r24, 0x4C	; 76
     798:	91 05       	cpc	r25, r1
     79a:	e1 f0       	breq	.+56     	; 0x7d4 <path_follow+0x2c8>
     79c:	8d 34       	cpi	r24, 0x4D	; 77
     79e:	91 05       	cpc	r25, r1
     7a0:	24 f4       	brge	.+8      	; 0x7aa <path_follow+0x29e>
     7a2:	86 34       	cpi	r24, 0x46	; 70
     7a4:	91 05       	cpc	r25, r1
     7a6:	41 f0       	breq	.+16     	; 0x7b8 <path_follow+0x2ac>
     7a8:	21 c0       	rjmp	.+66     	; 0x7ec <path_follow+0x2e0>
     7aa:	82 35       	cpi	r24, 0x52	; 82
     7ac:	91 05       	cpc	r25, r1
     7ae:	59 f0       	breq	.+22     	; 0x7c6 <path_follow+0x2ba>
     7b0:	83 35       	cpi	r24, 0x53	; 83
     7b2:	91 05       	cpc	r25, r1
			 {
				 
					case 'F':
							velocity(200,212);
     7b4:	b1 f0       	breq	.+44     	; 0x7e2 <path_follow+0x2d6>
     7b6:	1a c0       	rjmp	.+52     	; 0x7ec <path_follow+0x2e0>
     7b8:	64 ed       	ldi	r22, 0xD4	; 212
							forward_mm(85);
     7ba:	88 ec       	ldi	r24, 0xC8	; 200
     7bc:	11 d1       	rcall	.+546    	; 0x9e0 <velocity>
     7be:	85 e5       	ldi	r24, 0x55	; 85
							break;
     7c0:	90 e0       	ldi	r25, 0x00	; 0
											 
					case 'R':
						forward_mm(65);
     7c2:	f7 d2       	rcall	.+1518   	; 0xdb2 <forward_mm>
     7c4:	13 c0       	rjmp	.+38     	; 0x7ec <path_follow+0x2e0>
     7c6:	81 e4       	ldi	r24, 0x41	; 65
						right_degrees(90);
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	f3 d2       	rcall	.+1510   	; 0xdb2 <forward_mm>
     7cc:	8a e5       	ldi	r24, 0x5A	; 90
     7ce:	90 e0       	ldi	r25, 0x00	; 0
					break;
     7d0:	1a d3       	rcall	.+1588   	; 0xe06 <right_degrees>
					
					
					case 'L':
						forward_mm(65);
     7d2:	0c c0       	rjmp	.+24     	; 0x7ec <path_follow+0x2e0>
     7d4:	81 e4       	ldi	r24, 0x41	; 65
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	ec d2       	rcall	.+1496   	; 0xdb2 <forward_mm>
						left_degrees(90);
     7da:	8a e5       	ldi	r24, 0x5A	; 90
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	fe d2       	rcall	.+1532   	; 0xddc <left_degrees>
     7e0:	05 c0       	rjmp	.+10     	; 0x7ec <path_follow+0x2e0>
					break;
     7e2:	47 e4       	ldi	r20, 0x47	; 71
					
				   case 'S':
						lcd_wr_char(1,6,'G');		
     7e4:	66 e0       	ldi	r22, 0x06	; 6
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <lcd_wr_char>
     7ec:	61 96       	adiw	r28, 0x11	; 17
			 }
		 
	}
	

}
     7ee:	0f b6       	in	r0, 0x3f	; 63
     7f0:	f8 94       	cli
     7f2:	de bf       	out	0x3e, r29	; 62
     7f4:	0f be       	out	0x3f, r0	; 63
     7f6:	cd bf       	out	0x3d, r28	; 61
     7f8:	df 91       	pop	r29
     7fa:	cf 91       	pop	r28
     7fc:	08 95       	ret

000007fe <main>:
     7fe:	cf 93       	push	r28



int main(void)
{
     800:	df 93       	push	r29
     802:	00 d0       	rcall	.+0      	; 0x804 <main+0x6>
     804:	1f 92       	push	r1
     806:	cd b7       	in	r28, 0x3d	; 61
     808:	de b7       	in	r29, 0x3e	; 62
	unsigned char R_sense,C_sense,L_sense;
	char stop_flag;
	R_sense = 0;
     80a:	19 82       	std	Y+1, r1	; 0x01
	C_sense = 0;
     80c:	1a 82       	std	Y+2, r1	; 0x02
	L_sense = 0;
     80e:	1b 82       	std	Y+3, r1	; 0x03
	lcd_port_config();
     810:	e2 d3       	rcall	.+1988   	; 0xfd6 <lcd_port_config>
	lcd_init();
     812:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <lcd_init>
	motors_pin_config();
	pwm_pin_config();
     816:	26 d0       	rcall	.+76     	; 0x864 <motors_pin_config>
	position_encoder_pin_config();
     818:	3f d0       	rcall	.+126    	; 0x898 <pwm_pin_config>
	position_encoder_interrupt_config();
     81a:	58 d0       	rcall	.+176    	; 0x8cc <position_encoder_pin_config>
     81c:	f9 d0       	rcall	.+498    	; 0xa10 <position_encoder_interrupt_config>
	adc_port_config();					
     81e:	c3 d3       	rcall	.+1926   	; 0xfa6 <adc_port_config>
	adc_init();							
     820:	21 d3       	rcall	.+1602   	; 0xe64 <adc_init>
	timer5_init();
     822:	6e d0       	rcall	.+220    	; 0x900 <timer5_init>
     824:	68 ec       	ldi	r22, 0xC8	; 200
	velocity(200,200);
     826:	88 ec       	ldi	r24, 0xC8	; 200
     828:	db d0       	rcall	.+438    	; 0x9e0 <velocity>
     82a:	02 d3       	rcall	.+1540   	; 0xe30 <buzzer_init>
	buzzer_init();
     82c:	83 e0       	ldi	r24, 0x03	; 3
     82e:	61 d3       	rcall	.+1730   	; 0xef2 <ADC_Conversion>
	while(1)
	{
		L_sense = ADC_Conversion(left_wl_sensor_channel);
     830:	8b 83       	std	Y+3, r24	; 0x03
     832:	82 e0       	ldi	r24, 0x02	; 2
     834:	5e d3       	rcall	.+1724   	; 0xef2 <ADC_Conversion>
		C_sense = ADC_Conversion(center_wl_sensor_channel);
     836:	8a 83       	std	Y+2, r24	; 0x02
     838:	81 e0       	ldi	r24, 0x01	; 1
     83a:	5b d3       	rcall	.+1718   	; 0xef2 <ADC_Conversion>
     83c:	89 83       	std	Y+1, r24	; 0x01
		R_sense = ADC_Conversion(right_wl_sensor_channel);
     83e:	49 81       	ldd	r20, Y+1	; 0x01
     840:	6a 81       	ldd	r22, Y+2	; 0x02
     842:	8b 81       	ldd	r24, Y+3	; 0x03
     844:	63 de       	rcall	.-826    	; 0x50c <path_follow>
		stop_flag = path_follow(L_sense, C_sense, R_sense);
     846:	8c 83       	std	Y+4, r24	; 0x04
     848:	8c 81       	ldd	r24, Y+4	; 0x04
     84a:	88 37       	cpi	r24, 0x78	; 120
     84c:	09 f0       	breq	.+2      	; 0x850 <main+0x52>
     84e:	ee cf       	rjmp	.-36     	; 0x82c <main+0x2e>
     850:	00 00       	nop
		if(stop_flag == 'x')
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	0f 90       	pop	r0
		  break;
	}
     858:	0f 90       	pop	r0
		L_sense = ADC_Conversion(left_wl_sensor_channel);
		C_sense = ADC_Conversion(center_wl_sensor_channel);
		R_sense = ADC_Conversion(right_wl_sensor_channel);
		stop_flag = path_follow(L_sense, C_sense, R_sense);
		if(stop_flag == 'x')
		  break;
     85a:	0f 90       	pop	r0
     85c:	0f 90       	pop	r0
     85e:	df 91       	pop	r29
	}
}
     860:	cf 91       	pop	r28
     862:	08 95       	ret

00000864 <motors_pin_config>:
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
     868:	cd b7       	in	r28, 0x3d	; 61
     86a:	de b7       	in	r29, 0x3e	; 62
     86c:	81 e2       	ldi	r24, 0x21	; 33
}

void buzzer_off()
{
	buzzer_port_reg &=~(1<<buzzer_pin);
}
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	21 e2       	ldi	r18, 0x21	; 33
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	f9 01       	movw	r30, r18
     876:	20 81       	ld	r18, Z
     878:	2f 60       	ori	r18, 0x0F	; 15
     87a:	fc 01       	movw	r30, r24
     87c:	20 83       	st	Z, r18
     87e:	82 e2       	ldi	r24, 0x22	; 34
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	22 e2       	ldi	r18, 0x22	; 34
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	f9 01       	movw	r30, r18
     888:	20 81       	ld	r18, Z
     88a:	20 7f       	andi	r18, 0xF0	; 240
     88c:	fc 01       	movw	r30, r24
     88e:	20 83       	st	Z, r18
     890:	00 00       	nop
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	08 95       	ret

00000898 <pwm_pin_config>:
     898:	cf 93       	push	r28
     89a:	df 93       	push	r29
     89c:	cd b7       	in	r28, 0x3d	; 61
     89e:	de b7       	in	r29, 0x3e	; 62
     8a0:	8a e0       	ldi	r24, 0x0A	; 10
     8a2:	91 e0       	ldi	r25, 0x01	; 1
     8a4:	2a e0       	ldi	r18, 0x0A	; 10
     8a6:	31 e0       	ldi	r19, 0x01	; 1
     8a8:	f9 01       	movw	r30, r18
     8aa:	20 81       	ld	r18, Z
     8ac:	28 61       	ori	r18, 0x18	; 24
     8ae:	fc 01       	movw	r30, r24
     8b0:	20 83       	st	Z, r18
     8b2:	8b e0       	ldi	r24, 0x0B	; 11
     8b4:	91 e0       	ldi	r25, 0x01	; 1
     8b6:	2b e0       	ldi	r18, 0x0B	; 11
     8b8:	31 e0       	ldi	r19, 0x01	; 1
     8ba:	f9 01       	movw	r30, r18
     8bc:	20 81       	ld	r18, Z
     8be:	28 61       	ori	r18, 0x18	; 24
     8c0:	fc 01       	movw	r30, r24
     8c2:	20 83       	st	Z, r18
     8c4:	00 00       	nop
     8c6:	df 91       	pop	r29
     8c8:	cf 91       	pop	r28
     8ca:	08 95       	ret

000008cc <position_encoder_pin_config>:
     8cc:	cf 93       	push	r28
     8ce:	df 93       	push	r29
     8d0:	cd b7       	in	r28, 0x3d	; 61
     8d2:	de b7       	in	r29, 0x3e	; 62
     8d4:	8d e2       	ldi	r24, 0x2D	; 45
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	2d e2       	ldi	r18, 0x2D	; 45
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	f9 01       	movw	r30, r18
     8de:	20 81       	ld	r18, Z
     8e0:	2f 7c       	andi	r18, 0xCF	; 207
     8e2:	fc 01       	movw	r30, r24
     8e4:	20 83       	st	Z, r18
     8e6:	8e e2       	ldi	r24, 0x2E	; 46
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	2e e2       	ldi	r18, 0x2E	; 46
     8ec:	30 e0       	ldi	r19, 0x00	; 0
     8ee:	f9 01       	movw	r30, r18
     8f0:	20 81       	ld	r18, Z
     8f2:	20 63       	ori	r18, 0x30	; 48
     8f4:	fc 01       	movw	r30, r24
     8f6:	20 83       	st	Z, r18
     8f8:	00 00       	nop
     8fa:	df 91       	pop	r29
     8fc:	cf 91       	pop	r28
     8fe:	08 95       	ret

00000900 <timer5_init>:
     900:	cf 93       	push	r28
     902:	df 93       	push	r29
     904:	cd b7       	in	r28, 0x3d	; 61
     906:	de b7       	in	r29, 0x3e	; 62
     908:	81 e2       	ldi	r24, 0x21	; 33
     90a:	91 e0       	ldi	r25, 0x01	; 1
     90c:	fc 01       	movw	r30, r24
     90e:	10 82       	st	Z, r1
     910:	85 e2       	ldi	r24, 0x25	; 37
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	2f ef       	ldi	r18, 0xFF	; 255
     916:	fc 01       	movw	r30, r24
     918:	20 83       	st	Z, r18
     91a:	84 e2       	ldi	r24, 0x24	; 36
     91c:	91 e0       	ldi	r25, 0x01	; 1
     91e:	21 e0       	ldi	r18, 0x01	; 1
     920:	fc 01       	movw	r30, r24
     922:	20 83       	st	Z, r18
     924:	89 e2       	ldi	r24, 0x29	; 41
     926:	91 e0       	ldi	r25, 0x01	; 1
     928:	fc 01       	movw	r30, r24
     92a:	10 82       	st	Z, r1
     92c:	88 e2       	ldi	r24, 0x28	; 40
     92e:	91 e0       	ldi	r25, 0x01	; 1
     930:	2f ef       	ldi	r18, 0xFF	; 255
     932:	fc 01       	movw	r30, r24
     934:	20 83       	st	Z, r18
     936:	8b e2       	ldi	r24, 0x2B	; 43
     938:	91 e0       	ldi	r25, 0x01	; 1
     93a:	fc 01       	movw	r30, r24
     93c:	10 82       	st	Z, r1
     93e:	8a e2       	ldi	r24, 0x2A	; 42
     940:	91 e0       	ldi	r25, 0x01	; 1
     942:	2f ef       	ldi	r18, 0xFF	; 255
     944:	fc 01       	movw	r30, r24
     946:	20 83       	st	Z, r18
     948:	80 e2       	ldi	r24, 0x20	; 32
     94a:	91 e0       	ldi	r25, 0x01	; 1
     94c:	20 e2       	ldi	r18, 0x20	; 32
     94e:	31 e0       	ldi	r19, 0x01	; 1
     950:	f9 01       	movw	r30, r18
     952:	20 81       	ld	r18, Z
     954:	20 6a       	ori	r18, 0xA0	; 160
     956:	fc 01       	movw	r30, r24
     958:	20 83       	st	Z, r18
     95a:	80 e2       	ldi	r24, 0x20	; 32
     95c:	91 e0       	ldi	r25, 0x01	; 1
     95e:	20 e2       	ldi	r18, 0x20	; 32
     960:	31 e0       	ldi	r19, 0x01	; 1
     962:	f9 01       	movw	r30, r18
     964:	20 81       	ld	r18, Z
     966:	2f 7a       	andi	r18, 0xAF	; 175
     968:	fc 01       	movw	r30, r24
     96a:	20 83       	st	Z, r18
     96c:	80 e2       	ldi	r24, 0x20	; 32
     96e:	91 e0       	ldi	r25, 0x01	; 1
     970:	20 e2       	ldi	r18, 0x20	; 32
     972:	31 e0       	ldi	r19, 0x01	; 1
     974:	f9 01       	movw	r30, r18
     976:	20 81       	ld	r18, Z
     978:	21 60       	ori	r18, 0x01	; 1
     97a:	fc 01       	movw	r30, r24
     97c:	20 83       	st	Z, r18
     97e:	80 e2       	ldi	r24, 0x20	; 32
     980:	91 e0       	ldi	r25, 0x01	; 1
     982:	20 e2       	ldi	r18, 0x20	; 32
     984:	31 e0       	ldi	r19, 0x01	; 1
     986:	f9 01       	movw	r30, r18
     988:	20 81       	ld	r18, Z
     98a:	2d 7f       	andi	r18, 0xFD	; 253
     98c:	fc 01       	movw	r30, r24
     98e:	20 83       	st	Z, r18
     990:	81 e2       	ldi	r24, 0x21	; 33
     992:	91 e0       	ldi	r25, 0x01	; 1
     994:	21 e2       	ldi	r18, 0x21	; 33
     996:	31 e0       	ldi	r19, 0x01	; 1
     998:	f9 01       	movw	r30, r18
     99a:	20 81       	ld	r18, Z
     99c:	28 60       	ori	r18, 0x08	; 8
     99e:	fc 01       	movw	r30, r24
     9a0:	20 83       	st	Z, r18
     9a2:	81 e2       	ldi	r24, 0x21	; 33
     9a4:	91 e0       	ldi	r25, 0x01	; 1
     9a6:	21 e2       	ldi	r18, 0x21	; 33
     9a8:	31 e0       	ldi	r19, 0x01	; 1
     9aa:	f9 01       	movw	r30, r18
     9ac:	20 81       	ld	r18, Z
     9ae:	2f 7e       	andi	r18, 0xEF	; 239
     9b0:	fc 01       	movw	r30, r24
     9b2:	20 83       	st	Z, r18
     9b4:	81 e2       	ldi	r24, 0x21	; 33
     9b6:	91 e0       	ldi	r25, 0x01	; 1
     9b8:	21 e2       	ldi	r18, 0x21	; 33
     9ba:	31 e0       	ldi	r19, 0x01	; 1
     9bc:	f9 01       	movw	r30, r18
     9be:	20 81       	ld	r18, Z
     9c0:	23 60       	ori	r18, 0x03	; 3
     9c2:	fc 01       	movw	r30, r24
     9c4:	20 83       	st	Z, r18
     9c6:	81 e2       	ldi	r24, 0x21	; 33
     9c8:	91 e0       	ldi	r25, 0x01	; 1
     9ca:	21 e2       	ldi	r18, 0x21	; 33
     9cc:	31 e0       	ldi	r19, 0x01	; 1
     9ce:	f9 01       	movw	r30, r18
     9d0:	20 81       	ld	r18, Z
     9d2:	2b 7f       	andi	r18, 0xFB	; 251
     9d4:	fc 01       	movw	r30, r24
     9d6:	20 83       	st	Z, r18
     9d8:	00 00       	nop
     9da:	df 91       	pop	r29
     9dc:	cf 91       	pop	r28
     9de:	08 95       	ret

000009e0 <velocity>:
     9e0:	cf 93       	push	r28
     9e2:	df 93       	push	r29
     9e4:	1f 92       	push	r1
     9e6:	1f 92       	push	r1
     9e8:	cd b7       	in	r28, 0x3d	; 61
     9ea:	de b7       	in	r29, 0x3e	; 62
     9ec:	89 83       	std	Y+1, r24	; 0x01
     9ee:	6a 83       	std	Y+2, r22	; 0x02
     9f0:	88 e2       	ldi	r24, 0x28	; 40
     9f2:	91 e0       	ldi	r25, 0x01	; 1
     9f4:	29 81       	ldd	r18, Y+1	; 0x01
     9f6:	fc 01       	movw	r30, r24
     9f8:	20 83       	st	Z, r18
     9fa:	8a e2       	ldi	r24, 0x2A	; 42
     9fc:	91 e0       	ldi	r25, 0x01	; 1
     9fe:	2a 81       	ldd	r18, Y+2	; 0x02
     a00:	fc 01       	movw	r30, r24
     a02:	20 83       	st	Z, r18
     a04:	00 00       	nop
     a06:	0f 90       	pop	r0
     a08:	0f 90       	pop	r0
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	08 95       	ret

00000a10 <position_encoder_interrupt_config>:
     a10:	cf 93       	push	r28
     a12:	df 93       	push	r29
     a14:	cd b7       	in	r28, 0x3d	; 61
     a16:	de b7       	in	r29, 0x3e	; 62
     a18:	f8 94       	cli
     a1a:	8d e3       	ldi	r24, 0x3D	; 61
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	2d e3       	ldi	r18, 0x3D	; 61
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	f9 01       	movw	r30, r18
     a24:	20 81       	ld	r18, Z
     a26:	20 63       	ori	r18, 0x30	; 48
     a28:	fc 01       	movw	r30, r24
     a2a:	20 83       	st	Z, r18
     a2c:	8a e6       	ldi	r24, 0x6A	; 106
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	2a e6       	ldi	r18, 0x6A	; 106
     a32:	30 e0       	ldi	r19, 0x00	; 0
     a34:	f9 01       	movw	r30, r18
     a36:	20 81       	ld	r18, Z
     a38:	2a 60       	ori	r18, 0x0A	; 10
     a3a:	fc 01       	movw	r30, r24
     a3c:	20 83       	st	Z, r18
     a3e:	8a e6       	ldi	r24, 0x6A	; 106
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	2a e6       	ldi	r18, 0x6A	; 106
     a44:	30 e0       	ldi	r19, 0x00	; 0
     a46:	f9 01       	movw	r30, r18
     a48:	20 81       	ld	r18, Z
     a4a:	2a 7f       	andi	r18, 0xFA	; 250
     a4c:	fc 01       	movw	r30, r24
     a4e:	20 83       	st	Z, r18
     a50:	78 94       	sei
     a52:	00 00       	nop
     a54:	df 91       	pop	r29
     a56:	cf 91       	pop	r28
     a58:	08 95       	ret

00000a5a <forward>:
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	cd b7       	in	r28, 0x3d	; 61
     a60:	de b7       	in	r29, 0x3e	; 62
     a62:	82 e2       	ldi	r24, 0x22	; 34
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	22 e2       	ldi	r18, 0x22	; 34
     a68:	30 e0       	ldi	r19, 0x00	; 0
     a6a:	f9 01       	movw	r30, r18
     a6c:	20 81       	ld	r18, Z
     a6e:	26 7f       	andi	r18, 0xF6	; 246
     a70:	fc 01       	movw	r30, r24
     a72:	20 83       	st	Z, r18
     a74:	82 e2       	ldi	r24, 0x22	; 34
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	22 e2       	ldi	r18, 0x22	; 34
     a7a:	30 e0       	ldi	r19, 0x00	; 0
     a7c:	f9 01       	movw	r30, r18
     a7e:	20 81       	ld	r18, Z
     a80:	26 60       	ori	r18, 0x06	; 6
     a82:	fc 01       	movw	r30, r24
     a84:	20 83       	st	Z, r18
     a86:	00 00       	nop
     a88:	df 91       	pop	r29
     a8a:	cf 91       	pop	r28
     a8c:	08 95       	ret

00000a8e <left>:
     a8e:	cf 93       	push	r28
     a90:	df 93       	push	r29
     a92:	cd b7       	in	r28, 0x3d	; 61
     a94:	de b7       	in	r29, 0x3e	; 62
     a96:	82 e2       	ldi	r24, 0x22	; 34
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	22 e2       	ldi	r18, 0x22	; 34
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	f9 01       	movw	r30, r18
     aa0:	20 81       	ld	r18, Z
     aa2:	25 7f       	andi	r18, 0xF5	; 245
     aa4:	fc 01       	movw	r30, r24
     aa6:	20 83       	st	Z, r18
     aa8:	82 e2       	ldi	r24, 0x22	; 34
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	22 e2       	ldi	r18, 0x22	; 34
     aae:	30 e0       	ldi	r19, 0x00	; 0
     ab0:	f9 01       	movw	r30, r18
     ab2:	20 81       	ld	r18, Z
     ab4:	25 60       	ori	r18, 0x05	; 5
     ab6:	fc 01       	movw	r30, r24
     ab8:	20 83       	st	Z, r18
     aba:	00 00       	nop
     abc:	df 91       	pop	r29
     abe:	cf 91       	pop	r28
     ac0:	08 95       	ret

00000ac2 <right>:
     ac2:	cf 93       	push	r28
     ac4:	df 93       	push	r29
     ac6:	cd b7       	in	r28, 0x3d	; 61
     ac8:	de b7       	in	r29, 0x3e	; 62
     aca:	82 e2       	ldi	r24, 0x22	; 34
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	22 e2       	ldi	r18, 0x22	; 34
     ad0:	30 e0       	ldi	r19, 0x00	; 0
     ad2:	f9 01       	movw	r30, r18
     ad4:	20 81       	ld	r18, Z
     ad6:	2a 7f       	andi	r18, 0xFA	; 250
     ad8:	fc 01       	movw	r30, r24
     ada:	20 83       	st	Z, r18
     adc:	82 e2       	ldi	r24, 0x22	; 34
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	22 e2       	ldi	r18, 0x22	; 34
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	f9 01       	movw	r30, r18
     ae6:	20 81       	ld	r18, Z
     ae8:	2a 60       	ori	r18, 0x0A	; 10
     aea:	fc 01       	movw	r30, r24
     aec:	20 83       	st	Z, r18
     aee:	00 00       	nop
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	08 95       	ret

00000af6 <stop>:
     af6:	cf 93       	push	r28
     af8:	df 93       	push	r29
     afa:	cd b7       	in	r28, 0x3d	; 61
     afc:	de b7       	in	r29, 0x3e	; 62
     afe:	82 e2       	ldi	r24, 0x22	; 34
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	22 e2       	ldi	r18, 0x22	; 34
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	f9 01       	movw	r30, r18
     b08:	20 81       	ld	r18, Z
     b0a:	20 7f       	andi	r18, 0xF0	; 240
     b0c:	fc 01       	movw	r30, r24
     b0e:	20 83       	st	Z, r18
     b10:	00 00       	nop
     b12:	df 91       	pop	r29
     b14:	cf 91       	pop	r28
     b16:	08 95       	ret

00000b18 <angle_rotate>:
     b18:	cf 93       	push	r28
     b1a:	df 93       	push	r29
     b1c:	cd b7       	in	r28, 0x3d	; 61
     b1e:	de b7       	in	r29, 0x3e	; 62
     b20:	2a 97       	sbiw	r28, 0x0a	; 10
     b22:	0f b6       	in	r0, 0x3f	; 63
     b24:	f8 94       	cli
     b26:	de bf       	out	0x3e, r29	; 62
     b28:	0f be       	out	0x3f, r0	; 63
     b2a:	cd bf       	out	0x3d, r28	; 61
     b2c:	9a 87       	std	Y+10, r25	; 0x0a
     b2e:	89 87       	std	Y+9, r24	; 0x09
     b30:	19 82       	std	Y+1, r1	; 0x01
     b32:	1a 82       	std	Y+2, r1	; 0x02
     b34:	1b 82       	std	Y+3, r1	; 0x03
     b36:	1c 82       	std	Y+4, r1	; 0x04
     b38:	1d 82       	std	Y+5, r1	; 0x05
     b3a:	1e 82       	std	Y+6, r1	; 0x06
     b3c:	1f 82       	std	Y+7, r1	; 0x07
     b3e:	18 86       	std	Y+8, r1	; 0x08
     b40:	89 85       	ldd	r24, Y+9	; 0x09
     b42:	9a 85       	ldd	r25, Y+10	; 0x0a
     b44:	cc 01       	movw	r24, r24
     b46:	a0 e0       	ldi	r26, 0x00	; 0
     b48:	b0 e0       	ldi	r27, 0x00	; 0
     b4a:	bc 01       	movw	r22, r24
     b4c:	cd 01       	movw	r24, r26
     b4e:	0e 94 ee 11 	call	0x23dc	; 0x23dc <__floatunsisf>
     b52:	dc 01       	movw	r26, r24
     b54:	cb 01       	movw	r24, r22
     b56:	28 e4       	ldi	r18, 0x48	; 72
     b58:	31 ee       	ldi	r19, 0xE1	; 225
     b5a:	42 e8       	ldi	r20, 0x82	; 130
     b5c:	50 e4       	ldi	r21, 0x40	; 64
     b5e:	bc 01       	movw	r22, r24
     b60:	cd 01       	movw	r24, r26
     b62:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <__divsf3>
     b66:	dc 01       	movw	r26, r24
     b68:	cb 01       	movw	r24, r22
     b6a:	89 83       	std	Y+1, r24	; 0x01
     b6c:	9a 83       	std	Y+2, r25	; 0x02
     b6e:	ab 83       	std	Y+3, r26	; 0x03
     b70:	bc 83       	std	Y+4, r27	; 0x04
     b72:	69 81       	ldd	r22, Y+1	; 0x01
     b74:	7a 81       	ldd	r23, Y+2	; 0x02
     b76:	8b 81       	ldd	r24, Y+3	; 0x03
     b78:	9c 81       	ldd	r25, Y+4	; 0x04
     b7a:	0e 94 c2 11 	call	0x2384	; 0x2384 <__fixunssfsi>
     b7e:	dc 01       	movw	r26, r24
     b80:	cb 01       	movw	r24, r22
     b82:	cc 01       	movw	r24, r24
     b84:	a0 e0       	ldi	r26, 0x00	; 0
     b86:	b0 e0       	ldi	r27, 0x00	; 0
     b88:	8d 83       	std	Y+5, r24	; 0x05
     b8a:	9e 83       	std	Y+6, r25	; 0x06
     b8c:	af 83       	std	Y+7, r26	; 0x07
     b8e:	b8 87       	std	Y+8, r27	; 0x08
     b90:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <ShaftCountRight>
     b94:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <ShaftCountRight+0x1>
     b98:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <ShaftCountRight+0x2>
     b9c:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <ShaftCountRight+0x3>
     ba0:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <__data_end>
     ba4:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <__data_end+0x1>
     ba8:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <__data_end+0x2>
     bac:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <__data_end+0x3>
     bb0:	20 91 2a 02 	lds	r18, 0x022A	; 0x80022a <ShaftCountRight>
     bb4:	30 91 2b 02 	lds	r19, 0x022B	; 0x80022b <ShaftCountRight+0x1>
     bb8:	40 91 2c 02 	lds	r20, 0x022C	; 0x80022c <ShaftCountRight+0x2>
     bbc:	50 91 2d 02 	lds	r21, 0x022D	; 0x80022d <ShaftCountRight+0x3>
     bc0:	8d 81       	ldd	r24, Y+5	; 0x05
     bc2:	9e 81       	ldd	r25, Y+6	; 0x06
     bc4:	af 81       	ldd	r26, Y+7	; 0x07
     bc6:	b8 85       	ldd	r27, Y+8	; 0x08
     bc8:	28 17       	cp	r18, r24
     bca:	39 07       	cpc	r19, r25
     bcc:	4a 07       	cpc	r20, r26
     bce:	5b 07       	cpc	r21, r27
     bd0:	90 f4       	brcc	.+36     	; 0xbf6 <angle_rotate+0xde>
     bd2:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <__data_end>
     bd6:	30 91 27 02 	lds	r19, 0x0227	; 0x800227 <__data_end+0x1>
     bda:	40 91 28 02 	lds	r20, 0x0228	; 0x800228 <__data_end+0x2>
     bde:	50 91 29 02 	lds	r21, 0x0229	; 0x800229 <__data_end+0x3>
     be2:	8d 81       	ldd	r24, Y+5	; 0x05
     be4:	9e 81       	ldd	r25, Y+6	; 0x06
     be6:	af 81       	ldd	r26, Y+7	; 0x07
     be8:	b8 85       	ldd	r27, Y+8	; 0x08
     bea:	28 17       	cp	r18, r24
     bec:	39 07       	cpc	r19, r25
     bee:	4a 07       	cpc	r20, r26
     bf0:	5b 07       	cpc	r21, r27
     bf2:	08 f4       	brcc	.+2      	; 0xbf6 <angle_rotate+0xde>
     bf4:	dd cf       	rjmp	.-70     	; 0xbb0 <angle_rotate+0x98>
     bf6:	7f df       	rcall	.-258    	; 0xaf6 <stop>
     bf8:	00 00       	nop
     bfa:	2a 96       	adiw	r28, 0x0a	; 10
     bfc:	0f b6       	in	r0, 0x3f	; 63
     bfe:	f8 94       	cli
     c00:	de bf       	out	0x3e, r29	; 62
     c02:	0f be       	out	0x3f, r0	; 63
     c04:	cd bf       	out	0x3d, r28	; 61
     c06:	df 91       	pop	r29
     c08:	cf 91       	pop	r28
     c0a:	08 95       	ret

00000c0c <linear_distance_mm>:
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	cd b7       	in	r28, 0x3d	; 61
     c12:	de b7       	in	r29, 0x3e	; 62
     c14:	2a 97       	sbiw	r28, 0x0a	; 10
     c16:	0f b6       	in	r0, 0x3f	; 63
     c18:	f8 94       	cli
     c1a:	de bf       	out	0x3e, r29	; 62
     c1c:	0f be       	out	0x3f, r0	; 63
     c1e:	cd bf       	out	0x3d, r28	; 61
     c20:	9a 87       	std	Y+10, r25	; 0x0a
     c22:	89 87       	std	Y+9, r24	; 0x09
     c24:	19 82       	std	Y+1, r1	; 0x01
     c26:	1a 82       	std	Y+2, r1	; 0x02
     c28:	1b 82       	std	Y+3, r1	; 0x03
     c2a:	1c 82       	std	Y+4, r1	; 0x04
     c2c:	1d 82       	std	Y+5, r1	; 0x05
     c2e:	1e 82       	std	Y+6, r1	; 0x06
     c30:	1f 82       	std	Y+7, r1	; 0x07
     c32:	18 86       	std	Y+8, r1	; 0x08
     c34:	89 85       	ldd	r24, Y+9	; 0x09
     c36:	9a 85       	ldd	r25, Y+10	; 0x0a
     c38:	cc 01       	movw	r24, r24
     c3a:	a0 e0       	ldi	r26, 0x00	; 0
     c3c:	b0 e0       	ldi	r27, 0x00	; 0
     c3e:	bc 01       	movw	r22, r24
     c40:	cd 01       	movw	r24, r26
     c42:	0e 94 ee 11 	call	0x23dc	; 0x23dc <__floatunsisf>
     c46:	dc 01       	movw	r26, r24
     c48:	cb 01       	movw	r24, r22
     c4a:	25 ee       	ldi	r18, 0xE5	; 229
     c4c:	30 ed       	ldi	r19, 0xD0	; 208
     c4e:	4a ea       	ldi	r20, 0xAA	; 170
     c50:	50 e4       	ldi	r21, 0x40	; 64
     c52:	bc 01       	movw	r22, r24
     c54:	cd 01       	movw	r24, r26
     c56:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <__divsf3>
     c5a:	dc 01       	movw	r26, r24
     c5c:	cb 01       	movw	r24, r22
     c5e:	89 83       	std	Y+1, r24	; 0x01
     c60:	9a 83       	std	Y+2, r25	; 0x02
     c62:	ab 83       	std	Y+3, r26	; 0x03
     c64:	bc 83       	std	Y+4, r27	; 0x04
     c66:	69 81       	ldd	r22, Y+1	; 0x01
     c68:	7a 81       	ldd	r23, Y+2	; 0x02
     c6a:	8b 81       	ldd	r24, Y+3	; 0x03
     c6c:	9c 81       	ldd	r25, Y+4	; 0x04
     c6e:	0e 94 c2 11 	call	0x2384	; 0x2384 <__fixunssfsi>
     c72:	dc 01       	movw	r26, r24
     c74:	cb 01       	movw	r24, r22
     c76:	8d 83       	std	Y+5, r24	; 0x05
     c78:	9e 83       	std	Y+6, r25	; 0x06
     c7a:	af 83       	std	Y+7, r26	; 0x07
     c7c:	b8 87       	std	Y+8, r27	; 0x08
     c7e:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <ShaftCountRight>
     c82:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <ShaftCountRight+0x1>
     c86:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <ShaftCountRight+0x2>
     c8a:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <ShaftCountRight+0x3>
     c8e:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <__data_end>
     c92:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <__data_end+0x1>
     c96:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <__data_end+0x2>
     c9a:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <__data_end+0x3>
     c9e:	20 91 2a 02 	lds	r18, 0x022A	; 0x80022a <ShaftCountRight>
     ca2:	30 91 2b 02 	lds	r19, 0x022B	; 0x80022b <ShaftCountRight+0x1>
     ca6:	40 91 2c 02 	lds	r20, 0x022C	; 0x80022c <ShaftCountRight+0x2>
     caa:	50 91 2d 02 	lds	r21, 0x022D	; 0x80022d <ShaftCountRight+0x3>
     cae:	8d 81       	ldd	r24, Y+5	; 0x05
     cb0:	9e 81       	ldd	r25, Y+6	; 0x06
     cb2:	af 81       	ldd	r26, Y+7	; 0x07
     cb4:	b8 85       	ldd	r27, Y+8	; 0x08
     cb6:	28 17       	cp	r18, r24
     cb8:	39 07       	cpc	r19, r25
     cba:	4a 07       	cpc	r20, r26
     cbc:	5b 07       	cpc	r21, r27
     cbe:	90 f4       	brcc	.+36     	; 0xce4 <linear_distance_mm+0xd8>
     cc0:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <__data_end>
     cc4:	30 91 27 02 	lds	r19, 0x0227	; 0x800227 <__data_end+0x1>
     cc8:	40 91 28 02 	lds	r20, 0x0228	; 0x800228 <__data_end+0x2>
     ccc:	50 91 29 02 	lds	r21, 0x0229	; 0x800229 <__data_end+0x3>
     cd0:	8d 81       	ldd	r24, Y+5	; 0x05
     cd2:	9e 81       	ldd	r25, Y+6	; 0x06
     cd4:	af 81       	ldd	r26, Y+7	; 0x07
     cd6:	b8 85       	ldd	r27, Y+8	; 0x08
     cd8:	28 17       	cp	r18, r24
     cda:	39 07       	cpc	r19, r25
     cdc:	4a 07       	cpc	r20, r26
     cde:	5b 07       	cpc	r21, r27
     ce0:	08 f4       	brcc	.+2      	; 0xce4 <linear_distance_mm+0xd8>
     ce2:	dd cf       	rjmp	.-70     	; 0xc9e <linear_distance_mm+0x92>
     ce4:	08 df       	rcall	.-496    	; 0xaf6 <stop>
     ce6:	00 00       	nop
     ce8:	2a 96       	adiw	r28, 0x0a	; 10
     cea:	0f b6       	in	r0, 0x3f	; 63
     cec:	f8 94       	cli
     cee:	de bf       	out	0x3e, r29	; 62
     cf0:	0f be       	out	0x3f, r0	; 63
     cf2:	cd bf       	out	0x3d, r28	; 61
     cf4:	df 91       	pop	r29
     cf6:	cf 91       	pop	r28
     cf8:	08 95       	ret

00000cfa <__vector_6>:
     cfa:	1f 92       	push	r1
     cfc:	0f 92       	push	r0
     cfe:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     d02:	0f 92       	push	r0
     d04:	11 24       	eor	r1, r1
     d06:	8f 93       	push	r24
     d08:	9f 93       	push	r25
     d0a:	af 93       	push	r26
     d0c:	bf 93       	push	r27
     d0e:	cf 93       	push	r28
     d10:	df 93       	push	r29
     d12:	cd b7       	in	r28, 0x3d	; 61
     d14:	de b7       	in	r29, 0x3e	; 62
     d16:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <ShaftCountRight>
     d1a:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <ShaftCountRight+0x1>
     d1e:	a0 91 2c 02 	lds	r26, 0x022C	; 0x80022c <ShaftCountRight+0x2>
     d22:	b0 91 2d 02 	lds	r27, 0x022D	; 0x80022d <ShaftCountRight+0x3>
     d26:	01 96       	adiw	r24, 0x01	; 1
     d28:	a1 1d       	adc	r26, r1
     d2a:	b1 1d       	adc	r27, r1
     d2c:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <ShaftCountRight>
     d30:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <ShaftCountRight+0x1>
     d34:	a0 93 2c 02 	sts	0x022C, r26	; 0x80022c <ShaftCountRight+0x2>
     d38:	b0 93 2d 02 	sts	0x022D, r27	; 0x80022d <ShaftCountRight+0x3>
     d3c:	00 00       	nop
     d3e:	df 91       	pop	r29
     d40:	cf 91       	pop	r28
     d42:	bf 91       	pop	r27
     d44:	af 91       	pop	r26
     d46:	9f 91       	pop	r25
     d48:	8f 91       	pop	r24
     d4a:	0f 90       	pop	r0
     d4c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     d50:	0f 90       	pop	r0
     d52:	1f 90       	pop	r1
     d54:	18 95       	reti

00000d56 <__vector_5>:
     d56:	1f 92       	push	r1
     d58:	0f 92       	push	r0
     d5a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     d5e:	0f 92       	push	r0
     d60:	11 24       	eor	r1, r1
     d62:	8f 93       	push	r24
     d64:	9f 93       	push	r25
     d66:	af 93       	push	r26
     d68:	bf 93       	push	r27
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__data_end>
     d76:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__data_end+0x1>
     d7a:	a0 91 28 02 	lds	r26, 0x0228	; 0x800228 <__data_end+0x2>
     d7e:	b0 91 29 02 	lds	r27, 0x0229	; 0x800229 <__data_end+0x3>
     d82:	01 96       	adiw	r24, 0x01	; 1
     d84:	a1 1d       	adc	r26, r1
     d86:	b1 1d       	adc	r27, r1
     d88:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__data_end>
     d8c:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <__data_end+0x1>
     d90:	a0 93 28 02 	sts	0x0228, r26	; 0x800228 <__data_end+0x2>
     d94:	b0 93 29 02 	sts	0x0229, r27	; 0x800229 <__data_end+0x3>
     d98:	00 00       	nop
     d9a:	df 91       	pop	r29
     d9c:	cf 91       	pop	r28
     d9e:	bf 91       	pop	r27
     da0:	af 91       	pop	r26
     da2:	9f 91       	pop	r25
     da4:	8f 91       	pop	r24
     da6:	0f 90       	pop	r0
     da8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
     dac:	0f 90       	pop	r0
     dae:	1f 90       	pop	r1
     db0:	18 95       	reti

00000db2 <forward_mm>:
     db2:	cf 93       	push	r28
     db4:	df 93       	push	r29
     db6:	1f 92       	push	r1
     db8:	1f 92       	push	r1
     dba:	cd b7       	in	r28, 0x3d	; 61
     dbc:	de b7       	in	r29, 0x3e	; 62
     dbe:	9a 83       	std	Y+2, r25	; 0x02
     dc0:	89 83       	std	Y+1, r24	; 0x01
     dc2:	64 ed       	ldi	r22, 0xD4	; 212
     dc4:	88 ec       	ldi	r24, 0xC8	; 200
     dc6:	0c de       	rcall	.-1000   	; 0x9e0 <velocity>
     dc8:	48 de       	rcall	.-880    	; 0xa5a <forward>
     dca:	89 81       	ldd	r24, Y+1	; 0x01
     dcc:	9a 81       	ldd	r25, Y+2	; 0x02
     dce:	1e df       	rcall	.-452    	; 0xc0c <linear_distance_mm>
     dd0:	00 00       	nop
     dd2:	0f 90       	pop	r0
     dd4:	0f 90       	pop	r0
     dd6:	df 91       	pop	r29
     dd8:	cf 91       	pop	r28
     dda:	08 95       	ret

00000ddc <left_degrees>:
     ddc:	cf 93       	push	r28
     dde:	df 93       	push	r29
     de0:	1f 92       	push	r1
     de2:	1f 92       	push	r1
     de4:	cd b7       	in	r28, 0x3d	; 61
     de6:	de b7       	in	r29, 0x3e	; 62
     de8:	9a 83       	std	Y+2, r25	; 0x02
     dea:	89 83       	std	Y+1, r24	; 0x01
     dec:	64 ed       	ldi	r22, 0xD4	; 212
     dee:	88 ec       	ldi	r24, 0xC8	; 200
     df0:	f7 dd       	rcall	.-1042   	; 0x9e0 <velocity>
     df2:	4d de       	rcall	.-870    	; 0xa8e <left>
     df4:	89 81       	ldd	r24, Y+1	; 0x01
     df6:	9a 81       	ldd	r25, Y+2	; 0x02
     df8:	8f de       	rcall	.-738    	; 0xb18 <angle_rotate>
     dfa:	00 00       	nop
     dfc:	0f 90       	pop	r0
     dfe:	0f 90       	pop	r0
     e00:	df 91       	pop	r29
     e02:	cf 91       	pop	r28
     e04:	08 95       	ret

00000e06 <right_degrees>:
     e06:	cf 93       	push	r28
     e08:	df 93       	push	r29
     e0a:	1f 92       	push	r1
     e0c:	1f 92       	push	r1
     e0e:	cd b7       	in	r28, 0x3d	; 61
     e10:	de b7       	in	r29, 0x3e	; 62
     e12:	9a 83       	std	Y+2, r25	; 0x02
     e14:	89 83       	std	Y+1, r24	; 0x01
     e16:	64 ed       	ldi	r22, 0xD4	; 212
     e18:	88 ec       	ldi	r24, 0xC8	; 200
     e1a:	e2 dd       	rcall	.-1084   	; 0x9e0 <velocity>
     e1c:	52 de       	rcall	.-860    	; 0xac2 <right>
     e1e:	89 81       	ldd	r24, Y+1	; 0x01
     e20:	9a 81       	ldd	r25, Y+2	; 0x02
     e22:	7a de       	rcall	.-780    	; 0xb18 <angle_rotate>
     e24:	00 00       	nop
     e26:	0f 90       	pop	r0
     e28:	0f 90       	pop	r0
     e2a:	df 91       	pop	r29
     e2c:	cf 91       	pop	r28
     e2e:	08 95       	ret

00000e30 <buzzer_init>:
     e30:	cf 93       	push	r28
     e32:	df 93       	push	r29
     e34:	cd b7       	in	r28, 0x3d	; 61
     e36:	de b7       	in	r29, 0x3e	; 62
     e38:	87 e2       	ldi	r24, 0x27	; 39
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	27 e2       	ldi	r18, 0x27	; 39
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	f9 01       	movw	r30, r18
     e42:	20 81       	ld	r18, Z
     e44:	28 60       	ori	r18, 0x08	; 8
     e46:	fc 01       	movw	r30, r24
     e48:	20 83       	st	Z, r18
     e4a:	88 e2       	ldi	r24, 0x28	; 40
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	28 e2       	ldi	r18, 0x28	; 40
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	f9 01       	movw	r30, r18
     e54:	20 81       	ld	r18, Z
     e56:	27 7f       	andi	r18, 0xF7	; 247
     e58:	fc 01       	movw	r30, r24
     e5a:	20 83       	st	Z, r18
     e5c:	00 00       	nop
     e5e:	df 91       	pop	r29
     e60:	cf 91       	pop	r28
     e62:	08 95       	ret

00000e64 <adc_init>:


void adc_init(){
     e64:	cf 93       	push	r28
     e66:	df 93       	push	r29
     e68:	cd b7       	in	r28, 0x3d	; 61
     e6a:	de b7       	in	r29, 0x3e	; 62
	
	// enable ADC and pre-scalar = 64 (ADEN = 1, ADPS2 = 1, ADPS1 = 1, ADPS0 = 0)
	// and clear ADC start conversion bit, auto trigger enable bit, interrupt flag bit and interrupt enable bit
	ADCSRA_reg	|= ( (1 << ADEN_bit) | (1 << ADPS2_bit) | (1 << ADPS1_bit) );
     e6c:	8a e7       	ldi	r24, 0x7A	; 122
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	2a e7       	ldi	r18, 0x7A	; 122
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	f9 01       	movw	r30, r18
     e76:	20 81       	ld	r18, Z
     e78:	26 68       	ori	r18, 0x86	; 134
     e7a:	fc 01       	movw	r30, r24
     e7c:	20 83       	st	Z, r18
	ADCSRA_reg	&= ~( (1 << ADSC_bit) | (1 << ADATE_bit) | (1 << ADIF_bit) | (1 << ADIE_bit) | (1 << ADPS0_bit) );
     e7e:	8a e7       	ldi	r24, 0x7A	; 122
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	2a e7       	ldi	r18, 0x7A	; 122
     e84:	30 e0       	ldi	r19, 0x00	; 0
     e86:	f9 01       	movw	r30, r18
     e88:	20 81       	ld	r18, Z
     e8a:	26 78       	andi	r18, 0x86	; 134
     e8c:	fc 01       	movw	r30, r24
     e8e:	20 83       	st	Z, r18
	
	// In ADCSRB, disable Analog Comparator Multiplexer, MUX5 bit and ADC Auto Trigger Source bits
	ADCSRB_reg	&= ~( (1 << ACME_bit) | (1 << MUX5_bit) | (1 << ADTS2_bit) | (1 << ADTS1_bit) | (1 << ADTS0_bit) );
     e90:	8b e7       	ldi	r24, 0x7B	; 123
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	2b e7       	ldi	r18, 0x7B	; 123
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	f9 01       	movw	r30, r18
     e9a:	20 81       	ld	r18, Z
     e9c:	20 7b       	andi	r18, 0xB0	; 176
     e9e:	fc 01       	movw	r30, r24
     ea0:	20 83       	st	Z, r18
	
	// In ADMUX, set the Reference Selection bits to use the AVCC as reference, and disable the channel selection bits MUX[4:0]
	ADMUX_reg	&= ~( (1 << REFS1_bit) | (1 << MUX4_bit) | (1 << MUX3_bit) | (1 << MUX2_bit) | (1 << MUX1_bit) | (1 << MUX0_bit) );
     ea2:	8c e7       	ldi	r24, 0x7C	; 124
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	2c e7       	ldi	r18, 0x7C	; 124
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	f9 01       	movw	r30, r18
     eac:	20 81       	ld	r18, Z
     eae:	20 76       	andi	r18, 0x60	; 96
     eb0:	fc 01       	movw	r30, r24
     eb2:	20 83       	st	Z, r18
	ADMUX_reg	|= (1 << REFS0_bit);
     eb4:	8c e7       	ldi	r24, 0x7C	; 124
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	2c e7       	ldi	r18, 0x7C	; 124
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	f9 01       	movw	r30, r18
     ebe:	20 81       	ld	r18, Z
     ec0:	20 64       	ori	r18, 0x40	; 64
     ec2:	fc 01       	movw	r30, r24
     ec4:	20 83       	st	Z, r18
	
	// In ADMUX, enable the ADLAR bit for 8-bit ADC result
	ADMUX_reg	|= (1 << ADLAR_bit);
     ec6:	8c e7       	ldi	r24, 0x7C	; 124
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	2c e7       	ldi	r18, 0x7C	; 124
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	f9 01       	movw	r30, r18
     ed0:	20 81       	ld	r18, Z
     ed2:	20 62       	ori	r18, 0x20	; 32
     ed4:	fc 01       	movw	r30, r24
     ed6:	20 83       	st	Z, r18
	
	// In ACSR, disable the Analog Comparator by writing 1 to ACD_bit
	ACSR_reg	|= ( 1 << ACD_bit );
     ed8:	80 e5       	ldi	r24, 0x50	; 80
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	20 e5       	ldi	r18, 0x50	; 80
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	f9 01       	movw	r30, r18
     ee2:	20 81       	ld	r18, Z
     ee4:	20 68       	ori	r18, 0x80	; 128
     ee6:	fc 01       	movw	r30, r24
     ee8:	20 83       	st	Z, r18
}
     eea:	00 00       	nop
     eec:	df 91       	pop	r29
     eee:	cf 91       	pop	r28
     ef0:	08 95       	ret

00000ef2 <ADC_Conversion>:




unsigned char ADC_Conversion(unsigned char channel_num)
{
     ef2:	cf 93       	push	r28
     ef4:	df 93       	push	r29
     ef6:	1f 92       	push	r1
     ef8:	1f 92       	push	r1
     efa:	cd b7       	in	r28, 0x3d	; 61
     efc:	de b7       	in	r29, 0x3e	; 62
     efe:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char adc_8bit_data;
	
	// MUX[5:0] bits to select the ADC channel number
	if ( channel_num > 7 )
     f00:	8a 81       	ldd	r24, Y+2	; 0x02
     f02:	88 30       	cpi	r24, 0x08	; 8
     f04:	48 f0       	brcs	.+18     	; 0xf18 <ADC_Conversion+0x26>
	{
		ADCSRB_reg |= ( 1 << MUX5_bit );
     f06:	8b e7       	ldi	r24, 0x7B	; 123
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	2b e7       	ldi	r18, 0x7B	; 123
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	f9 01       	movw	r30, r18
     f10:	20 81       	ld	r18, Z
     f12:	28 60       	ori	r18, 0x08	; 8
     f14:	fc 01       	movw	r30, r24
     f16:	20 83       	st	Z, r18
	}
	channel_num	= channel_num & 0x07;
     f18:	8a 81       	ldd	r24, Y+2	; 0x02
     f1a:	87 70       	andi	r24, 0x07	; 7
     f1c:	8a 83       	std	Y+2, r24	; 0x02
	ADMUX_reg	= ( ADMUX_reg | channel_num );
     f1e:	8c e7       	ldi	r24, 0x7C	; 124
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	2c e7       	ldi	r18, 0x7C	; 124
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	f9 01       	movw	r30, r18
     f28:	30 81       	ld	r19, Z
     f2a:	2a 81       	ldd	r18, Y+2	; 0x02
     f2c:	23 2b       	or	r18, r19
     f2e:	fc 01       	movw	r30, r24
     f30:	20 83       	st	Z, r18
	
	// set the ADSC bit in ADCSRA register
	ADCSRA_reg		|= ( 1 << ADSC_bit );
     f32:	8a e7       	ldi	r24, 0x7A	; 122
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	2a e7       	ldi	r18, 0x7A	; 122
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	f9 01       	movw	r30, r18
     f3c:	20 81       	ld	r18, Z
     f3e:	20 64       	ori	r18, 0x40	; 64
     f40:	fc 01       	movw	r30, r24
     f42:	20 83       	st	Z, r18
	
	//Wait for ADC conversion to complete
	while( ( ADCSRA_reg & ( 1 << ADIF_bit ) ) == 0x00 );
     f44:	00 00       	nop
     f46:	8a e7       	ldi	r24, 0x7A	; 122
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	fc 01       	movw	r30, r24
     f4c:	80 81       	ld	r24, Z
     f4e:	88 2f       	mov	r24, r24
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	80 71       	andi	r24, 0x10	; 16
     f54:	99 27       	eor	r25, r25
     f56:	89 2b       	or	r24, r25
     f58:	b1 f3       	breq	.-20     	; 0xf46 <ADC_Conversion+0x54>
	
	adc_8bit_data = ADCH_reg;
     f5a:	89 e7       	ldi	r24, 0x79	; 121
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	fc 01       	movw	r30, r24
     f60:	80 81       	ld	r24, Z
     f62:	89 83       	std	Y+1, r24	; 0x01
	
	// clear ADIF bit by writing 1 to it
	ADCSRA_reg		|= ( 1 << ADIF_bit );
     f64:	8a e7       	ldi	r24, 0x7A	; 122
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	2a e7       	ldi	r18, 0x7A	; 122
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	f9 01       	movw	r30, r18
     f6e:	20 81       	ld	r18, Z
     f70:	20 61       	ori	r18, 0x10	; 16
     f72:	fc 01       	movw	r30, r24
     f74:	20 83       	st	Z, r18
	
	// clear the MUX5 bit
	ADCSRB_reg		&= ~( 1 << MUX5_bit );
     f76:	8b e7       	ldi	r24, 0x7B	; 123
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	2b e7       	ldi	r18, 0x7B	; 123
     f7c:	30 e0       	ldi	r19, 0x00	; 0
     f7e:	f9 01       	movw	r30, r18
     f80:	20 81       	ld	r18, Z
     f82:	27 7f       	andi	r18, 0xF7	; 247
     f84:	fc 01       	movw	r30, r24
     f86:	20 83       	st	Z, r18
	
	// clear the MUX[4:0] bits
	ADMUX_reg		&= ~( (1 << MUX4_bit) | (1 << MUX3_bit) | (1 << MUX2_bit) | (1 << MUX1_bit) | (1 << MUX0_bit) );
     f88:	8c e7       	ldi	r24, 0x7C	; 124
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	2c e7       	ldi	r18, 0x7C	; 124
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	f9 01       	movw	r30, r18
     f92:	20 81       	ld	r18, Z
     f94:	20 7e       	andi	r18, 0xE0	; 224
     f96:	fc 01       	movw	r30, r24
     f98:	20 83       	st	Z, r18
	
	return adc_8bit_data;
     f9a:	89 81       	ldd	r24, Y+1	; 0x01
}
     f9c:	0f 90       	pop	r0
     f9e:	0f 90       	pop	r0
     fa0:	df 91       	pop	r29
     fa2:	cf 91       	pop	r28
     fa4:	08 95       	ret

00000fa6 <adc_port_config>:



void adc_port_config (void)
{
     fa6:	cf 93       	push	r28
     fa8:	df 93       	push	r29
     faa:	cd b7       	in	r28, 0x3d	; 61
     fac:	de b7       	in	r29, 0x3e	; 62
	adc_sensor_low_ddr_reg		= 0x00;				// set PORTF direction as input
     fae:	80 e3       	ldi	r24, 0x30	; 48
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	fc 01       	movw	r30, r24
     fb4:	10 82       	st	Z, r1
	adc_sensor_low_port_reg		= 0x00;				// set PORTF pins floating
     fb6:	81 e3       	ldi	r24, 0x31	; 49
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	fc 01       	movw	r30, r24
     fbc:	10 82       	st	Z, r1
	adc_sensor_high_ddr_reg		= 0x00;				// set PORTK direction as input
     fbe:	87 e0       	ldi	r24, 0x07	; 7
     fc0:	91 e0       	ldi	r25, 0x01	; 1
     fc2:	fc 01       	movw	r30, r24
     fc4:	10 82       	st	Z, r1
	adc_sensor_high_port_reg	= 0x00;				// set PORTK pins floating
     fc6:	88 e0       	ldi	r24, 0x08	; 8
     fc8:	91 e0       	ldi	r25, 0x01	; 1
     fca:	fc 01       	movw	r30, r24
     fcc:	10 82       	st	Z, r1
}
     fce:	00 00       	nop
     fd0:	df 91       	pop	r29
     fd2:	cf 91       	pop	r28
     fd4:	08 95       	ret

00000fd6 <lcd_port_config>:
 * Example Call: lcd_clear();
 */
void lcd_clear (void)
{
	lcd_wr_command(0x01);
}
     fd6:	cf 93       	push	r28
     fd8:	df 93       	push	r29
     fda:	cd b7       	in	r28, 0x3d	; 61
     fdc:	de b7       	in	r29, 0x3e	; 62
     fde:	87 e2       	ldi	r24, 0x27	; 39
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	27 e2       	ldi	r18, 0x27	; 39
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	f9 01       	movw	r30, r18
     fe8:	20 81       	ld	r18, Z
     fea:	27 60       	ori	r18, 0x07	; 7
     fec:	fc 01       	movw	r30, r24
     fee:	20 83       	st	Z, r18
     ff0:	87 e2       	ldi	r24, 0x27	; 39
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	27 e2       	ldi	r18, 0x27	; 39
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	f9 01       	movw	r30, r18
     ffa:	20 81       	ld	r18, Z
     ffc:	20 6f       	ori	r18, 0xF0	; 240
     ffe:	fc 01       	movw	r30, r24
    1000:	20 83       	st	Z, r18
    1002:	88 e2       	ldi	r24, 0x28	; 40
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	28 e2       	ldi	r18, 0x28	; 40
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	f9 01       	movw	r30, r18
    100c:	20 81       	ld	r18, Z
    100e:	28 7f       	andi	r18, 0xF8	; 248
    1010:	fc 01       	movw	r30, r24
    1012:	20 83       	st	Z, r18
    1014:	88 e2       	ldi	r24, 0x28	; 40
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	28 e2       	ldi	r18, 0x28	; 40
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	f9 01       	movw	r30, r18
    101e:	20 81       	ld	r18, Z
    1020:	2f 70       	andi	r18, 0x0F	; 15
    1022:	fc 01       	movw	r30, r24
    1024:	20 83       	st	Z, r18
    1026:	00 00       	nop
    1028:	df 91       	pop	r29
    102a:	cf 91       	pop	r28
    102c:	08 95       	ret

0000102e <lcd_set_4bit>:
    102e:	0f 93       	push	r16
    1030:	1f 93       	push	r17
    1032:	cf 93       	push	r28
    1034:	df 93       	push	r29
    1036:	cd b7       	in	r28, 0x3d	; 61
    1038:	de b7       	in	r29, 0x3e	; 62
    103a:	c0 57       	subi	r28, 0x70	; 112
    103c:	d1 09       	sbc	r29, r1
    103e:	0f b6       	in	r0, 0x3f	; 63
    1040:	f8 94       	cli
    1042:	de bf       	out	0x3e, r29	; 62
    1044:	0f be       	out	0x3f, r0	; 63
    1046:	cd bf       	out	0x3d, r28	; 61
    1048:	80 e0       	ldi	r24, 0x00	; 0
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	a0 e8       	ldi	r26, 0x80	; 128
    104e:	bf e3       	ldi	r27, 0x3F	; 63
    1050:	89 83       	std	Y+1, r24	; 0x01
    1052:	9a 83       	std	Y+2, r25	; 0x02
    1054:	ab 83       	std	Y+3, r26	; 0x03
    1056:	bc 83       	std	Y+4, r27	; 0x04
    1058:	8e 01       	movw	r16, r28
    105a:	09 59       	subi	r16, 0x99	; 153
    105c:	1f 4f       	sbci	r17, 0xFF	; 255
    105e:	26 e6       	ldi	r18, 0x66	; 102
    1060:	36 e6       	ldi	r19, 0x66	; 102
    1062:	46 e6       	ldi	r20, 0x66	; 102
    1064:	55 e4       	ldi	r21, 0x45	; 69
    1066:	69 81       	ldd	r22, Y+1	; 0x01
    1068:	7a 81       	ldd	r23, Y+2	; 0x02
    106a:	8b 81       	ldd	r24, Y+3	; 0x03
    106c:	9c 81       	ldd	r25, Y+4	; 0x04
    106e:	0e 94 a4 12 	call	0x2548	; 0x2548 <__mulsf3>
    1072:	dc 01       	movw	r26, r24
    1074:	cb 01       	movw	r24, r22
    1076:	f8 01       	movw	r30, r16
    1078:	80 83       	st	Z, r24
    107a:	91 83       	std	Z+1, r25	; 0x01
    107c:	a2 83       	std	Z+2, r26	; 0x02
    107e:	b3 83       	std	Z+3, r27	; 0x03
    1080:	ce 01       	movw	r24, r28
    1082:	89 59       	subi	r24, 0x99	; 153
    1084:	9f 4f       	sbci	r25, 0xFF	; 255
    1086:	20 e0       	ldi	r18, 0x00	; 0
    1088:	30 e0       	ldi	r19, 0x00	; 0
    108a:	40 e8       	ldi	r20, 0x80	; 128
    108c:	5f e3       	ldi	r21, 0x3F	; 63
    108e:	fc 01       	movw	r30, r24
    1090:	60 81       	ld	r22, Z
    1092:	71 81       	ldd	r23, Z+1	; 0x01
    1094:	82 81       	ldd	r24, Z+2	; 0x02
    1096:	93 81       	ldd	r25, Z+3	; 0x03
    1098:	0e 94 56 11 	call	0x22ac	; 0x22ac <__cmpsf2>
    109c:	88 23       	and	r24, r24
    109e:	4c f4       	brge	.+18     	; 0x10b2 <lcd_set_4bit+0x84>
    10a0:	ce 01       	movw	r24, r28
    10a2:	85 59       	subi	r24, 0x95	; 149
    10a4:	9f 4f       	sbci	r25, 0xFF	; 255
    10a6:	21 e0       	ldi	r18, 0x01	; 1
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	fc 01       	movw	r30, r24
    10ac:	31 83       	std	Z+1, r19	; 0x01
    10ae:	20 83       	st	Z, r18
    10b0:	69 c0       	rjmp	.+210    	; 0x1184 <lcd_set_4bit+0x156>
    10b2:	ce 01       	movw	r24, r28
    10b4:	89 59       	subi	r24, 0x99	; 153
    10b6:	9f 4f       	sbci	r25, 0xFF	; 255
    10b8:	20 e0       	ldi	r18, 0x00	; 0
    10ba:	3f ef       	ldi	r19, 0xFF	; 255
    10bc:	4f e7       	ldi	r20, 0x7F	; 127
    10be:	57 e4       	ldi	r21, 0x47	; 71
    10c0:	fc 01       	movw	r30, r24
    10c2:	60 81       	ld	r22, Z
    10c4:	71 81       	ldd	r23, Z+1	; 0x01
    10c6:	82 81       	ldd	r24, Z+2	; 0x02
    10c8:	93 81       	ldd	r25, Z+3	; 0x03
    10ca:	0e 94 a0 12 	call	0x2540	; 0x2540 <__gesf2>
    10ce:	18 16       	cp	r1, r24
    10d0:	0c f0       	brlt	.+2      	; 0x10d4 <lcd_set_4bit+0xa6>
    10d2:	46 c0       	rjmp	.+140    	; 0x1160 <lcd_set_4bit+0x132>
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	40 e2       	ldi	r20, 0x20	; 32
    10da:	51 e4       	ldi	r21, 0x41	; 65
    10dc:	69 81       	ldd	r22, Y+1	; 0x01
    10de:	7a 81       	ldd	r23, Y+2	; 0x02
    10e0:	8b 81       	ldd	r24, Y+3	; 0x03
    10e2:	9c 81       	ldd	r25, Y+4	; 0x04
    10e4:	0e 94 a4 12 	call	0x2548	; 0x2548 <__mulsf3>
    10e8:	dc 01       	movw	r26, r24
    10ea:	cb 01       	movw	r24, r22
    10ec:	8e 01       	movw	r16, r28
    10ee:	05 59       	subi	r16, 0x95	; 149
    10f0:	1f 4f       	sbci	r17, 0xFF	; 255
    10f2:	bc 01       	movw	r22, r24
    10f4:	cd 01       	movw	r24, r26
    10f6:	0e 94 c2 11 	call	0x2384	; 0x2384 <__fixunssfsi>
    10fa:	dc 01       	movw	r26, r24
    10fc:	cb 01       	movw	r24, r22
    10fe:	f8 01       	movw	r30, r16
    1100:	91 83       	std	Z+1, r25	; 0x01
    1102:	80 83       	st	Z, r24
    1104:	24 c0       	rjmp	.+72     	; 0x114e <lcd_set_4bit+0x120>
    1106:	ce 01       	movw	r24, r28
    1108:	83 59       	subi	r24, 0x93	; 147
    110a:	9f 4f       	sbci	r25, 0xFF	; 255
    110c:	20 e7       	ldi	r18, 0x70	; 112
    110e:	31 e0       	ldi	r19, 0x01	; 1
    1110:	fc 01       	movw	r30, r24
    1112:	31 83       	std	Z+1, r19	; 0x01
    1114:	20 83       	st	Z, r18
    1116:	ce 01       	movw	r24, r28
    1118:	83 59       	subi	r24, 0x93	; 147
    111a:	9f 4f       	sbci	r25, 0xFF	; 255
    111c:	fc 01       	movw	r30, r24
    111e:	80 81       	ld	r24, Z
    1120:	91 81       	ldd	r25, Z+1	; 0x01
    1122:	01 97       	sbiw	r24, 0x01	; 1
    1124:	f1 f7       	brne	.-4      	; 0x1122 <lcd_set_4bit+0xf4>
    1126:	9e 01       	movw	r18, r28
    1128:	23 59       	subi	r18, 0x93	; 147
    112a:	3f 4f       	sbci	r19, 0xFF	; 255
    112c:	f9 01       	movw	r30, r18
    112e:	91 83       	std	Z+1, r25	; 0x01
    1130:	80 83       	st	Z, r24
    1132:	ce 01       	movw	r24, r28
    1134:	85 59       	subi	r24, 0x95	; 149
    1136:	9f 4f       	sbci	r25, 0xFF	; 255
    1138:	9e 01       	movw	r18, r28
    113a:	25 59       	subi	r18, 0x95	; 149
    113c:	3f 4f       	sbci	r19, 0xFF	; 255
    113e:	f9 01       	movw	r30, r18
    1140:	20 81       	ld	r18, Z
    1142:	31 81       	ldd	r19, Z+1	; 0x01
    1144:	21 50       	subi	r18, 0x01	; 1
    1146:	31 09       	sbc	r19, r1
    1148:	fc 01       	movw	r30, r24
    114a:	31 83       	std	Z+1, r19	; 0x01
    114c:	20 83       	st	Z, r18
    114e:	ce 01       	movw	r24, r28
    1150:	85 59       	subi	r24, 0x95	; 149
    1152:	9f 4f       	sbci	r25, 0xFF	; 255
    1154:	fc 01       	movw	r30, r24
    1156:	80 81       	ld	r24, Z
    1158:	91 81       	ldd	r25, Z+1	; 0x01
    115a:	89 2b       	or	r24, r25
    115c:	a1 f6       	brne	.-88     	; 0x1106 <lcd_set_4bit+0xd8>
    115e:	2c c0       	rjmp	.+88     	; 0x11b8 <lcd_set_4bit+0x18a>
    1160:	8e 01       	movw	r16, r28
    1162:	05 59       	subi	r16, 0x95	; 149
    1164:	1f 4f       	sbci	r17, 0xFF	; 255
    1166:	ce 01       	movw	r24, r28
    1168:	89 59       	subi	r24, 0x99	; 153
    116a:	9f 4f       	sbci	r25, 0xFF	; 255
    116c:	fc 01       	movw	r30, r24
    116e:	60 81       	ld	r22, Z
    1170:	71 81       	ldd	r23, Z+1	; 0x01
    1172:	82 81       	ldd	r24, Z+2	; 0x02
    1174:	93 81       	ldd	r25, Z+3	; 0x03
    1176:	0e 94 c2 11 	call	0x2384	; 0x2384 <__fixunssfsi>
    117a:	dc 01       	movw	r26, r24
    117c:	cb 01       	movw	r24, r22
    117e:	f8 01       	movw	r30, r16
    1180:	91 83       	std	Z+1, r25	; 0x01
    1182:	80 83       	st	Z, r24
    1184:	ce 01       	movw	r24, r28
    1186:	81 59       	subi	r24, 0x91	; 145
    1188:	9f 4f       	sbci	r25, 0xFF	; 255
    118a:	9e 01       	movw	r18, r28
    118c:	25 59       	subi	r18, 0x95	; 149
    118e:	3f 4f       	sbci	r19, 0xFF	; 255
    1190:	f9 01       	movw	r30, r18
    1192:	20 81       	ld	r18, Z
    1194:	31 81       	ldd	r19, Z+1	; 0x01
    1196:	fc 01       	movw	r30, r24
    1198:	31 83       	std	Z+1, r19	; 0x01
    119a:	20 83       	st	Z, r18
    119c:	ce 01       	movw	r24, r28
    119e:	81 59       	subi	r24, 0x91	; 145
    11a0:	9f 4f       	sbci	r25, 0xFF	; 255
    11a2:	fc 01       	movw	r30, r24
    11a4:	80 81       	ld	r24, Z
    11a6:	91 81       	ldd	r25, Z+1	; 0x01
    11a8:	01 97       	sbiw	r24, 0x01	; 1
    11aa:	f1 f7       	brne	.-4      	; 0x11a8 <lcd_set_4bit+0x17a>
    11ac:	9e 01       	movw	r18, r28
    11ae:	21 59       	subi	r18, 0x91	; 145
    11b0:	3f 4f       	sbci	r19, 0xFF	; 255
    11b2:	f9 01       	movw	r30, r18
    11b4:	91 83       	std	Z+1, r25	; 0x01
    11b6:	80 83       	st	Z, r24
    11b8:	88 e2       	ldi	r24, 0x28	; 40
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	28 e2       	ldi	r18, 0x28	; 40
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	f9 01       	movw	r30, r18
    11c2:	20 81       	ld	r18, Z
    11c4:	2e 7f       	andi	r18, 0xFE	; 254
    11c6:	fc 01       	movw	r30, r24
    11c8:	20 83       	st	Z, r18
    11ca:	88 e2       	ldi	r24, 0x28	; 40
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	28 e2       	ldi	r18, 0x28	; 40
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	f9 01       	movw	r30, r18
    11d4:	20 81       	ld	r18, Z
    11d6:	2d 7f       	andi	r18, 0xFD	; 253
    11d8:	fc 01       	movw	r30, r24
    11da:	20 83       	st	Z, r18
    11dc:	88 e2       	ldi	r24, 0x28	; 40
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	20 e3       	ldi	r18, 0x30	; 48
    11e2:	fc 01       	movw	r30, r24
    11e4:	20 83       	st	Z, r18
    11e6:	88 e2       	ldi	r24, 0x28	; 40
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	28 e2       	ldi	r18, 0x28	; 40
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	f9 01       	movw	r30, r18
    11f0:	20 81       	ld	r18, Z
    11f2:	24 60       	ori	r18, 0x04	; 4
    11f4:	fc 01       	movw	r30, r24
    11f6:	20 83       	st	Z, r18
    11f8:	80 e0       	ldi	r24, 0x00	; 0
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	a0 ea       	ldi	r26, 0xA0	; 160
    11fe:	b0 e4       	ldi	r27, 0x40	; 64
    1200:	8d 83       	std	Y+5, r24	; 0x05
    1202:	9e 83       	std	Y+6, r25	; 0x06
    1204:	af 83       	std	Y+7, r26	; 0x07
    1206:	b8 87       	std	Y+8, r27	; 0x08
    1208:	8e 01       	movw	r16, r28
    120a:	03 5a       	subi	r16, 0xA3	; 163
    120c:	1f 4f       	sbci	r17, 0xFF	; 255
    120e:	26 e6       	ldi	r18, 0x66	; 102
    1210:	36 e6       	ldi	r19, 0x66	; 102
    1212:	46 e6       	ldi	r20, 0x66	; 102
    1214:	55 e4       	ldi	r21, 0x45	; 69
    1216:	6d 81       	ldd	r22, Y+5	; 0x05
    1218:	7e 81       	ldd	r23, Y+6	; 0x06
    121a:	8f 81       	ldd	r24, Y+7	; 0x07
    121c:	98 85       	ldd	r25, Y+8	; 0x08
    121e:	0e 94 a4 12 	call	0x2548	; 0x2548 <__mulsf3>
    1222:	dc 01       	movw	r26, r24
    1224:	cb 01       	movw	r24, r22
    1226:	f8 01       	movw	r30, r16
    1228:	80 83       	st	Z, r24
    122a:	91 83       	std	Z+1, r25	; 0x01
    122c:	a2 83       	std	Z+2, r26	; 0x02
    122e:	b3 83       	std	Z+3, r27	; 0x03
    1230:	ce 01       	movw	r24, r28
    1232:	83 5a       	subi	r24, 0xA3	; 163
    1234:	9f 4f       	sbci	r25, 0xFF	; 255
    1236:	20 e0       	ldi	r18, 0x00	; 0
    1238:	30 e0       	ldi	r19, 0x00	; 0
    123a:	40 e8       	ldi	r20, 0x80	; 128
    123c:	5f e3       	ldi	r21, 0x3F	; 63
    123e:	fc 01       	movw	r30, r24
    1240:	60 81       	ld	r22, Z
    1242:	71 81       	ldd	r23, Z+1	; 0x01
    1244:	82 81       	ldd	r24, Z+2	; 0x02
    1246:	93 81       	ldd	r25, Z+3	; 0x03
    1248:	0e 94 56 11 	call	0x22ac	; 0x22ac <__cmpsf2>
    124c:	88 23       	and	r24, r24
    124e:	4c f4       	brge	.+18     	; 0x1262 <lcd_set_4bit+0x234>
    1250:	ce 01       	movw	r24, r28
    1252:	8f 59       	subi	r24, 0x9F	; 159
    1254:	9f 4f       	sbci	r25, 0xFF	; 255
    1256:	21 e0       	ldi	r18, 0x01	; 1
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	fc 01       	movw	r30, r24
    125c:	31 83       	std	Z+1, r19	; 0x01
    125e:	20 83       	st	Z, r18
    1260:	69 c0       	rjmp	.+210    	; 0x1334 <lcd_set_4bit+0x306>
    1262:	ce 01       	movw	r24, r28
    1264:	83 5a       	subi	r24, 0xA3	; 163
    1266:	9f 4f       	sbci	r25, 0xFF	; 255
    1268:	20 e0       	ldi	r18, 0x00	; 0
    126a:	3f ef       	ldi	r19, 0xFF	; 255
    126c:	4f e7       	ldi	r20, 0x7F	; 127
    126e:	57 e4       	ldi	r21, 0x47	; 71
    1270:	fc 01       	movw	r30, r24
    1272:	60 81       	ld	r22, Z
    1274:	71 81       	ldd	r23, Z+1	; 0x01
    1276:	82 81       	ldd	r24, Z+2	; 0x02
    1278:	93 81       	ldd	r25, Z+3	; 0x03
    127a:	0e 94 a0 12 	call	0x2540	; 0x2540 <__gesf2>
    127e:	18 16       	cp	r1, r24
    1280:	0c f0       	brlt	.+2      	; 0x1284 <lcd_set_4bit+0x256>
    1282:	46 c0       	rjmp	.+140    	; 0x1310 <lcd_set_4bit+0x2e2>
    1284:	20 e0       	ldi	r18, 0x00	; 0
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	40 e2       	ldi	r20, 0x20	; 32
    128a:	51 e4       	ldi	r21, 0x41	; 65
    128c:	6d 81       	ldd	r22, Y+5	; 0x05
    128e:	7e 81       	ldd	r23, Y+6	; 0x06
    1290:	8f 81       	ldd	r24, Y+7	; 0x07
    1292:	98 85       	ldd	r25, Y+8	; 0x08
    1294:	0e 94 a4 12 	call	0x2548	; 0x2548 <__mulsf3>
    1298:	dc 01       	movw	r26, r24
    129a:	cb 01       	movw	r24, r22
    129c:	8e 01       	movw	r16, r28
    129e:	0f 59       	subi	r16, 0x9F	; 159
    12a0:	1f 4f       	sbci	r17, 0xFF	; 255
    12a2:	bc 01       	movw	r22, r24
    12a4:	cd 01       	movw	r24, r26
    12a6:	0e 94 c2 11 	call	0x2384	; 0x2384 <__fixunssfsi>
    12aa:	dc 01       	movw	r26, r24
    12ac:	cb 01       	movw	r24, r22
    12ae:	f8 01       	movw	r30, r16
    12b0:	91 83       	std	Z+1, r25	; 0x01
    12b2:	80 83       	st	Z, r24
    12b4:	24 c0       	rjmp	.+72     	; 0x12fe <lcd_set_4bit+0x2d0>
    12b6:	ce 01       	movw	r24, r28
    12b8:	8d 59       	subi	r24, 0x9D	; 157
    12ba:	9f 4f       	sbci	r25, 0xFF	; 255
    12bc:	20 e7       	ldi	r18, 0x70	; 112
    12be:	31 e0       	ldi	r19, 0x01	; 1
    12c0:	fc 01       	movw	r30, r24
    12c2:	31 83       	std	Z+1, r19	; 0x01
    12c4:	20 83       	st	Z, r18
    12c6:	ce 01       	movw	r24, r28
    12c8:	8d 59       	subi	r24, 0x9D	; 157
    12ca:	9f 4f       	sbci	r25, 0xFF	; 255
    12cc:	fc 01       	movw	r30, r24
    12ce:	80 81       	ld	r24, Z
    12d0:	91 81       	ldd	r25, Z+1	; 0x01
    12d2:	01 97       	sbiw	r24, 0x01	; 1
    12d4:	f1 f7       	brne	.-4      	; 0x12d2 <lcd_set_4bit+0x2a4>
    12d6:	9e 01       	movw	r18, r28
    12d8:	2d 59       	subi	r18, 0x9D	; 157
    12da:	3f 4f       	sbci	r19, 0xFF	; 255
    12dc:	f9 01       	movw	r30, r18
    12de:	91 83       	std	Z+1, r25	; 0x01
    12e0:	80 83       	st	Z, r24
    12e2:	ce 01       	movw	r24, r28
    12e4:	8f 59       	subi	r24, 0x9F	; 159
    12e6:	9f 4f       	sbci	r25, 0xFF	; 255
    12e8:	9e 01       	movw	r18, r28
    12ea:	2f 59       	subi	r18, 0x9F	; 159
    12ec:	3f 4f       	sbci	r19, 0xFF	; 255
    12ee:	f9 01       	movw	r30, r18
    12f0:	20 81       	ld	r18, Z
    12f2:	31 81       	ldd	r19, Z+1	; 0x01
    12f4:	21 50       	subi	r18, 0x01	; 1
    12f6:	31 09       	sbc	r19, r1
    12f8:	fc 01       	movw	r30, r24
    12fa:	31 83       	std	Z+1, r19	; 0x01
    12fc:	20 83       	st	Z, r18
    12fe:	ce 01       	movw	r24, r28
    1300:	8f 59       	subi	r24, 0x9F	; 159
    1302:	9f 4f       	sbci	r25, 0xFF	; 255
    1304:	fc 01       	movw	r30, r24
    1306:	80 81       	ld	r24, Z
    1308:	91 81       	ldd	r25, Z+1	; 0x01
    130a:	89 2b       	or	r24, r25
    130c:	a1 f6       	brne	.-88     	; 0x12b6 <lcd_set_4bit+0x288>
    130e:	2c c0       	rjmp	.+88     	; 0x1368 <lcd_set_4bit+0x33a>
    1310:	8e 01       	movw	r16, r28
    1312:	0f 59       	subi	r16, 0x9F	; 159
    1314:	1f 4f       	sbci	r17, 0xFF	; 255
    1316:	ce 01       	movw	r24, r28
    1318:	83 5a       	subi	r24, 0xA3	; 163
    131a:	9f 4f       	sbci	r25, 0xFF	; 255
    131c:	fc 01       	movw	r30, r24
    131e:	60 81       	ld	r22, Z
    1320:	71 81       	ldd	r23, Z+1	; 0x01
    1322:	82 81       	ldd	r24, Z+2	; 0x02
    1324:	93 81       	ldd	r25, Z+3	; 0x03
    1326:	0e 94 c2 11 	call	0x2384	; 0x2384 <__fixunssfsi>
    132a:	dc 01       	movw	r26, r24
    132c:	cb 01       	movw	r24, r22
    132e:	f8 01       	movw	r30, r16
    1330:	91 83       	std	Z+1, r25	; 0x01
    1332:	80 83       	st	Z, r24
    1334:	ce 01       	movw	r24, r28
    1336:	8b 59       	subi	r24, 0x9B	; 155
    1338:	9f 4f       	sbci	r25, 0xFF	; 255
    133a:	9e 01       	movw	r18, r28
    133c:	2f 59       	subi	r18, 0x9F	; 159
    133e:	3f 4f       	sbci	r19, 0xFF	; 255
    1340:	f9 01       	movw	r30, r18
    1342:	20 81       	ld	r18, Z
    1344:	31 81       	ldd	r19, Z+1	; 0x01
    1346:	fc 01       	movw	r30, r24
    1348:	31 83       	std	Z+1, r19	; 0x01
    134a:	20 83       	st	Z, r18
    134c:	ce 01       	movw	r24, r28
    134e:	8b 59       	subi	r24, 0x9B	; 155
    1350:	9f 4f       	sbci	r25, 0xFF	; 255
    1352:	fc 01       	movw	r30, r24
    1354:	80 81       	ld	r24, Z
    1356:	91 81       	ldd	r25, Z+1	; 0x01
    1358:	01 97       	sbiw	r24, 0x01	; 1
    135a:	f1 f7       	brne	.-4      	; 0x1358 <lcd_set_4bit+0x32a>
    135c:	9e 01       	movw	r18, r28
    135e:	2b 59       	subi	r18, 0x9B	; 155
    1360:	3f 4f       	sbci	r19, 0xFF	; 255
    1362:	f9 01       	movw	r30, r18
    1364:	91 83       	std	Z+1, r25	; 0x01
    1366:	80 83       	st	Z, r24
    1368:	88 e2       	ldi	r24, 0x28	; 40
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	28 e2       	ldi	r18, 0x28	; 40
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	f9 01       	movw	r30, r18
    1372:	20 81       	ld	r18, Z
    1374:	2b 7f       	andi	r18, 0xFB	; 251
    1376:	fc 01       	movw	r30, r24
    1378:	20 83       	st	Z, r18
    137a:	80 e0       	ldi	r24, 0x00	; 0
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	a0 e8       	ldi	r26, 0x80	; 128
    1380:	bf e3       	ldi	r27, 0x3F	; 63
    1382:	89 87       	std	Y+9, r24	; 0x09
    1384:	9a 87       	std	Y+10, r25	; 0x0a
    1386:	ab 87       	std	Y+11, r26	; 0x0b
    1388:	bc 87       	std	Y+12, r27	; 0x0c
    138a:	8e 01       	movw	r16, r28
    138c:	0d 5a       	subi	r16, 0xAD	; 173
    138e:	1f 4f       	sbci	r17, 0xFF	; 255
    1390:	26 e6       	ldi	r18, 0x66	; 102
    1392:	36 e6       	ldi	r19, 0x66	; 102
    1394:	46 e6       	ldi	r20, 0x66	; 102
    1396:	55 e4       	ldi	r21, 0x45	; 69
    1398:	69 85       	ldd	r22, Y+9	; 0x09
    139a:	7a 85       	ldd	r23, Y+10	; 0x0a
    139c:	8b 85       	ldd	r24, Y+11	; 0x0b
    139e:	9c 85       	ldd	r25, Y+12	; 0x0c
    13a0:	0e 94 a4 12 	call	0x2548	; 0x2548 <__mulsf3>
    13a4:	dc 01       	movw	r26, r24
    13a6:	cb 01       	movw	r24, r22
    13a8:	f8 01       	movw	r30, r16
    13aa:	80 83       	st	Z, r24
    13ac:	91 83       	std	Z+1, r25	; 0x01
    13ae:	a2 83       	std	Z+2, r26	; 0x02
    13b0:	b3 83       	std	Z+3, r27	; 0x03
    13b2:	ce 01       	movw	r24, r28
    13b4:	8d 5a       	subi	r24, 0xAD	; 173
    13b6:	9f 4f       	sbci	r25, 0xFF	; 255
    13b8:	20 e0       	ldi	r18, 0x00	; 0
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	40 e8       	ldi	r20, 0x80	; 128
    13be:	5f e3       	ldi	r21, 0x3F	; 63
    13c0:	fc 01       	movw	r30, r24
    13c2:	60 81       	ld	r22, Z
    13c4:	71 81       	ldd	r23, Z+1	; 0x01
    13c6:	82 81       	ldd	r24, Z+2	; 0x02
    13c8:	93 81       	ldd	r25, Z+3	; 0x03
    13ca:	70 d7       	rcall	.+3808   	; 0x22ac <__cmpsf2>
    13cc:	88 23       	and	r24, r24
    13ce:	4c f4       	brge	.+18     	; 0x13e2 <lcd_set_4bit+0x3b4>
    13d0:	ce 01       	movw	r24, r28
    13d2:	89 5a       	subi	r24, 0xA9	; 169
    13d4:	9f 4f       	sbci	r25, 0xFF	; 255
    13d6:	21 e0       	ldi	r18, 0x01	; 1
    13d8:	30 e0       	ldi	r19, 0x00	; 0
    13da:	fc 01       	movw	r30, r24
    13dc:	31 83       	std	Z+1, r19	; 0x01
    13de:	20 83       	st	Z, r18
    13e0:	67 c0       	rjmp	.+206    	; 0x14b0 <lcd_set_4bit+0x482>
    13e2:	ce 01       	movw	r24, r28
    13e4:	8d 5a       	subi	r24, 0xAD	; 173
    13e6:	9f 4f       	sbci	r25, 0xFF	; 255
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	3f ef       	ldi	r19, 0xFF	; 255
    13ec:	4f e7       	ldi	r20, 0x7F	; 127
    13ee:	57 e4       	ldi	r21, 0x47	; 71
    13f0:	fc 01       	movw	r30, r24
    13f2:	60 81       	ld	r22, Z
    13f4:	71 81       	ldd	r23, Z+1	; 0x01
    13f6:	82 81       	ldd	r24, Z+2	; 0x02
    13f8:	93 81       	ldd	r25, Z+3	; 0x03
    13fa:	0e 94 a0 12 	call	0x2540	; 0x2540 <__gesf2>
    13fe:	18 16       	cp	r1, r24
    1400:	0c f0       	brlt	.+2      	; 0x1404 <lcd_set_4bit+0x3d6>
    1402:	45 c0       	rjmp	.+138    	; 0x148e <lcd_set_4bit+0x460>
    1404:	20 e0       	ldi	r18, 0x00	; 0
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	40 e2       	ldi	r20, 0x20	; 32
    140a:	51 e4       	ldi	r21, 0x41	; 65
    140c:	69 85       	ldd	r22, Y+9	; 0x09
    140e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1410:	8b 85       	ldd	r24, Y+11	; 0x0b
    1412:	9c 85       	ldd	r25, Y+12	; 0x0c
    1414:	0e 94 a4 12 	call	0x2548	; 0x2548 <__mulsf3>
    1418:	dc 01       	movw	r26, r24
    141a:	cb 01       	movw	r24, r22
    141c:	8e 01       	movw	r16, r28
    141e:	09 5a       	subi	r16, 0xA9	; 169
    1420:	1f 4f       	sbci	r17, 0xFF	; 255
    1422:	bc 01       	movw	r22, r24
    1424:	cd 01       	movw	r24, r26
    1426:	ae d7       	rcall	.+3932   	; 0x2384 <__fixunssfsi>
    1428:	dc 01       	movw	r26, r24
    142a:	cb 01       	movw	r24, r22
    142c:	f8 01       	movw	r30, r16
    142e:	91 83       	std	Z+1, r25	; 0x01
    1430:	80 83       	st	Z, r24
    1432:	24 c0       	rjmp	.+72     	; 0x147c <lcd_set_4bit+0x44e>
    1434:	ce 01       	movw	r24, r28
    1436:	87 5a       	subi	r24, 0xA7	; 167
    1438:	9f 4f       	sbci	r25, 0xFF	; 255
    143a:	20 e7       	ldi	r18, 0x70	; 112
    143c:	31 e0       	ldi	r19, 0x01	; 1
    143e:	fc 01       	movw	r30, r24
    1440:	31 83       	std	Z+1, r19	; 0x01
    1442:	20 83       	st	Z, r18
    1444:	ce 01       	movw	r24, r28
    1446:	87 5a       	subi	r24, 0xA7	; 167
    1448:	9f 4f       	sbci	r25, 0xFF	; 255
    144a:	fc 01       	movw	r30, r24
    144c:	80 81       	ld	r24, Z
    144e:	91 81       	ldd	r25, Z+1	; 0x01
    1450:	01 97       	sbiw	r24, 0x01	; 1
    1452:	f1 f7       	brne	.-4      	; 0x1450 <lcd_set_4bit+0x422>
    1454:	9e 01       	movw	r18, r28
    1456:	27 5a       	subi	r18, 0xA7	; 167
    1458:	3f 4f       	sbci	r19, 0xFF	; 255
    145a:	f9 01       	movw	r30, r18
    145c:	91 83       	std	Z+1, r25	; 0x01
    145e:	80 83       	st	Z, r24
    1460:	ce 01       	movw	r24, r28
    1462:	89 5a       	subi	r24, 0xA9	; 169
    1464:	9f 4f       	sbci	r25, 0xFF	; 255
    1466:	9e 01       	movw	r18, r28
    1468:	29 5a       	subi	r18, 0xA9	; 169
    146a:	3f 4f       	sbci	r19, 0xFF	; 255
    146c:	f9 01       	movw	r30, r18
    146e:	20 81       	ld	r18, Z
    1470:	31 81       	ldd	r19, Z+1	; 0x01
    1472:	21 50       	subi	r18, 0x01	; 1
    1474:	31 09       	sbc	r19, r1
    1476:	fc 01       	movw	r30, r24
    1478:	31 83       	std	Z+1, r19	; 0x01
    147a:	20 83       	st	Z, r18
    147c:	ce 01       	movw	r24, r28
    147e:	89 5a       	subi	r24, 0xA9	; 169
    1480:	9f 4f       	sbci	r25, 0xFF	; 255
    1482:	fc 01       	movw	r30, r24
    1484:	80 81       	ld	r24, Z
    1486:	91 81       	ldd	r25, Z+1	; 0x01
    1488:	89 2b       	or	r24, r25
    148a:	a1 f6       	brne	.-88     	; 0x1434 <lcd_set_4bit+0x406>
    148c:	2b c0       	rjmp	.+86     	; 0x14e4 <lcd_set_4bit+0x4b6>
    148e:	8e 01       	movw	r16, r28
    1490:	09 5a       	subi	r16, 0xA9	; 169
    1492:	1f 4f       	sbci	r17, 0xFF	; 255
    1494:	ce 01       	movw	r24, r28
    1496:	8d 5a       	subi	r24, 0xAD	; 173
    1498:	9f 4f       	sbci	r25, 0xFF	; 255
    149a:	fc 01       	movw	r30, r24
    149c:	60 81       	ld	r22, Z
    149e:	71 81       	ldd	r23, Z+1	; 0x01
    14a0:	82 81       	ldd	r24, Z+2	; 0x02
    14a2:	93 81       	ldd	r25, Z+3	; 0x03
    14a4:	6f d7       	rcall	.+3806   	; 0x2384 <__fixunssfsi>
    14a6:	dc 01       	movw	r26, r24
    14a8:	cb 01       	movw	r24, r22
    14aa:	f8 01       	movw	r30, r16
    14ac:	91 83       	std	Z+1, r25	; 0x01
    14ae:	80 83       	st	Z, r24
    14b0:	ce 01       	movw	r24, r28
    14b2:	85 5a       	subi	r24, 0xA5	; 165
    14b4:	9f 4f       	sbci	r25, 0xFF	; 255
    14b6:	9e 01       	movw	r18, r28
    14b8:	29 5a       	subi	r18, 0xA9	; 169
    14ba:	3f 4f       	sbci	r19, 0xFF	; 255
    14bc:	f9 01       	movw	r30, r18
    14be:	20 81       	ld	r18, Z
    14c0:	31 81       	ldd	r19, Z+1	; 0x01
    14c2:	fc 01       	movw	r30, r24
    14c4:	31 83       	std	Z+1, r19	; 0x01
    14c6:	20 83       	st	Z, r18
    14c8:	ce 01       	movw	r24, r28
    14ca:	85 5a       	subi	r24, 0xA5	; 165
    14cc:	9f 4f       	sbci	r25, 0xFF	; 255
    14ce:	fc 01       	movw	r30, r24
    14d0:	80 81       	ld	r24, Z
    14d2:	91 81       	ldd	r25, Z+1	; 0x01
    14d4:	01 97       	sbiw	r24, 0x01	; 1
    14d6:	f1 f7       	brne	.-4      	; 0x14d4 <lcd_set_4bit+0x4a6>
    14d8:	9e 01       	movw	r18, r28
    14da:	25 5a       	subi	r18, 0xA5	; 165
    14dc:	3f 4f       	sbci	r19, 0xFF	; 255
    14de:	f9 01       	movw	r30, r18
    14e0:	91 83       	std	Z+1, r25	; 0x01
    14e2:	80 83       	st	Z, r24
    14e4:	88 e2       	ldi	r24, 0x28	; 40
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	28 e2       	ldi	r18, 0x28	; 40
    14ea:	30 e0       	ldi	r19, 0x00	; 0
    14ec:	f9 01       	movw	r30, r18
    14ee:	20 81       	ld	r18, Z
    14f0:	2e 7f       	andi	r18, 0xFE	; 254
    14f2:	fc 01       	movw	r30, r24
    14f4:	20 83       	st	Z, r18
    14f6:	88 e2       	ldi	r24, 0x28	; 40
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	28 e2       	ldi	r18, 0x28	; 40
    14fc:	30 e0       	ldi	r19, 0x00	; 0
    14fe:	f9 01       	movw	r30, r18
    1500:	20 81       	ld	r18, Z
    1502:	2d 7f       	andi	r18, 0xFD	; 253
    1504:	fc 01       	movw	r30, r24
    1506:	20 83       	st	Z, r18
    1508:	88 e2       	ldi	r24, 0x28	; 40
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	20 e3       	ldi	r18, 0x30	; 48
    150e:	fc 01       	movw	r30, r24
    1510:	20 83       	st	Z, r18
    1512:	88 e2       	ldi	r24, 0x28	; 40
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	28 e2       	ldi	r18, 0x28	; 40
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	f9 01       	movw	r30, r18
    151c:	20 81       	ld	r18, Z
    151e:	24 60       	ori	r18, 0x04	; 4
    1520:	fc 01       	movw	r30, r24
    1522:	20 83       	st	Z, r18
    1524:	80 e0       	ldi	r24, 0x00	; 0
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	a0 ea       	ldi	r26, 0xA0	; 160
    152a:	b0 e4       	ldi	r27, 0x40	; 64
    152c:	8d 87       	std	Y+13, r24	; 0x0d
    152e:	9e 87       	std	Y+14, r25	; 0x0e
    1530:	af 87       	std	Y+15, r26	; 0x0f
    1532:	b8 8b       	std	Y+16, r27	; 0x10
    1534:	8e 01       	movw	r16, r28
    1536:	07 5b       	subi	r16, 0xB7	; 183
    1538:	1f 4f       	sbci	r17, 0xFF	; 255
    153a:	26 e6       	ldi	r18, 0x66	; 102
    153c:	36 e6       	ldi	r19, 0x66	; 102
    153e:	46 e6       	ldi	r20, 0x66	; 102
    1540:	55 e4       	ldi	r21, 0x45	; 69
    1542:	6d 85       	ldd	r22, Y+13	; 0x0d
    1544:	7e 85       	ldd	r23, Y+14	; 0x0e
    1546:	8f 85       	ldd	r24, Y+15	; 0x0f
    1548:	98 89       	ldd	r25, Y+16	; 0x10
    154a:	fe d7       	rcall	.+4092   	; 0x2548 <__mulsf3>
    154c:	dc 01       	movw	r26, r24
    154e:	cb 01       	movw	r24, r22
    1550:	f8 01       	movw	r30, r16
    1552:	80 83       	st	Z, r24
    1554:	91 83       	std	Z+1, r25	; 0x01
    1556:	a2 83       	std	Z+2, r26	; 0x02
    1558:	b3 83       	std	Z+3, r27	; 0x03
    155a:	ce 01       	movw	r24, r28
    155c:	87 5b       	subi	r24, 0xB7	; 183
    155e:	9f 4f       	sbci	r25, 0xFF	; 255
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	40 e8       	ldi	r20, 0x80	; 128
    1566:	5f e3       	ldi	r21, 0x3F	; 63
    1568:	fc 01       	movw	r30, r24
    156a:	60 81       	ld	r22, Z
    156c:	71 81       	ldd	r23, Z+1	; 0x01
    156e:	82 81       	ldd	r24, Z+2	; 0x02
    1570:	93 81       	ldd	r25, Z+3	; 0x03
    1572:	9c d6       	rcall	.+3384   	; 0x22ac <__cmpsf2>
    1574:	88 23       	and	r24, r24
    1576:	4c f4       	brge	.+18     	; 0x158a <lcd_set_4bit+0x55c>
    1578:	ce 01       	movw	r24, r28
    157a:	83 5b       	subi	r24, 0xB3	; 179
    157c:	9f 4f       	sbci	r25, 0xFF	; 255
    157e:	21 e0       	ldi	r18, 0x01	; 1
    1580:	30 e0       	ldi	r19, 0x00	; 0
    1582:	fc 01       	movw	r30, r24
    1584:	31 83       	std	Z+1, r19	; 0x01
    1586:	20 83       	st	Z, r18
    1588:	65 c0       	rjmp	.+202    	; 0x1654 <lcd_set_4bit+0x626>
    158a:	ce 01       	movw	r24, r28
    158c:	87 5b       	subi	r24, 0xB7	; 183
    158e:	9f 4f       	sbci	r25, 0xFF	; 255
    1590:	20 e0       	ldi	r18, 0x00	; 0
    1592:	3f ef       	ldi	r19, 0xFF	; 255
    1594:	4f e7       	ldi	r20, 0x7F	; 127
    1596:	57 e4       	ldi	r21, 0x47	; 71
    1598:	fc 01       	movw	r30, r24
    159a:	60 81       	ld	r22, Z
    159c:	71 81       	ldd	r23, Z+1	; 0x01
    159e:	82 81       	ldd	r24, Z+2	; 0x02
    15a0:	93 81       	ldd	r25, Z+3	; 0x03
    15a2:	ce d7       	rcall	.+3996   	; 0x2540 <__gesf2>
    15a4:	18 16       	cp	r1, r24
    15a6:	0c f0       	brlt	.+2      	; 0x15aa <lcd_set_4bit+0x57c>
    15a8:	44 c0       	rjmp	.+136    	; 0x1632 <lcd_set_4bit+0x604>
    15aa:	20 e0       	ldi	r18, 0x00	; 0
    15ac:	30 e0       	ldi	r19, 0x00	; 0
    15ae:	40 e2       	ldi	r20, 0x20	; 32
    15b0:	51 e4       	ldi	r21, 0x41	; 65
    15b2:	6d 85       	ldd	r22, Y+13	; 0x0d
    15b4:	7e 85       	ldd	r23, Y+14	; 0x0e
    15b6:	8f 85       	ldd	r24, Y+15	; 0x0f
    15b8:	98 89       	ldd	r25, Y+16	; 0x10
    15ba:	c6 d7       	rcall	.+3980   	; 0x2548 <__mulsf3>
    15bc:	dc 01       	movw	r26, r24
    15be:	cb 01       	movw	r24, r22
    15c0:	8e 01       	movw	r16, r28
    15c2:	03 5b       	subi	r16, 0xB3	; 179
    15c4:	1f 4f       	sbci	r17, 0xFF	; 255
    15c6:	bc 01       	movw	r22, r24
    15c8:	cd 01       	movw	r24, r26
    15ca:	dc d6       	rcall	.+3512   	; 0x2384 <__fixunssfsi>
    15cc:	dc 01       	movw	r26, r24
    15ce:	cb 01       	movw	r24, r22
    15d0:	f8 01       	movw	r30, r16
    15d2:	91 83       	std	Z+1, r25	; 0x01
    15d4:	80 83       	st	Z, r24
    15d6:	24 c0       	rjmp	.+72     	; 0x1620 <lcd_set_4bit+0x5f2>
    15d8:	ce 01       	movw	r24, r28
    15da:	81 5b       	subi	r24, 0xB1	; 177
    15dc:	9f 4f       	sbci	r25, 0xFF	; 255
    15de:	20 e7       	ldi	r18, 0x70	; 112
    15e0:	31 e0       	ldi	r19, 0x01	; 1
    15e2:	fc 01       	movw	r30, r24
    15e4:	31 83       	std	Z+1, r19	; 0x01
    15e6:	20 83       	st	Z, r18
    15e8:	ce 01       	movw	r24, r28
    15ea:	81 5b       	subi	r24, 0xB1	; 177
    15ec:	9f 4f       	sbci	r25, 0xFF	; 255
    15ee:	fc 01       	movw	r30, r24
    15f0:	80 81       	ld	r24, Z
    15f2:	91 81       	ldd	r25, Z+1	; 0x01
    15f4:	01 97       	sbiw	r24, 0x01	; 1
    15f6:	f1 f7       	brne	.-4      	; 0x15f4 <lcd_set_4bit+0x5c6>
    15f8:	9e 01       	movw	r18, r28
    15fa:	21 5b       	subi	r18, 0xB1	; 177
    15fc:	3f 4f       	sbci	r19, 0xFF	; 255
    15fe:	f9 01       	movw	r30, r18
    1600:	91 83       	std	Z+1, r25	; 0x01
    1602:	80 83       	st	Z, r24
    1604:	ce 01       	movw	r24, r28
    1606:	83 5b       	subi	r24, 0xB3	; 179
    1608:	9f 4f       	sbci	r25, 0xFF	; 255
    160a:	9e 01       	movw	r18, r28
    160c:	23 5b       	subi	r18, 0xB3	; 179
    160e:	3f 4f       	sbci	r19, 0xFF	; 255
    1610:	f9 01       	movw	r30, r18
    1612:	20 81       	ld	r18, Z
    1614:	31 81       	ldd	r19, Z+1	; 0x01
    1616:	21 50       	subi	r18, 0x01	; 1
    1618:	31 09       	sbc	r19, r1
    161a:	fc 01       	movw	r30, r24
    161c:	31 83       	std	Z+1, r19	; 0x01
    161e:	20 83       	st	Z, r18
    1620:	ce 01       	movw	r24, r28
    1622:	83 5b       	subi	r24, 0xB3	; 179
    1624:	9f 4f       	sbci	r25, 0xFF	; 255
    1626:	fc 01       	movw	r30, r24
    1628:	80 81       	ld	r24, Z
    162a:	91 81       	ldd	r25, Z+1	; 0x01
    162c:	89 2b       	or	r24, r25
    162e:	a1 f6       	brne	.-88     	; 0x15d8 <lcd_set_4bit+0x5aa>
    1630:	2b c0       	rjmp	.+86     	; 0x1688 <lcd_set_4bit+0x65a>
    1632:	8e 01       	movw	r16, r28
    1634:	03 5b       	subi	r16, 0xB3	; 179
    1636:	1f 4f       	sbci	r17, 0xFF	; 255
    1638:	ce 01       	movw	r24, r28
    163a:	87 5b       	subi	r24, 0xB7	; 183
    163c:	9f 4f       	sbci	r25, 0xFF	; 255
    163e:	fc 01       	movw	r30, r24
    1640:	60 81       	ld	r22, Z
    1642:	71 81       	ldd	r23, Z+1	; 0x01
    1644:	82 81       	ldd	r24, Z+2	; 0x02
    1646:	93 81       	ldd	r25, Z+3	; 0x03
    1648:	9d d6       	rcall	.+3386   	; 0x2384 <__fixunssfsi>
    164a:	dc 01       	movw	r26, r24
    164c:	cb 01       	movw	r24, r22
    164e:	f8 01       	movw	r30, r16
    1650:	91 83       	std	Z+1, r25	; 0x01
    1652:	80 83       	st	Z, r24
    1654:	ce 01       	movw	r24, r28
    1656:	8f 5a       	subi	r24, 0xAF	; 175
    1658:	9f 4f       	sbci	r25, 0xFF	; 255
    165a:	9e 01       	movw	r18, r28
    165c:	23 5b       	subi	r18, 0xB3	; 179
    165e:	3f 4f       	sbci	r19, 0xFF	; 255
    1660:	f9 01       	movw	r30, r18
    1662:	20 81       	ld	r18, Z
    1664:	31 81       	ldd	r19, Z+1	; 0x01
    1666:	fc 01       	movw	r30, r24
    1668:	31 83       	std	Z+1, r19	; 0x01
    166a:	20 83       	st	Z, r18
    166c:	ce 01       	movw	r24, r28
    166e:	8f 5a       	subi	r24, 0xAF	; 175
    1670:	9f 4f       	sbci	r25, 0xFF	; 255
    1672:	fc 01       	movw	r30, r24
    1674:	80 81       	ld	r24, Z
    1676:	91 81       	ldd	r25, Z+1	; 0x01
    1678:	01 97       	sbiw	r24, 0x01	; 1
    167a:	f1 f7       	brne	.-4      	; 0x1678 <lcd_set_4bit+0x64a>
    167c:	9e 01       	movw	r18, r28
    167e:	2f 5a       	subi	r18, 0xAF	; 175
    1680:	3f 4f       	sbci	r19, 0xFF	; 255
    1682:	f9 01       	movw	r30, r18
    1684:	91 83       	std	Z+1, r25	; 0x01
    1686:	80 83       	st	Z, r24
    1688:	88 e2       	ldi	r24, 0x28	; 40
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	28 e2       	ldi	r18, 0x28	; 40
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	f9 01       	movw	r30, r18
    1692:	20 81       	ld	r18, Z
    1694:	2b 7f       	andi	r18, 0xFB	; 251
    1696:	fc 01       	movw	r30, r24
    1698:	20 83       	st	Z, r18
    169a:	80 e0       	ldi	r24, 0x00	; 0
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	a0 e8       	ldi	r26, 0x80	; 128
    16a0:	bf e3       	ldi	r27, 0x3F	; 63
    16a2:	89 8b       	std	Y+17, r24	; 0x11
    16a4:	9a 8b       	std	Y+18, r25	; 0x12
    16a6:	ab 8b       	std	Y+19, r26	; 0x13
    16a8:	bc 8b       	std	Y+20, r27	; 0x14
    16aa:	8e 01       	movw	r16, r28
    16ac:	01 5c       	subi	r16, 0xC1	; 193
    16ae:	1f 4f       	sbci	r17, 0xFF	; 255
    16b0:	26 e6       	ldi	r18, 0x66	; 102
    16b2:	36 e6       	ldi	r19, 0x66	; 102
    16b4:	46 e6       	ldi	r20, 0x66	; 102
    16b6:	55 e4       	ldi	r21, 0x45	; 69
    16b8:	69 89       	ldd	r22, Y+17	; 0x11
    16ba:	7a 89       	ldd	r23, Y+18	; 0x12
    16bc:	8b 89       	ldd	r24, Y+19	; 0x13
    16be:	9c 89       	ldd	r25, Y+20	; 0x14
    16c0:	43 d7       	rcall	.+3718   	; 0x2548 <__mulsf3>
    16c2:	dc 01       	movw	r26, r24
    16c4:	cb 01       	movw	r24, r22
    16c6:	f8 01       	movw	r30, r16
    16c8:	80 83       	st	Z, r24
    16ca:	91 83       	std	Z+1, r25	; 0x01
    16cc:	a2 83       	std	Z+2, r26	; 0x02
    16ce:	b3 83       	std	Z+3, r27	; 0x03
    16d0:	ce 01       	movw	r24, r28
    16d2:	cf 96       	adiw	r24, 0x3f	; 63
    16d4:	20 e0       	ldi	r18, 0x00	; 0
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	40 e8       	ldi	r20, 0x80	; 128
    16da:	5f e3       	ldi	r21, 0x3F	; 63
    16dc:	fc 01       	movw	r30, r24
    16de:	60 81       	ld	r22, Z
    16e0:	71 81       	ldd	r23, Z+1	; 0x01
    16e2:	82 81       	ldd	r24, Z+2	; 0x02
    16e4:	93 81       	ldd	r25, Z+3	; 0x03
    16e6:	e2 d5       	rcall	.+3012   	; 0x22ac <__cmpsf2>
    16e8:	88 23       	and	r24, r24
    16ea:	4c f4       	brge	.+18     	; 0x16fe <lcd_set_4bit+0x6d0>
    16ec:	ce 01       	movw	r24, r28
    16ee:	8d 5b       	subi	r24, 0xBD	; 189
    16f0:	9f 4f       	sbci	r25, 0xFF	; 255
    16f2:	21 e0       	ldi	r18, 0x01	; 1
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	fc 01       	movw	r30, r24
    16f8:	31 83       	std	Z+1, r19	; 0x01
    16fa:	20 83       	st	Z, r18
    16fc:	63 c0       	rjmp	.+198    	; 0x17c4 <lcd_set_4bit+0x796>
    16fe:	ce 01       	movw	r24, r28
    1700:	cf 96       	adiw	r24, 0x3f	; 63
    1702:	20 e0       	ldi	r18, 0x00	; 0
    1704:	3f ef       	ldi	r19, 0xFF	; 255
    1706:	4f e7       	ldi	r20, 0x7F	; 127
    1708:	57 e4       	ldi	r21, 0x47	; 71
    170a:	fc 01       	movw	r30, r24
    170c:	60 81       	ld	r22, Z
    170e:	71 81       	ldd	r23, Z+1	; 0x01
    1710:	82 81       	ldd	r24, Z+2	; 0x02
    1712:	93 81       	ldd	r25, Z+3	; 0x03
    1714:	15 d7       	rcall	.+3626   	; 0x2540 <__gesf2>
    1716:	18 16       	cp	r1, r24
    1718:	0c f0       	brlt	.+2      	; 0x171c <lcd_set_4bit+0x6ee>
    171a:	44 c0       	rjmp	.+136    	; 0x17a4 <lcd_set_4bit+0x776>
    171c:	20 e0       	ldi	r18, 0x00	; 0
    171e:	30 e0       	ldi	r19, 0x00	; 0
    1720:	40 e2       	ldi	r20, 0x20	; 32
    1722:	51 e4       	ldi	r21, 0x41	; 65
    1724:	69 89       	ldd	r22, Y+17	; 0x11
    1726:	7a 89       	ldd	r23, Y+18	; 0x12
    1728:	8b 89       	ldd	r24, Y+19	; 0x13
    172a:	9c 89       	ldd	r25, Y+20	; 0x14
    172c:	0d d7       	rcall	.+3610   	; 0x2548 <__mulsf3>
    172e:	dc 01       	movw	r26, r24
    1730:	cb 01       	movw	r24, r22
    1732:	8e 01       	movw	r16, r28
    1734:	0d 5b       	subi	r16, 0xBD	; 189
    1736:	1f 4f       	sbci	r17, 0xFF	; 255
    1738:	bc 01       	movw	r22, r24
    173a:	cd 01       	movw	r24, r26
    173c:	23 d6       	rcall	.+3142   	; 0x2384 <__fixunssfsi>
    173e:	dc 01       	movw	r26, r24
    1740:	cb 01       	movw	r24, r22
    1742:	f8 01       	movw	r30, r16
    1744:	91 83       	std	Z+1, r25	; 0x01
    1746:	80 83       	st	Z, r24
    1748:	24 c0       	rjmp	.+72     	; 0x1792 <lcd_set_4bit+0x764>
    174a:	ce 01       	movw	r24, r28
    174c:	8b 5b       	subi	r24, 0xBB	; 187
    174e:	9f 4f       	sbci	r25, 0xFF	; 255
    1750:	20 e7       	ldi	r18, 0x70	; 112
    1752:	31 e0       	ldi	r19, 0x01	; 1
    1754:	fc 01       	movw	r30, r24
    1756:	31 83       	std	Z+1, r19	; 0x01
    1758:	20 83       	st	Z, r18
    175a:	ce 01       	movw	r24, r28
    175c:	8b 5b       	subi	r24, 0xBB	; 187
    175e:	9f 4f       	sbci	r25, 0xFF	; 255
    1760:	fc 01       	movw	r30, r24
    1762:	80 81       	ld	r24, Z
    1764:	91 81       	ldd	r25, Z+1	; 0x01
    1766:	01 97       	sbiw	r24, 0x01	; 1
    1768:	f1 f7       	brne	.-4      	; 0x1766 <lcd_set_4bit+0x738>
    176a:	9e 01       	movw	r18, r28
    176c:	2b 5b       	subi	r18, 0xBB	; 187
    176e:	3f 4f       	sbci	r19, 0xFF	; 255
    1770:	f9 01       	movw	r30, r18
    1772:	91 83       	std	Z+1, r25	; 0x01
    1774:	80 83       	st	Z, r24
    1776:	ce 01       	movw	r24, r28
    1778:	8d 5b       	subi	r24, 0xBD	; 189
    177a:	9f 4f       	sbci	r25, 0xFF	; 255
    177c:	9e 01       	movw	r18, r28
    177e:	2d 5b       	subi	r18, 0xBD	; 189
    1780:	3f 4f       	sbci	r19, 0xFF	; 255
    1782:	f9 01       	movw	r30, r18
    1784:	20 81       	ld	r18, Z
    1786:	31 81       	ldd	r19, Z+1	; 0x01
    1788:	21 50       	subi	r18, 0x01	; 1
    178a:	31 09       	sbc	r19, r1
    178c:	fc 01       	movw	r30, r24
    178e:	31 83       	std	Z+1, r19	; 0x01
    1790:	20 83       	st	Z, r18
    1792:	ce 01       	movw	r24, r28
    1794:	8d 5b       	subi	r24, 0xBD	; 189
    1796:	9f 4f       	sbci	r25, 0xFF	; 255
    1798:	fc 01       	movw	r30, r24
    179a:	80 81       	ld	r24, Z
    179c:	91 81       	ldd	r25, Z+1	; 0x01
    179e:	89 2b       	or	r24, r25
    17a0:	a1 f6       	brne	.-88     	; 0x174a <lcd_set_4bit+0x71c>
    17a2:	2a c0       	rjmp	.+84     	; 0x17f8 <lcd_set_4bit+0x7ca>
    17a4:	8e 01       	movw	r16, r28
    17a6:	0d 5b       	subi	r16, 0xBD	; 189
    17a8:	1f 4f       	sbci	r17, 0xFF	; 255
    17aa:	ce 01       	movw	r24, r28
    17ac:	cf 96       	adiw	r24, 0x3f	; 63
    17ae:	fc 01       	movw	r30, r24
    17b0:	60 81       	ld	r22, Z
    17b2:	71 81       	ldd	r23, Z+1	; 0x01
    17b4:	82 81       	ldd	r24, Z+2	; 0x02
    17b6:	93 81       	ldd	r25, Z+3	; 0x03
    17b8:	e5 d5       	rcall	.+3018   	; 0x2384 <__fixunssfsi>
    17ba:	dc 01       	movw	r26, r24
    17bc:	cb 01       	movw	r24, r22
    17be:	f8 01       	movw	r30, r16
    17c0:	91 83       	std	Z+1, r25	; 0x01
    17c2:	80 83       	st	Z, r24
    17c4:	ce 01       	movw	r24, r28
    17c6:	89 5b       	subi	r24, 0xB9	; 185
    17c8:	9f 4f       	sbci	r25, 0xFF	; 255
    17ca:	9e 01       	movw	r18, r28
    17cc:	2d 5b       	subi	r18, 0xBD	; 189
    17ce:	3f 4f       	sbci	r19, 0xFF	; 255
    17d0:	f9 01       	movw	r30, r18
    17d2:	20 81       	ld	r18, Z
    17d4:	31 81       	ldd	r19, Z+1	; 0x01
    17d6:	fc 01       	movw	r30, r24
    17d8:	31 83       	std	Z+1, r19	; 0x01
    17da:	20 83       	st	Z, r18
    17dc:	ce 01       	movw	r24, r28
    17de:	89 5b       	subi	r24, 0xB9	; 185
    17e0:	9f 4f       	sbci	r25, 0xFF	; 255
    17e2:	fc 01       	movw	r30, r24
    17e4:	80 81       	ld	r24, Z
    17e6:	91 81       	ldd	r25, Z+1	; 0x01
    17e8:	01 97       	sbiw	r24, 0x01	; 1
    17ea:	f1 f7       	brne	.-4      	; 0x17e8 <lcd_set_4bit+0x7ba>
    17ec:	9e 01       	movw	r18, r28
    17ee:	29 5b       	subi	r18, 0xB9	; 185
    17f0:	3f 4f       	sbci	r19, 0xFF	; 255
    17f2:	f9 01       	movw	r30, r18
    17f4:	91 83       	std	Z+1, r25	; 0x01
    17f6:	80 83       	st	Z, r24
    17f8:	88 e2       	ldi	r24, 0x28	; 40
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	28 e2       	ldi	r18, 0x28	; 40
    17fe:	30 e0       	ldi	r19, 0x00	; 0
    1800:	f9 01       	movw	r30, r18
    1802:	20 81       	ld	r18, Z
    1804:	2e 7f       	andi	r18, 0xFE	; 254
    1806:	fc 01       	movw	r30, r24
    1808:	20 83       	st	Z, r18
    180a:	88 e2       	ldi	r24, 0x28	; 40
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	28 e2       	ldi	r18, 0x28	; 40
    1810:	30 e0       	ldi	r19, 0x00	; 0
    1812:	f9 01       	movw	r30, r18
    1814:	20 81       	ld	r18, Z
    1816:	2d 7f       	andi	r18, 0xFD	; 253
    1818:	fc 01       	movw	r30, r24
    181a:	20 83       	st	Z, r18
    181c:	88 e2       	ldi	r24, 0x28	; 40
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	20 e3       	ldi	r18, 0x30	; 48
    1822:	fc 01       	movw	r30, r24
    1824:	20 83       	st	Z, r18
    1826:	88 e2       	ldi	r24, 0x28	; 40
    1828:	90 e0       	ldi	r25, 0x00	; 0
    182a:	28 e2       	ldi	r18, 0x28	; 40
    182c:	30 e0       	ldi	r19, 0x00	; 0
    182e:	f9 01       	movw	r30, r18
    1830:	20 81       	ld	r18, Z
    1832:	24 60       	ori	r18, 0x04	; 4
    1834:	fc 01       	movw	r30, r24
    1836:	20 83       	st	Z, r18
    1838:	80 e0       	ldi	r24, 0x00	; 0
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	a0 ea       	ldi	r26, 0xA0	; 160
    183e:	b0 e4       	ldi	r27, 0x40	; 64
    1840:	8d 8b       	std	Y+21, r24	; 0x15
    1842:	9e 8b       	std	Y+22, r25	; 0x16
    1844:	af 8b       	std	Y+23, r26	; 0x17
    1846:	b8 8f       	std	Y+24, r27	; 0x18
    1848:	26 e6       	ldi	r18, 0x66	; 102
    184a:	36 e6       	ldi	r19, 0x66	; 102
    184c:	46 e6       	ldi	r20, 0x66	; 102
    184e:	55 e4       	ldi	r21, 0x45	; 69
    1850:	6d 89       	ldd	r22, Y+21	; 0x15
    1852:	7e 89       	ldd	r23, Y+22	; 0x16
    1854:	8f 89       	ldd	r24, Y+23	; 0x17
    1856:	98 8d       	ldd	r25, Y+24	; 0x18
    1858:	77 d6       	rcall	.+3310   	; 0x2548 <__mulsf3>
    185a:	dc 01       	movw	r26, r24
    185c:	cb 01       	movw	r24, r22
    185e:	8d ab       	std	Y+53, r24	; 0x35
    1860:	9e ab       	std	Y+54, r25	; 0x36
    1862:	af ab       	std	Y+55, r26	; 0x37
    1864:	b8 af       	std	Y+56, r27	; 0x38
    1866:	20 e0       	ldi	r18, 0x00	; 0
    1868:	30 e0       	ldi	r19, 0x00	; 0
    186a:	40 e8       	ldi	r20, 0x80	; 128
    186c:	5f e3       	ldi	r21, 0x3F	; 63
    186e:	6d a9       	ldd	r22, Y+53	; 0x35
    1870:	7e a9       	ldd	r23, Y+54	; 0x36
    1872:	8f a9       	ldd	r24, Y+55	; 0x37
    1874:	98 ad       	ldd	r25, Y+56	; 0x38
    1876:	1a d5       	rcall	.+2612   	; 0x22ac <__cmpsf2>
    1878:	88 23       	and	r24, r24
    187a:	2c f4       	brge	.+10     	; 0x1886 <lcd_set_4bit+0x858>
    187c:	81 e0       	ldi	r24, 0x01	; 1
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	9a af       	std	Y+58, r25	; 0x3a
    1882:	89 af       	std	Y+57, r24	; 0x39
    1884:	3b c0       	rjmp	.+118    	; 0x18fc <lcd_set_4bit+0x8ce>
    1886:	20 e0       	ldi	r18, 0x00	; 0
    1888:	3f ef       	ldi	r19, 0xFF	; 255
    188a:	4f e7       	ldi	r20, 0x7F	; 127
    188c:	57 e4       	ldi	r21, 0x47	; 71
    188e:	6d a9       	ldd	r22, Y+53	; 0x35
    1890:	7e a9       	ldd	r23, Y+54	; 0x36
    1892:	8f a9       	ldd	r24, Y+55	; 0x37
    1894:	98 ad       	ldd	r25, Y+56	; 0x38
    1896:	54 d6       	rcall	.+3240   	; 0x2540 <__gesf2>
    1898:	18 16       	cp	r1, r24
    189a:	3c f5       	brge	.+78     	; 0x18ea <lcd_set_4bit+0x8bc>
    189c:	20 e0       	ldi	r18, 0x00	; 0
    189e:	30 e0       	ldi	r19, 0x00	; 0
    18a0:	40 e2       	ldi	r20, 0x20	; 32
    18a2:	51 e4       	ldi	r21, 0x41	; 65
    18a4:	6d 89       	ldd	r22, Y+21	; 0x15
    18a6:	7e 89       	ldd	r23, Y+22	; 0x16
    18a8:	8f 89       	ldd	r24, Y+23	; 0x17
    18aa:	98 8d       	ldd	r25, Y+24	; 0x18
    18ac:	4d d6       	rcall	.+3226   	; 0x2548 <__mulsf3>
    18ae:	dc 01       	movw	r26, r24
    18b0:	cb 01       	movw	r24, r22
    18b2:	bc 01       	movw	r22, r24
    18b4:	cd 01       	movw	r24, r26
    18b6:	66 d5       	rcall	.+2764   	; 0x2384 <__fixunssfsi>
    18b8:	dc 01       	movw	r26, r24
    18ba:	cb 01       	movw	r24, r22
    18bc:	9a af       	std	Y+58, r25	; 0x3a
    18be:	89 af       	std	Y+57, r24	; 0x39
    18c0:	0f c0       	rjmp	.+30     	; 0x18e0 <lcd_set_4bit+0x8b2>
    18c2:	80 e7       	ldi	r24, 0x70	; 112
    18c4:	91 e0       	ldi	r25, 0x01	; 1
    18c6:	9c af       	std	Y+60, r25	; 0x3c
    18c8:	8b af       	std	Y+59, r24	; 0x3b
    18ca:	8b ad       	ldd	r24, Y+59	; 0x3b
    18cc:	9c ad       	ldd	r25, Y+60	; 0x3c
    18ce:	01 97       	sbiw	r24, 0x01	; 1
    18d0:	f1 f7       	brne	.-4      	; 0x18ce <lcd_set_4bit+0x8a0>
    18d2:	9c af       	std	Y+60, r25	; 0x3c
    18d4:	8b af       	std	Y+59, r24	; 0x3b
    18d6:	89 ad       	ldd	r24, Y+57	; 0x39
    18d8:	9a ad       	ldd	r25, Y+58	; 0x3a
    18da:	01 97       	sbiw	r24, 0x01	; 1
    18dc:	9a af       	std	Y+58, r25	; 0x3a
    18de:	89 af       	std	Y+57, r24	; 0x39
    18e0:	89 ad       	ldd	r24, Y+57	; 0x39
    18e2:	9a ad       	ldd	r25, Y+58	; 0x3a
    18e4:	89 2b       	or	r24, r25
    18e6:	69 f7       	brne	.-38     	; 0x18c2 <lcd_set_4bit+0x894>
    18e8:	13 c0       	rjmp	.+38     	; 0x1910 <lcd_set_4bit+0x8e2>
    18ea:	6d a9       	ldd	r22, Y+53	; 0x35
    18ec:	7e a9       	ldd	r23, Y+54	; 0x36
    18ee:	8f a9       	ldd	r24, Y+55	; 0x37
    18f0:	98 ad       	ldd	r25, Y+56	; 0x38
    18f2:	48 d5       	rcall	.+2704   	; 0x2384 <__fixunssfsi>
    18f4:	dc 01       	movw	r26, r24
    18f6:	cb 01       	movw	r24, r22
    18f8:	9a af       	std	Y+58, r25	; 0x3a
    18fa:	89 af       	std	Y+57, r24	; 0x39
    18fc:	89 ad       	ldd	r24, Y+57	; 0x39
    18fe:	9a ad       	ldd	r25, Y+58	; 0x3a
    1900:	9e af       	std	Y+62, r25	; 0x3e
    1902:	8d af       	std	Y+61, r24	; 0x3d
    1904:	8d ad       	ldd	r24, Y+61	; 0x3d
    1906:	9e ad       	ldd	r25, Y+62	; 0x3e
    1908:	01 97       	sbiw	r24, 0x01	; 1
    190a:	f1 f7       	brne	.-4      	; 0x1908 <lcd_set_4bit+0x8da>
    190c:	9e af       	std	Y+62, r25	; 0x3e
    190e:	8d af       	std	Y+61, r24	; 0x3d
    1910:	88 e2       	ldi	r24, 0x28	; 40
    1912:	90 e0       	ldi	r25, 0x00	; 0
    1914:	28 e2       	ldi	r18, 0x28	; 40
    1916:	30 e0       	ldi	r19, 0x00	; 0
    1918:	f9 01       	movw	r30, r18
    191a:	20 81       	ld	r18, Z
    191c:	2b 7f       	andi	r18, 0xFB	; 251
    191e:	fc 01       	movw	r30, r24
    1920:	20 83       	st	Z, r18
    1922:	80 e0       	ldi	r24, 0x00	; 0
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	a0 e8       	ldi	r26, 0x80	; 128
    1928:	bf e3       	ldi	r27, 0x3F	; 63
    192a:	89 8f       	std	Y+25, r24	; 0x19
    192c:	9a 8f       	std	Y+26, r25	; 0x1a
    192e:	ab 8f       	std	Y+27, r26	; 0x1b
    1930:	bc 8f       	std	Y+28, r27	; 0x1c
    1932:	26 e6       	ldi	r18, 0x66	; 102
    1934:	36 e6       	ldi	r19, 0x66	; 102
    1936:	46 e6       	ldi	r20, 0x66	; 102
    1938:	55 e4       	ldi	r21, 0x45	; 69
    193a:	69 8d       	ldd	r22, Y+25	; 0x19
    193c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    193e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1940:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1942:	02 d6       	rcall	.+3076   	; 0x2548 <__mulsf3>
    1944:	dc 01       	movw	r26, r24
    1946:	cb 01       	movw	r24, r22
    1948:	8b a7       	std	Y+43, r24	; 0x2b
    194a:	9c a7       	std	Y+44, r25	; 0x2c
    194c:	ad a7       	std	Y+45, r26	; 0x2d
    194e:	be a7       	std	Y+46, r27	; 0x2e
    1950:	20 e0       	ldi	r18, 0x00	; 0
    1952:	30 e0       	ldi	r19, 0x00	; 0
    1954:	40 e8       	ldi	r20, 0x80	; 128
    1956:	5f e3       	ldi	r21, 0x3F	; 63
    1958:	6b a5       	ldd	r22, Y+43	; 0x2b
    195a:	7c a5       	ldd	r23, Y+44	; 0x2c
    195c:	8d a5       	ldd	r24, Y+45	; 0x2d
    195e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1960:	a5 d4       	rcall	.+2378   	; 0x22ac <__cmpsf2>
    1962:	88 23       	and	r24, r24
    1964:	2c f4       	brge	.+10     	; 0x1970 <lcd_set_4bit+0x942>
    1966:	81 e0       	ldi	r24, 0x01	; 1
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	98 ab       	std	Y+48, r25	; 0x30
    196c:	8f a7       	std	Y+47, r24	; 0x2f
    196e:	3b c0       	rjmp	.+118    	; 0x19e6 <lcd_set_4bit+0x9b8>
    1970:	20 e0       	ldi	r18, 0x00	; 0
    1972:	3f ef       	ldi	r19, 0xFF	; 255
    1974:	4f e7       	ldi	r20, 0x7F	; 127
    1976:	57 e4       	ldi	r21, 0x47	; 71
    1978:	6b a5       	ldd	r22, Y+43	; 0x2b
    197a:	7c a5       	ldd	r23, Y+44	; 0x2c
    197c:	8d a5       	ldd	r24, Y+45	; 0x2d
    197e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1980:	df d5       	rcall	.+3006   	; 0x2540 <__gesf2>
    1982:	18 16       	cp	r1, r24
    1984:	3c f5       	brge	.+78     	; 0x19d4 <lcd_set_4bit+0x9a6>
    1986:	20 e0       	ldi	r18, 0x00	; 0
    1988:	30 e0       	ldi	r19, 0x00	; 0
    198a:	40 e2       	ldi	r20, 0x20	; 32
    198c:	51 e4       	ldi	r21, 0x41	; 65
    198e:	69 8d       	ldd	r22, Y+25	; 0x19
    1990:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1992:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1994:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1996:	d8 d5       	rcall	.+2992   	; 0x2548 <__mulsf3>
    1998:	dc 01       	movw	r26, r24
    199a:	cb 01       	movw	r24, r22
    199c:	bc 01       	movw	r22, r24
    199e:	cd 01       	movw	r24, r26
    19a0:	f1 d4       	rcall	.+2530   	; 0x2384 <__fixunssfsi>
    19a2:	dc 01       	movw	r26, r24
    19a4:	cb 01       	movw	r24, r22
    19a6:	98 ab       	std	Y+48, r25	; 0x30
    19a8:	8f a7       	std	Y+47, r24	; 0x2f
    19aa:	0f c0       	rjmp	.+30     	; 0x19ca <lcd_set_4bit+0x99c>
    19ac:	80 e7       	ldi	r24, 0x70	; 112
    19ae:	91 e0       	ldi	r25, 0x01	; 1
    19b0:	9a ab       	std	Y+50, r25	; 0x32
    19b2:	89 ab       	std	Y+49, r24	; 0x31
    19b4:	89 a9       	ldd	r24, Y+49	; 0x31
    19b6:	9a a9       	ldd	r25, Y+50	; 0x32
    19b8:	01 97       	sbiw	r24, 0x01	; 1
    19ba:	f1 f7       	brne	.-4      	; 0x19b8 <lcd_set_4bit+0x98a>
    19bc:	9a ab       	std	Y+50, r25	; 0x32
    19be:	89 ab       	std	Y+49, r24	; 0x31
    19c0:	8f a5       	ldd	r24, Y+47	; 0x2f
    19c2:	98 a9       	ldd	r25, Y+48	; 0x30
    19c4:	01 97       	sbiw	r24, 0x01	; 1
    19c6:	98 ab       	std	Y+48, r25	; 0x30
    19c8:	8f a7       	std	Y+47, r24	; 0x2f
    19ca:	8f a5       	ldd	r24, Y+47	; 0x2f
    19cc:	98 a9       	ldd	r25, Y+48	; 0x30
    19ce:	89 2b       	or	r24, r25
    19d0:	69 f7       	brne	.-38     	; 0x19ac <lcd_set_4bit+0x97e>
    19d2:	13 c0       	rjmp	.+38     	; 0x19fa <lcd_set_4bit+0x9cc>
    19d4:	6b a5       	ldd	r22, Y+43	; 0x2b
    19d6:	7c a5       	ldd	r23, Y+44	; 0x2c
    19d8:	8d a5       	ldd	r24, Y+45	; 0x2d
    19da:	9e a5       	ldd	r25, Y+46	; 0x2e
    19dc:	d3 d4       	rcall	.+2470   	; 0x2384 <__fixunssfsi>
    19de:	dc 01       	movw	r26, r24
    19e0:	cb 01       	movw	r24, r22
    19e2:	98 ab       	std	Y+48, r25	; 0x30
    19e4:	8f a7       	std	Y+47, r24	; 0x2f
    19e6:	8f a5       	ldd	r24, Y+47	; 0x2f
    19e8:	98 a9       	ldd	r25, Y+48	; 0x30
    19ea:	9c ab       	std	Y+52, r25	; 0x34
    19ec:	8b ab       	std	Y+51, r24	; 0x33
    19ee:	8b a9       	ldd	r24, Y+51	; 0x33
    19f0:	9c a9       	ldd	r25, Y+52	; 0x34
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	f1 f7       	brne	.-4      	; 0x19f2 <lcd_set_4bit+0x9c4>
    19f6:	9c ab       	std	Y+52, r25	; 0x34
    19f8:	8b ab       	std	Y+51, r24	; 0x33
    19fa:	88 e2       	ldi	r24, 0x28	; 40
    19fc:	90 e0       	ldi	r25, 0x00	; 0
    19fe:	28 e2       	ldi	r18, 0x28	; 40
    1a00:	30 e0       	ldi	r19, 0x00	; 0
    1a02:	f9 01       	movw	r30, r18
    1a04:	20 81       	ld	r18, Z
    1a06:	2e 7f       	andi	r18, 0xFE	; 254
    1a08:	fc 01       	movw	r30, r24
    1a0a:	20 83       	st	Z, r18
    1a0c:	88 e2       	ldi	r24, 0x28	; 40
    1a0e:	90 e0       	ldi	r25, 0x00	; 0
    1a10:	28 e2       	ldi	r18, 0x28	; 40
    1a12:	30 e0       	ldi	r19, 0x00	; 0
    1a14:	f9 01       	movw	r30, r18
    1a16:	20 81       	ld	r18, Z
    1a18:	2d 7f       	andi	r18, 0xFD	; 253
    1a1a:	fc 01       	movw	r30, r24
    1a1c:	20 83       	st	Z, r18
    1a1e:	88 e2       	ldi	r24, 0x28	; 40
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	20 e2       	ldi	r18, 0x20	; 32
    1a24:	fc 01       	movw	r30, r24
    1a26:	20 83       	st	Z, r18
    1a28:	88 e2       	ldi	r24, 0x28	; 40
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	28 e2       	ldi	r18, 0x28	; 40
    1a2e:	30 e0       	ldi	r19, 0x00	; 0
    1a30:	f9 01       	movw	r30, r18
    1a32:	20 81       	ld	r18, Z
    1a34:	24 60       	ori	r18, 0x04	; 4
    1a36:	fc 01       	movw	r30, r24
    1a38:	20 83       	st	Z, r18
    1a3a:	80 e0       	ldi	r24, 0x00	; 0
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	a0 ea       	ldi	r26, 0xA0	; 160
    1a40:	b0 e4       	ldi	r27, 0x40	; 64
    1a42:	8d 8f       	std	Y+29, r24	; 0x1d
    1a44:	9e 8f       	std	Y+30, r25	; 0x1e
    1a46:	af 8f       	std	Y+31, r26	; 0x1f
    1a48:	b8 a3       	std	Y+32, r27	; 0x20
    1a4a:	26 e6       	ldi	r18, 0x66	; 102
    1a4c:	36 e6       	ldi	r19, 0x66	; 102
    1a4e:	46 e6       	ldi	r20, 0x66	; 102
    1a50:	55 e4       	ldi	r21, 0x45	; 69
    1a52:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a54:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a56:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a58:	98 a1       	ldd	r25, Y+32	; 0x20
    1a5a:	76 d5       	rcall	.+2796   	; 0x2548 <__mulsf3>
    1a5c:	dc 01       	movw	r26, r24
    1a5e:	cb 01       	movw	r24, r22
    1a60:	89 a3       	std	Y+33, r24	; 0x21
    1a62:	9a a3       	std	Y+34, r25	; 0x22
    1a64:	ab a3       	std	Y+35, r26	; 0x23
    1a66:	bc a3       	std	Y+36, r27	; 0x24
    1a68:	20 e0       	ldi	r18, 0x00	; 0
    1a6a:	30 e0       	ldi	r19, 0x00	; 0
    1a6c:	40 e8       	ldi	r20, 0x80	; 128
    1a6e:	5f e3       	ldi	r21, 0x3F	; 63
    1a70:	69 a1       	ldd	r22, Y+33	; 0x21
    1a72:	7a a1       	ldd	r23, Y+34	; 0x22
    1a74:	8b a1       	ldd	r24, Y+35	; 0x23
    1a76:	9c a1       	ldd	r25, Y+36	; 0x24
    1a78:	19 d4       	rcall	.+2098   	; 0x22ac <__cmpsf2>
    1a7a:	88 23       	and	r24, r24
    1a7c:	2c f4       	brge	.+10     	; 0x1a88 <lcd_set_4bit+0xa5a>
    1a7e:	81 e0       	ldi	r24, 0x01	; 1
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	9e a3       	std	Y+38, r25	; 0x26
    1a84:	8d a3       	std	Y+37, r24	; 0x25
    1a86:	3b c0       	rjmp	.+118    	; 0x1afe <lcd_set_4bit+0xad0>
    1a88:	20 e0       	ldi	r18, 0x00	; 0
    1a8a:	3f ef       	ldi	r19, 0xFF	; 255
    1a8c:	4f e7       	ldi	r20, 0x7F	; 127
    1a8e:	57 e4       	ldi	r21, 0x47	; 71
    1a90:	69 a1       	ldd	r22, Y+33	; 0x21
    1a92:	7a a1       	ldd	r23, Y+34	; 0x22
    1a94:	8b a1       	ldd	r24, Y+35	; 0x23
    1a96:	9c a1       	ldd	r25, Y+36	; 0x24
    1a98:	53 d5       	rcall	.+2726   	; 0x2540 <__gesf2>
    1a9a:	18 16       	cp	r1, r24
    1a9c:	3c f5       	brge	.+78     	; 0x1aec <lcd_set_4bit+0xabe>
    1a9e:	20 e0       	ldi	r18, 0x00	; 0
    1aa0:	30 e0       	ldi	r19, 0x00	; 0
    1aa2:	40 e2       	ldi	r20, 0x20	; 32
    1aa4:	51 e4       	ldi	r21, 0x41	; 65
    1aa6:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1aa8:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1aaa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1aac:	98 a1       	ldd	r25, Y+32	; 0x20
    1aae:	4c d5       	rcall	.+2712   	; 0x2548 <__mulsf3>
    1ab0:	dc 01       	movw	r26, r24
    1ab2:	cb 01       	movw	r24, r22
    1ab4:	bc 01       	movw	r22, r24
    1ab6:	cd 01       	movw	r24, r26
    1ab8:	65 d4       	rcall	.+2250   	; 0x2384 <__fixunssfsi>
    1aba:	dc 01       	movw	r26, r24
    1abc:	cb 01       	movw	r24, r22
    1abe:	9e a3       	std	Y+38, r25	; 0x26
    1ac0:	8d a3       	std	Y+37, r24	; 0x25
    1ac2:	0f c0       	rjmp	.+30     	; 0x1ae2 <lcd_set_4bit+0xab4>
    1ac4:	80 e7       	ldi	r24, 0x70	; 112
    1ac6:	91 e0       	ldi	r25, 0x01	; 1
    1ac8:	98 a7       	std	Y+40, r25	; 0x28
    1aca:	8f a3       	std	Y+39, r24	; 0x27
    1acc:	8f a1       	ldd	r24, Y+39	; 0x27
    1ace:	98 a5       	ldd	r25, Y+40	; 0x28
    1ad0:	01 97       	sbiw	r24, 0x01	; 1
    1ad2:	f1 f7       	brne	.-4      	; 0x1ad0 <lcd_set_4bit+0xaa2>
    1ad4:	98 a7       	std	Y+40, r25	; 0x28
    1ad6:	8f a3       	std	Y+39, r24	; 0x27
    1ad8:	8d a1       	ldd	r24, Y+37	; 0x25
    1ada:	9e a1       	ldd	r25, Y+38	; 0x26
    1adc:	01 97       	sbiw	r24, 0x01	; 1
    1ade:	9e a3       	std	Y+38, r25	; 0x26
    1ae0:	8d a3       	std	Y+37, r24	; 0x25
    1ae2:	8d a1       	ldd	r24, Y+37	; 0x25
    1ae4:	9e a1       	ldd	r25, Y+38	; 0x26
    1ae6:	89 2b       	or	r24, r25
    1ae8:	69 f7       	brne	.-38     	; 0x1ac4 <lcd_set_4bit+0xa96>
    1aea:	13 c0       	rjmp	.+38     	; 0x1b12 <lcd_set_4bit+0xae4>
    1aec:	69 a1       	ldd	r22, Y+33	; 0x21
    1aee:	7a a1       	ldd	r23, Y+34	; 0x22
    1af0:	8b a1       	ldd	r24, Y+35	; 0x23
    1af2:	9c a1       	ldd	r25, Y+36	; 0x24
    1af4:	47 d4       	rcall	.+2190   	; 0x2384 <__fixunssfsi>
    1af6:	dc 01       	movw	r26, r24
    1af8:	cb 01       	movw	r24, r22
    1afa:	9e a3       	std	Y+38, r25	; 0x26
    1afc:	8d a3       	std	Y+37, r24	; 0x25
    1afe:	8d a1       	ldd	r24, Y+37	; 0x25
    1b00:	9e a1       	ldd	r25, Y+38	; 0x26
    1b02:	9a a7       	std	Y+42, r25	; 0x2a
    1b04:	89 a7       	std	Y+41, r24	; 0x29
    1b06:	89 a5       	ldd	r24, Y+41	; 0x29
    1b08:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b0a:	01 97       	sbiw	r24, 0x01	; 1
    1b0c:	f1 f7       	brne	.-4      	; 0x1b0a <lcd_set_4bit+0xadc>
    1b0e:	9a a7       	std	Y+42, r25	; 0x2a
    1b10:	89 a7       	std	Y+41, r24	; 0x29
    1b12:	88 e2       	ldi	r24, 0x28	; 40
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	28 e2       	ldi	r18, 0x28	; 40
    1b18:	30 e0       	ldi	r19, 0x00	; 0
    1b1a:	f9 01       	movw	r30, r18
    1b1c:	20 81       	ld	r18, Z
    1b1e:	2b 7f       	andi	r18, 0xFB	; 251
    1b20:	fc 01       	movw	r30, r24
    1b22:	20 83       	st	Z, r18
    1b24:	00 00       	nop
    1b26:	c0 59       	subi	r28, 0x90	; 144
    1b28:	df 4f       	sbci	r29, 0xFF	; 255
    1b2a:	0f b6       	in	r0, 0x3f	; 63
    1b2c:	f8 94       	cli
    1b2e:	de bf       	out	0x3e, r29	; 62
    1b30:	0f be       	out	0x3f, r0	; 63
    1b32:	cd bf       	out	0x3d, r28	; 61
    1b34:	df 91       	pop	r29
    1b36:	cf 91       	pop	r28
    1b38:	1f 91       	pop	r17
    1b3a:	0f 91       	pop	r16
    1b3c:	08 95       	ret

00001b3e <lcd_wr_command>:
    1b3e:	cf 93       	push	r28
    1b40:	df 93       	push	r29
    1b42:	cd b7       	in	r28, 0x3d	; 61
    1b44:	de b7       	in	r29, 0x3e	; 62
    1b46:	6e 97       	sbiw	r28, 0x1e	; 30
    1b48:	0f b6       	in	r0, 0x3f	; 63
    1b4a:	f8 94       	cli
    1b4c:	de bf       	out	0x3e, r29	; 62
    1b4e:	0f be       	out	0x3f, r0	; 63
    1b50:	cd bf       	out	0x3d, r28	; 61
    1b52:	8e 8f       	std	Y+30, r24	; 0x1e
    1b54:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1b56:	89 83       	std	Y+1, r24	; 0x01
    1b58:	89 81       	ldd	r24, Y+1	; 0x01
    1b5a:	80 7f       	andi	r24, 0xF0	; 240
    1b5c:	89 83       	std	Y+1, r24	; 0x01
    1b5e:	88 e2       	ldi	r24, 0x28	; 40
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	28 e2       	ldi	r18, 0x28	; 40
    1b64:	30 e0       	ldi	r19, 0x00	; 0
    1b66:	f9 01       	movw	r30, r18
    1b68:	20 81       	ld	r18, Z
    1b6a:	2f 70       	andi	r18, 0x0F	; 15
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	20 83       	st	Z, r18
    1b70:	88 e2       	ldi	r24, 0x28	; 40
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	28 e2       	ldi	r18, 0x28	; 40
    1b76:	30 e0       	ldi	r19, 0x00	; 0
    1b78:	f9 01       	movw	r30, r18
    1b7a:	30 81       	ld	r19, Z
    1b7c:	29 81       	ldd	r18, Y+1	; 0x01
    1b7e:	23 2b       	or	r18, r19
    1b80:	fc 01       	movw	r30, r24
    1b82:	20 83       	st	Z, r18
    1b84:	88 e2       	ldi	r24, 0x28	; 40
    1b86:	90 e0       	ldi	r25, 0x00	; 0
    1b88:	28 e2       	ldi	r18, 0x28	; 40
    1b8a:	30 e0       	ldi	r19, 0x00	; 0
    1b8c:	f9 01       	movw	r30, r18
    1b8e:	20 81       	ld	r18, Z
    1b90:	2e 7f       	andi	r18, 0xFE	; 254
    1b92:	fc 01       	movw	r30, r24
    1b94:	20 83       	st	Z, r18
    1b96:	88 e2       	ldi	r24, 0x28	; 40
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	28 e2       	ldi	r18, 0x28	; 40
    1b9c:	30 e0       	ldi	r19, 0x00	; 0
    1b9e:	f9 01       	movw	r30, r18
    1ba0:	20 81       	ld	r18, Z
    1ba2:	2d 7f       	andi	r18, 0xFD	; 253
    1ba4:	fc 01       	movw	r30, r24
    1ba6:	20 83       	st	Z, r18
    1ba8:	88 e2       	ldi	r24, 0x28	; 40
    1baa:	90 e0       	ldi	r25, 0x00	; 0
    1bac:	28 e2       	ldi	r18, 0x28	; 40
    1bae:	30 e0       	ldi	r19, 0x00	; 0
    1bb0:	f9 01       	movw	r30, r18
    1bb2:	20 81       	ld	r18, Z
    1bb4:	24 60       	ori	r18, 0x04	; 4
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	20 83       	st	Z, r18
    1bba:	80 e0       	ldi	r24, 0x00	; 0
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	a0 ea       	ldi	r26, 0xA0	; 160
    1bc0:	b0 e4       	ldi	r27, 0x40	; 64
    1bc2:	8a 83       	std	Y+2, r24	; 0x02
    1bc4:	9b 83       	std	Y+3, r25	; 0x03
    1bc6:	ac 83       	std	Y+4, r26	; 0x04
    1bc8:	bd 83       	std	Y+5, r27	; 0x05
    1bca:	26 e6       	ldi	r18, 0x66	; 102
    1bcc:	36 e6       	ldi	r19, 0x66	; 102
    1bce:	46 e6       	ldi	r20, 0x66	; 102
    1bd0:	55 e4       	ldi	r21, 0x45	; 69
    1bd2:	6a 81       	ldd	r22, Y+2	; 0x02
    1bd4:	7b 81       	ldd	r23, Y+3	; 0x03
    1bd6:	8c 81       	ldd	r24, Y+4	; 0x04
    1bd8:	9d 81       	ldd	r25, Y+5	; 0x05
    1bda:	b6 d4       	rcall	.+2412   	; 0x2548 <__mulsf3>
    1bdc:	dc 01       	movw	r26, r24
    1bde:	cb 01       	movw	r24, r22
    1be0:	8c 8b       	std	Y+20, r24	; 0x14
    1be2:	9d 8b       	std	Y+21, r25	; 0x15
    1be4:	ae 8b       	std	Y+22, r26	; 0x16
    1be6:	bf 8b       	std	Y+23, r27	; 0x17
    1be8:	20 e0       	ldi	r18, 0x00	; 0
    1bea:	30 e0       	ldi	r19, 0x00	; 0
    1bec:	40 e8       	ldi	r20, 0x80	; 128
    1bee:	5f e3       	ldi	r21, 0x3F	; 63
    1bf0:	6c 89       	ldd	r22, Y+20	; 0x14
    1bf2:	7d 89       	ldd	r23, Y+21	; 0x15
    1bf4:	8e 89       	ldd	r24, Y+22	; 0x16
    1bf6:	9f 89       	ldd	r25, Y+23	; 0x17
    1bf8:	59 d3       	rcall	.+1714   	; 0x22ac <__cmpsf2>
    1bfa:	88 23       	and	r24, r24
    1bfc:	2c f4       	brge	.+10     	; 0x1c08 <lcd_wr_command+0xca>
    1bfe:	81 e0       	ldi	r24, 0x01	; 1
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	99 8f       	std	Y+25, r25	; 0x19
    1c04:	88 8f       	std	Y+24, r24	; 0x18
    1c06:	3b c0       	rjmp	.+118    	; 0x1c7e <lcd_wr_command+0x140>
    1c08:	20 e0       	ldi	r18, 0x00	; 0
    1c0a:	3f ef       	ldi	r19, 0xFF	; 255
    1c0c:	4f e7       	ldi	r20, 0x7F	; 127
    1c0e:	57 e4       	ldi	r21, 0x47	; 71
    1c10:	6c 89       	ldd	r22, Y+20	; 0x14
    1c12:	7d 89       	ldd	r23, Y+21	; 0x15
    1c14:	8e 89       	ldd	r24, Y+22	; 0x16
    1c16:	9f 89       	ldd	r25, Y+23	; 0x17
    1c18:	93 d4       	rcall	.+2342   	; 0x2540 <__gesf2>
    1c1a:	18 16       	cp	r1, r24
    1c1c:	3c f5       	brge	.+78     	; 0x1c6c <lcd_wr_command+0x12e>
    1c1e:	20 e0       	ldi	r18, 0x00	; 0
    1c20:	30 e0       	ldi	r19, 0x00	; 0
    1c22:	40 e2       	ldi	r20, 0x20	; 32
    1c24:	51 e4       	ldi	r21, 0x41	; 65
    1c26:	6a 81       	ldd	r22, Y+2	; 0x02
    1c28:	7b 81       	ldd	r23, Y+3	; 0x03
    1c2a:	8c 81       	ldd	r24, Y+4	; 0x04
    1c2c:	9d 81       	ldd	r25, Y+5	; 0x05
    1c2e:	8c d4       	rcall	.+2328   	; 0x2548 <__mulsf3>
    1c30:	dc 01       	movw	r26, r24
    1c32:	cb 01       	movw	r24, r22
    1c34:	bc 01       	movw	r22, r24
    1c36:	cd 01       	movw	r24, r26
    1c38:	a5 d3       	rcall	.+1866   	; 0x2384 <__fixunssfsi>
    1c3a:	dc 01       	movw	r26, r24
    1c3c:	cb 01       	movw	r24, r22
    1c3e:	99 8f       	std	Y+25, r25	; 0x19
    1c40:	88 8f       	std	Y+24, r24	; 0x18
    1c42:	0f c0       	rjmp	.+30     	; 0x1c62 <lcd_wr_command+0x124>
    1c44:	80 e7       	ldi	r24, 0x70	; 112
    1c46:	91 e0       	ldi	r25, 0x01	; 1
    1c48:	9b 8f       	std	Y+27, r25	; 0x1b
    1c4a:	8a 8f       	std	Y+26, r24	; 0x1a
    1c4c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1c4e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1c50:	01 97       	sbiw	r24, 0x01	; 1
    1c52:	f1 f7       	brne	.-4      	; 0x1c50 <lcd_wr_command+0x112>
    1c54:	9b 8f       	std	Y+27, r25	; 0x1b
    1c56:	8a 8f       	std	Y+26, r24	; 0x1a
    1c58:	88 8d       	ldd	r24, Y+24	; 0x18
    1c5a:	99 8d       	ldd	r25, Y+25	; 0x19
    1c5c:	01 97       	sbiw	r24, 0x01	; 1
    1c5e:	99 8f       	std	Y+25, r25	; 0x19
    1c60:	88 8f       	std	Y+24, r24	; 0x18
    1c62:	88 8d       	ldd	r24, Y+24	; 0x18
    1c64:	99 8d       	ldd	r25, Y+25	; 0x19
    1c66:	89 2b       	or	r24, r25
    1c68:	69 f7       	brne	.-38     	; 0x1c44 <lcd_wr_command+0x106>
    1c6a:	13 c0       	rjmp	.+38     	; 0x1c92 <lcd_wr_command+0x154>
    1c6c:	6c 89       	ldd	r22, Y+20	; 0x14
    1c6e:	7d 89       	ldd	r23, Y+21	; 0x15
    1c70:	8e 89       	ldd	r24, Y+22	; 0x16
    1c72:	9f 89       	ldd	r25, Y+23	; 0x17
    1c74:	87 d3       	rcall	.+1806   	; 0x2384 <__fixunssfsi>
    1c76:	dc 01       	movw	r26, r24
    1c78:	cb 01       	movw	r24, r22
    1c7a:	99 8f       	std	Y+25, r25	; 0x19
    1c7c:	88 8f       	std	Y+24, r24	; 0x18
    1c7e:	88 8d       	ldd	r24, Y+24	; 0x18
    1c80:	99 8d       	ldd	r25, Y+25	; 0x19
    1c82:	9d 8f       	std	Y+29, r25	; 0x1d
    1c84:	8c 8f       	std	Y+28, r24	; 0x1c
    1c86:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1c88:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1c8a:	01 97       	sbiw	r24, 0x01	; 1
    1c8c:	f1 f7       	brne	.-4      	; 0x1c8a <lcd_wr_command+0x14c>
    1c8e:	9d 8f       	std	Y+29, r25	; 0x1d
    1c90:	8c 8f       	std	Y+28, r24	; 0x1c
    1c92:	88 e2       	ldi	r24, 0x28	; 40
    1c94:	90 e0       	ldi	r25, 0x00	; 0
    1c96:	28 e2       	ldi	r18, 0x28	; 40
    1c98:	30 e0       	ldi	r19, 0x00	; 0
    1c9a:	f9 01       	movw	r30, r18
    1c9c:	20 81       	ld	r18, Z
    1c9e:	2b 7f       	andi	r18, 0xFB	; 251
    1ca0:	fc 01       	movw	r30, r24
    1ca2:	20 83       	st	Z, r18
    1ca4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1ca6:	8f 70       	andi	r24, 0x0F	; 15
    1ca8:	8e 8f       	std	Y+30, r24	; 0x1e
    1caa:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1cac:	82 95       	swap	r24
    1cae:	80 7f       	andi	r24, 0xF0	; 240
    1cb0:	8e 8f       	std	Y+30, r24	; 0x1e
    1cb2:	88 e2       	ldi	r24, 0x28	; 40
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	28 e2       	ldi	r18, 0x28	; 40
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	f9 01       	movw	r30, r18
    1cbc:	20 81       	ld	r18, Z
    1cbe:	2f 70       	andi	r18, 0x0F	; 15
    1cc0:	fc 01       	movw	r30, r24
    1cc2:	20 83       	st	Z, r18
    1cc4:	88 e2       	ldi	r24, 0x28	; 40
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	28 e2       	ldi	r18, 0x28	; 40
    1cca:	30 e0       	ldi	r19, 0x00	; 0
    1ccc:	f9 01       	movw	r30, r18
    1cce:	30 81       	ld	r19, Z
    1cd0:	2e 8d       	ldd	r18, Y+30	; 0x1e
    1cd2:	23 2b       	or	r18, r19
    1cd4:	fc 01       	movw	r30, r24
    1cd6:	20 83       	st	Z, r18
    1cd8:	88 e2       	ldi	r24, 0x28	; 40
    1cda:	90 e0       	ldi	r25, 0x00	; 0
    1cdc:	28 e2       	ldi	r18, 0x28	; 40
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	f9 01       	movw	r30, r18
    1ce2:	20 81       	ld	r18, Z
    1ce4:	2e 7f       	andi	r18, 0xFE	; 254
    1ce6:	fc 01       	movw	r30, r24
    1ce8:	20 83       	st	Z, r18
    1cea:	88 e2       	ldi	r24, 0x28	; 40
    1cec:	90 e0       	ldi	r25, 0x00	; 0
    1cee:	28 e2       	ldi	r18, 0x28	; 40
    1cf0:	30 e0       	ldi	r19, 0x00	; 0
    1cf2:	f9 01       	movw	r30, r18
    1cf4:	20 81       	ld	r18, Z
    1cf6:	2d 7f       	andi	r18, 0xFD	; 253
    1cf8:	fc 01       	movw	r30, r24
    1cfa:	20 83       	st	Z, r18
    1cfc:	88 e2       	ldi	r24, 0x28	; 40
    1cfe:	90 e0       	ldi	r25, 0x00	; 0
    1d00:	28 e2       	ldi	r18, 0x28	; 40
    1d02:	30 e0       	ldi	r19, 0x00	; 0
    1d04:	f9 01       	movw	r30, r18
    1d06:	20 81       	ld	r18, Z
    1d08:	24 60       	ori	r18, 0x04	; 4
    1d0a:	fc 01       	movw	r30, r24
    1d0c:	20 83       	st	Z, r18
    1d0e:	80 e0       	ldi	r24, 0x00	; 0
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	a0 ea       	ldi	r26, 0xA0	; 160
    1d14:	b0 e4       	ldi	r27, 0x40	; 64
    1d16:	8e 83       	std	Y+6, r24	; 0x06
    1d18:	9f 83       	std	Y+7, r25	; 0x07
    1d1a:	a8 87       	std	Y+8, r26	; 0x08
    1d1c:	b9 87       	std	Y+9, r27	; 0x09
    1d1e:	26 e6       	ldi	r18, 0x66	; 102
    1d20:	36 e6       	ldi	r19, 0x66	; 102
    1d22:	46 e6       	ldi	r20, 0x66	; 102
    1d24:	55 e4       	ldi	r21, 0x45	; 69
    1d26:	6e 81       	ldd	r22, Y+6	; 0x06
    1d28:	7f 81       	ldd	r23, Y+7	; 0x07
    1d2a:	88 85       	ldd	r24, Y+8	; 0x08
    1d2c:	99 85       	ldd	r25, Y+9	; 0x09
    1d2e:	0c d4       	rcall	.+2072   	; 0x2548 <__mulsf3>
    1d30:	dc 01       	movw	r26, r24
    1d32:	cb 01       	movw	r24, r22
    1d34:	8a 87       	std	Y+10, r24	; 0x0a
    1d36:	9b 87       	std	Y+11, r25	; 0x0b
    1d38:	ac 87       	std	Y+12, r26	; 0x0c
    1d3a:	bd 87       	std	Y+13, r27	; 0x0d
    1d3c:	20 e0       	ldi	r18, 0x00	; 0
    1d3e:	30 e0       	ldi	r19, 0x00	; 0
    1d40:	40 e8       	ldi	r20, 0x80	; 128
    1d42:	5f e3       	ldi	r21, 0x3F	; 63
    1d44:	6a 85       	ldd	r22, Y+10	; 0x0a
    1d46:	7b 85       	ldd	r23, Y+11	; 0x0b
    1d48:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d4a:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d4c:	af d2       	rcall	.+1374   	; 0x22ac <__cmpsf2>
    1d4e:	88 23       	and	r24, r24
    1d50:	2c f4       	brge	.+10     	; 0x1d5c <lcd_wr_command+0x21e>
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	90 e0       	ldi	r25, 0x00	; 0
    1d56:	9f 87       	std	Y+15, r25	; 0x0f
    1d58:	8e 87       	std	Y+14, r24	; 0x0e
    1d5a:	3b c0       	rjmp	.+118    	; 0x1dd2 <lcd_wr_command+0x294>
    1d5c:	20 e0       	ldi	r18, 0x00	; 0
    1d5e:	3f ef       	ldi	r19, 0xFF	; 255
    1d60:	4f e7       	ldi	r20, 0x7F	; 127
    1d62:	57 e4       	ldi	r21, 0x47	; 71
    1d64:	6a 85       	ldd	r22, Y+10	; 0x0a
    1d66:	7b 85       	ldd	r23, Y+11	; 0x0b
    1d68:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d6a:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d6c:	e9 d3       	rcall	.+2002   	; 0x2540 <__gesf2>
    1d6e:	18 16       	cp	r1, r24
    1d70:	3c f5       	brge	.+78     	; 0x1dc0 <lcd_wr_command+0x282>
    1d72:	20 e0       	ldi	r18, 0x00	; 0
    1d74:	30 e0       	ldi	r19, 0x00	; 0
    1d76:	40 e2       	ldi	r20, 0x20	; 32
    1d78:	51 e4       	ldi	r21, 0x41	; 65
    1d7a:	6e 81       	ldd	r22, Y+6	; 0x06
    1d7c:	7f 81       	ldd	r23, Y+7	; 0x07
    1d7e:	88 85       	ldd	r24, Y+8	; 0x08
    1d80:	99 85       	ldd	r25, Y+9	; 0x09
    1d82:	e2 d3       	rcall	.+1988   	; 0x2548 <__mulsf3>
    1d84:	dc 01       	movw	r26, r24
    1d86:	cb 01       	movw	r24, r22
    1d88:	bc 01       	movw	r22, r24
    1d8a:	cd 01       	movw	r24, r26
    1d8c:	fb d2       	rcall	.+1526   	; 0x2384 <__fixunssfsi>
    1d8e:	dc 01       	movw	r26, r24
    1d90:	cb 01       	movw	r24, r22
    1d92:	9f 87       	std	Y+15, r25	; 0x0f
    1d94:	8e 87       	std	Y+14, r24	; 0x0e
    1d96:	0f c0       	rjmp	.+30     	; 0x1db6 <lcd_wr_command+0x278>
    1d98:	80 e7       	ldi	r24, 0x70	; 112
    1d9a:	91 e0       	ldi	r25, 0x01	; 1
    1d9c:	99 8b       	std	Y+17, r25	; 0x11
    1d9e:	88 8b       	std	Y+16, r24	; 0x10
    1da0:	88 89       	ldd	r24, Y+16	; 0x10
    1da2:	99 89       	ldd	r25, Y+17	; 0x11
    1da4:	01 97       	sbiw	r24, 0x01	; 1
    1da6:	f1 f7       	brne	.-4      	; 0x1da4 <lcd_wr_command+0x266>
    1da8:	99 8b       	std	Y+17, r25	; 0x11
    1daa:	88 8b       	std	Y+16, r24	; 0x10
    1dac:	8e 85       	ldd	r24, Y+14	; 0x0e
    1dae:	9f 85       	ldd	r25, Y+15	; 0x0f
    1db0:	01 97       	sbiw	r24, 0x01	; 1
    1db2:	9f 87       	std	Y+15, r25	; 0x0f
    1db4:	8e 87       	std	Y+14, r24	; 0x0e
    1db6:	8e 85       	ldd	r24, Y+14	; 0x0e
    1db8:	9f 85       	ldd	r25, Y+15	; 0x0f
    1dba:	89 2b       	or	r24, r25
    1dbc:	69 f7       	brne	.-38     	; 0x1d98 <lcd_wr_command+0x25a>
    1dbe:	13 c0       	rjmp	.+38     	; 0x1de6 <lcd_wr_command+0x2a8>
    1dc0:	6a 85       	ldd	r22, Y+10	; 0x0a
    1dc2:	7b 85       	ldd	r23, Y+11	; 0x0b
    1dc4:	8c 85       	ldd	r24, Y+12	; 0x0c
    1dc6:	9d 85       	ldd	r25, Y+13	; 0x0d
    1dc8:	dd d2       	rcall	.+1466   	; 0x2384 <__fixunssfsi>
    1dca:	dc 01       	movw	r26, r24
    1dcc:	cb 01       	movw	r24, r22
    1dce:	9f 87       	std	Y+15, r25	; 0x0f
    1dd0:	8e 87       	std	Y+14, r24	; 0x0e
    1dd2:	8e 85       	ldd	r24, Y+14	; 0x0e
    1dd4:	9f 85       	ldd	r25, Y+15	; 0x0f
    1dd6:	9b 8b       	std	Y+19, r25	; 0x13
    1dd8:	8a 8b       	std	Y+18, r24	; 0x12
    1dda:	8a 89       	ldd	r24, Y+18	; 0x12
    1ddc:	9b 89       	ldd	r25, Y+19	; 0x13
    1dde:	01 97       	sbiw	r24, 0x01	; 1
    1de0:	f1 f7       	brne	.-4      	; 0x1dde <lcd_wr_command+0x2a0>
    1de2:	9b 8b       	std	Y+19, r25	; 0x13
    1de4:	8a 8b       	std	Y+18, r24	; 0x12
    1de6:	88 e2       	ldi	r24, 0x28	; 40
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	28 e2       	ldi	r18, 0x28	; 40
    1dec:	30 e0       	ldi	r19, 0x00	; 0
    1dee:	f9 01       	movw	r30, r18
    1df0:	20 81       	ld	r18, Z
    1df2:	2b 7f       	andi	r18, 0xFB	; 251
    1df4:	fc 01       	movw	r30, r24
    1df6:	20 83       	st	Z, r18
    1df8:	00 00       	nop
    1dfa:	6e 96       	adiw	r28, 0x1e	; 30
    1dfc:	0f b6       	in	r0, 0x3f	; 63
    1dfe:	f8 94       	cli
    1e00:	de bf       	out	0x3e, r29	; 62
    1e02:	0f be       	out	0x3f, r0	; 63
    1e04:	cd bf       	out	0x3d, r28	; 61
    1e06:	df 91       	pop	r29
    1e08:	cf 91       	pop	r28
    1e0a:	08 95       	ret

00001e0c <lcd_init>:
    1e0c:	cf 93       	push	r28
    1e0e:	df 93       	push	r29
    1e10:	cd b7       	in	r28, 0x3d	; 61
    1e12:	de b7       	in	r29, 0x3e	; 62
    1e14:	2e 97       	sbiw	r28, 0x0e	; 14
    1e16:	0f b6       	in	r0, 0x3f	; 63
    1e18:	f8 94       	cli
    1e1a:	de bf       	out	0x3e, r29	; 62
    1e1c:	0f be       	out	0x3f, r0	; 63
    1e1e:	cd bf       	out	0x3d, r28	; 61
    1e20:	06 d9       	rcall	.-3572   	; 0x102e <lcd_set_4bit>
    1e22:	80 e0       	ldi	r24, 0x00	; 0
    1e24:	90 e0       	ldi	r25, 0x00	; 0
    1e26:	a0 e8       	ldi	r26, 0x80	; 128
    1e28:	bf e3       	ldi	r27, 0x3F	; 63
    1e2a:	89 83       	std	Y+1, r24	; 0x01
    1e2c:	9a 83       	std	Y+2, r25	; 0x02
    1e2e:	ab 83       	std	Y+3, r26	; 0x03
    1e30:	bc 83       	std	Y+4, r27	; 0x04
    1e32:	26 e6       	ldi	r18, 0x66	; 102
    1e34:	36 e6       	ldi	r19, 0x66	; 102
    1e36:	46 e6       	ldi	r20, 0x66	; 102
    1e38:	55 e4       	ldi	r21, 0x45	; 69
    1e3a:	69 81       	ldd	r22, Y+1	; 0x01
    1e3c:	7a 81       	ldd	r23, Y+2	; 0x02
    1e3e:	8b 81       	ldd	r24, Y+3	; 0x03
    1e40:	9c 81       	ldd	r25, Y+4	; 0x04
    1e42:	82 d3       	rcall	.+1796   	; 0x2548 <__mulsf3>
    1e44:	dc 01       	movw	r26, r24
    1e46:	cb 01       	movw	r24, r22
    1e48:	8d 83       	std	Y+5, r24	; 0x05
    1e4a:	9e 83       	std	Y+6, r25	; 0x06
    1e4c:	af 83       	std	Y+7, r26	; 0x07
    1e4e:	b8 87       	std	Y+8, r27	; 0x08
    1e50:	20 e0       	ldi	r18, 0x00	; 0
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	40 e8       	ldi	r20, 0x80	; 128
    1e56:	5f e3       	ldi	r21, 0x3F	; 63
    1e58:	6d 81       	ldd	r22, Y+5	; 0x05
    1e5a:	7e 81       	ldd	r23, Y+6	; 0x06
    1e5c:	8f 81       	ldd	r24, Y+7	; 0x07
    1e5e:	98 85       	ldd	r25, Y+8	; 0x08
    1e60:	25 d2       	rcall	.+1098   	; 0x22ac <__cmpsf2>
    1e62:	88 23       	and	r24, r24
    1e64:	2c f4       	brge	.+10     	; 0x1e70 <lcd_init+0x64>
    1e66:	81 e0       	ldi	r24, 0x01	; 1
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	9a 87       	std	Y+10, r25	; 0x0a
    1e6c:	89 87       	std	Y+9, r24	; 0x09
    1e6e:	3b c0       	rjmp	.+118    	; 0x1ee6 <lcd_init+0xda>
    1e70:	20 e0       	ldi	r18, 0x00	; 0
    1e72:	3f ef       	ldi	r19, 0xFF	; 255
    1e74:	4f e7       	ldi	r20, 0x7F	; 127
    1e76:	57 e4       	ldi	r21, 0x47	; 71
    1e78:	6d 81       	ldd	r22, Y+5	; 0x05
    1e7a:	7e 81       	ldd	r23, Y+6	; 0x06
    1e7c:	8f 81       	ldd	r24, Y+7	; 0x07
    1e7e:	98 85       	ldd	r25, Y+8	; 0x08
    1e80:	5f d3       	rcall	.+1726   	; 0x2540 <__gesf2>
    1e82:	18 16       	cp	r1, r24
    1e84:	3c f5       	brge	.+78     	; 0x1ed4 <lcd_init+0xc8>
    1e86:	20 e0       	ldi	r18, 0x00	; 0
    1e88:	30 e0       	ldi	r19, 0x00	; 0
    1e8a:	40 e2       	ldi	r20, 0x20	; 32
    1e8c:	51 e4       	ldi	r21, 0x41	; 65
    1e8e:	69 81       	ldd	r22, Y+1	; 0x01
    1e90:	7a 81       	ldd	r23, Y+2	; 0x02
    1e92:	8b 81       	ldd	r24, Y+3	; 0x03
    1e94:	9c 81       	ldd	r25, Y+4	; 0x04
    1e96:	58 d3       	rcall	.+1712   	; 0x2548 <__mulsf3>
    1e98:	dc 01       	movw	r26, r24
    1e9a:	cb 01       	movw	r24, r22
    1e9c:	bc 01       	movw	r22, r24
    1e9e:	cd 01       	movw	r24, r26
    1ea0:	71 d2       	rcall	.+1250   	; 0x2384 <__fixunssfsi>
    1ea2:	dc 01       	movw	r26, r24
    1ea4:	cb 01       	movw	r24, r22
    1ea6:	9a 87       	std	Y+10, r25	; 0x0a
    1ea8:	89 87       	std	Y+9, r24	; 0x09
    1eaa:	0f c0       	rjmp	.+30     	; 0x1eca <lcd_init+0xbe>
    1eac:	80 e7       	ldi	r24, 0x70	; 112
    1eae:	91 e0       	ldi	r25, 0x01	; 1
    1eb0:	9c 87       	std	Y+12, r25	; 0x0c
    1eb2:	8b 87       	std	Y+11, r24	; 0x0b
    1eb4:	8b 85       	ldd	r24, Y+11	; 0x0b
    1eb6:	9c 85       	ldd	r25, Y+12	; 0x0c
    1eb8:	01 97       	sbiw	r24, 0x01	; 1
    1eba:	f1 f7       	brne	.-4      	; 0x1eb8 <lcd_init+0xac>
    1ebc:	9c 87       	std	Y+12, r25	; 0x0c
    1ebe:	8b 87       	std	Y+11, r24	; 0x0b
    1ec0:	89 85       	ldd	r24, Y+9	; 0x09
    1ec2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ec4:	01 97       	sbiw	r24, 0x01	; 1
    1ec6:	9a 87       	std	Y+10, r25	; 0x0a
    1ec8:	89 87       	std	Y+9, r24	; 0x09
    1eca:	89 85       	ldd	r24, Y+9	; 0x09
    1ecc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ece:	89 2b       	or	r24, r25
    1ed0:	69 f7       	brne	.-38     	; 0x1eac <lcd_init+0xa0>
    1ed2:	13 c0       	rjmp	.+38     	; 0x1efa <lcd_init+0xee>
    1ed4:	6d 81       	ldd	r22, Y+5	; 0x05
    1ed6:	7e 81       	ldd	r23, Y+6	; 0x06
    1ed8:	8f 81       	ldd	r24, Y+7	; 0x07
    1eda:	98 85       	ldd	r25, Y+8	; 0x08
    1edc:	53 d2       	rcall	.+1190   	; 0x2384 <__fixunssfsi>
    1ede:	dc 01       	movw	r26, r24
    1ee0:	cb 01       	movw	r24, r22
    1ee2:	9a 87       	std	Y+10, r25	; 0x0a
    1ee4:	89 87       	std	Y+9, r24	; 0x09
    1ee6:	89 85       	ldd	r24, Y+9	; 0x09
    1ee8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1eea:	9e 87       	std	Y+14, r25	; 0x0e
    1eec:	8d 87       	std	Y+13, r24	; 0x0d
    1eee:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ef0:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ef2:	01 97       	sbiw	r24, 0x01	; 1
    1ef4:	f1 f7       	brne	.-4      	; 0x1ef2 <lcd_init+0xe6>
    1ef6:	9e 87       	std	Y+14, r25	; 0x0e
    1ef8:	8d 87       	std	Y+13, r24	; 0x0d
    1efa:	88 e2       	ldi	r24, 0x28	; 40
    1efc:	20 de       	rcall	.-960    	; 0x1b3e <lcd_wr_command>
    1efe:	81 e0       	ldi	r24, 0x01	; 1
    1f00:	1e de       	rcall	.-964    	; 0x1b3e <lcd_wr_command>
    1f02:	86 e0       	ldi	r24, 0x06	; 6
    1f04:	1c de       	rcall	.-968    	; 0x1b3e <lcd_wr_command>
    1f06:	8e e0       	ldi	r24, 0x0E	; 14
    1f08:	1a de       	rcall	.-972    	; 0x1b3e <lcd_wr_command>
    1f0a:	80 e8       	ldi	r24, 0x80	; 128
    1f0c:	18 de       	rcall	.-976    	; 0x1b3e <lcd_wr_command>
    1f0e:	00 00       	nop
    1f10:	2e 96       	adiw	r28, 0x0e	; 14
    1f12:	0f b6       	in	r0, 0x3f	; 63
    1f14:	f8 94       	cli
    1f16:	de bf       	out	0x3e, r29	; 62
    1f18:	0f be       	out	0x3f, r0	; 63
    1f1a:	cd bf       	out	0x3d, r28	; 61
    1f1c:	df 91       	pop	r29
    1f1e:	cf 91       	pop	r28
    1f20:	08 95       	ret

00001f22 <lcd_cursor>:
    1f22:	cf 93       	push	r28
    1f24:	df 93       	push	r29
    1f26:	1f 92       	push	r1
    1f28:	1f 92       	push	r1
    1f2a:	cd b7       	in	r28, 0x3d	; 61
    1f2c:	de b7       	in	r29, 0x3e	; 62
    1f2e:	89 83       	std	Y+1, r24	; 0x01
    1f30:	6a 83       	std	Y+2, r22	; 0x02
    1f32:	89 81       	ldd	r24, Y+1	; 0x01
    1f34:	88 2f       	mov	r24, r24
    1f36:	90 e0       	ldi	r25, 0x00	; 0
    1f38:	82 30       	cpi	r24, 0x02	; 2
    1f3a:	91 05       	cpc	r25, r1
    1f3c:	81 f0       	breq	.+32     	; 0x1f5e <lcd_cursor+0x3c>
    1f3e:	83 30       	cpi	r24, 0x03	; 3
    1f40:	91 05       	cpc	r25, r1
    1f42:	1c f4       	brge	.+6      	; 0x1f4a <lcd_cursor+0x28>
    1f44:	01 97       	sbiw	r24, 0x01	; 1
    1f46:	39 f0       	breq	.+14     	; 0x1f56 <lcd_cursor+0x34>
    1f48:	16 c0       	rjmp	.+44     	; 0x1f76 <lcd_cursor+0x54>
    1f4a:	83 30       	cpi	r24, 0x03	; 3
    1f4c:	91 05       	cpc	r25, r1
    1f4e:	59 f0       	breq	.+22     	; 0x1f66 <lcd_cursor+0x44>
    1f50:	04 97       	sbiw	r24, 0x04	; 4
    1f52:	69 f0       	breq	.+26     	; 0x1f6e <lcd_cursor+0x4c>
    1f54:	10 c0       	rjmp	.+32     	; 0x1f76 <lcd_cursor+0x54>
    1f56:	8a 81       	ldd	r24, Y+2	; 0x02
    1f58:	81 58       	subi	r24, 0x81	; 129
    1f5a:	f1 dd       	rcall	.-1054   	; 0x1b3e <lcd_wr_command>
    1f5c:	0c c0       	rjmp	.+24     	; 0x1f76 <lcd_cursor+0x54>
    1f5e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f60:	81 54       	subi	r24, 0x41	; 65
    1f62:	ed dd       	rcall	.-1062   	; 0x1b3e <lcd_wr_command>
    1f64:	08 c0       	rjmp	.+16     	; 0x1f76 <lcd_cursor+0x54>
    1f66:	8a 81       	ldd	r24, Y+2	; 0x02
    1f68:	8d 56       	subi	r24, 0x6D	; 109
    1f6a:	e9 dd       	rcall	.-1070   	; 0x1b3e <lcd_wr_command>
    1f6c:	04 c0       	rjmp	.+8      	; 0x1f76 <lcd_cursor+0x54>
    1f6e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f70:	8d 52       	subi	r24, 0x2D	; 45
    1f72:	e5 dd       	rcall	.-1078   	; 0x1b3e <lcd_wr_command>
    1f74:	00 00       	nop
    1f76:	00 00       	nop
    1f78:	0f 90       	pop	r0
    1f7a:	0f 90       	pop	r0
    1f7c:	df 91       	pop	r29
    1f7e:	cf 91       	pop	r28
    1f80:	08 95       	ret

00001f82 <lcd_wr_char>:
 * Output: None
 * Logic: This function prints an alpha-numeric character at specified (row, column) position on LCD
 * Example Call: lcd_wr_char(1, 4, 'A') => to write character 'A' to the LCD
 */
void lcd_wr_char(char row, char column, char alpha_num_char)
{
    1f82:	cf 93       	push	r28
    1f84:	df 93       	push	r29
    1f86:	cd b7       	in	r28, 0x3d	; 61
    1f88:	de b7       	in	r29, 0x3e	; 62
    1f8a:	a0 97       	sbiw	r28, 0x20	; 32
    1f8c:	0f b6       	in	r0, 0x3f	; 63
    1f8e:	f8 94       	cli
    1f90:	de bf       	out	0x3e, r29	; 62
    1f92:	0f be       	out	0x3f, r0	; 63
    1f94:	cd bf       	out	0x3d, r28	; 61
    1f96:	8e 8f       	std	Y+30, r24	; 0x1e
    1f98:	6f 8f       	std	Y+31, r22	; 0x1f
    1f9a:	48 a3       	std	Y+32, r20	; 0x20
	lcd_cursor (row, column);
    1f9c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1f9e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1fa0:	c0 df       	rcall	.-128    	; 0x1f22 <lcd_cursor>
	
	char temp;
	
	temp = alpha_num_char;
    1fa2:	88 a1       	ldd	r24, Y+32	; 0x20
    1fa4:	89 83       	std	Y+1, r24	; 0x01
	temp = (temp & 0xF0);
    1fa6:	89 81       	ldd	r24, Y+1	; 0x01
    1fa8:	80 7f       	andi	r24, 0xF0	; 240
    1faa:	89 83       	std	Y+1, r24	; 0x01
	lcd_data_port_reg &= 0x0F;
    1fac:	88 e2       	ldi	r24, 0x28	; 40
    1fae:	90 e0       	ldi	r25, 0x00	; 0
    1fb0:	28 e2       	ldi	r18, 0x28	; 40
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	f9 01       	movw	r30, r18
    1fb6:	20 81       	ld	r18, Z
    1fb8:	2f 70       	andi	r18, 0x0F	; 15
    1fba:	fc 01       	movw	r30, r24
    1fbc:	20 83       	st	Z, r18
	lcd_data_port_reg |= temp;
    1fbe:	88 e2       	ldi	r24, 0x28	; 40
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	28 e2       	ldi	r18, 0x28	; 40
    1fc4:	30 e0       	ldi	r19, 0x00	; 0
    1fc6:	f9 01       	movw	r30, r18
    1fc8:	30 81       	ld	r19, Z
    1fca:	29 81       	ldd	r18, Y+1	; 0x01
    1fcc:	23 2b       	or	r18, r19
    1fce:	fc 01       	movw	r30, r24
    1fd0:	20 83       	st	Z, r18
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
    1fd2:	88 e2       	ldi	r24, 0x28	; 40
    1fd4:	90 e0       	ldi	r25, 0x00	; 0
    1fd6:	28 e2       	ldi	r18, 0x28	; 40
    1fd8:	30 e0       	ldi	r19, 0x00	; 0
    1fda:	f9 01       	movw	r30, r18
    1fdc:	20 81       	ld	r18, Z
    1fde:	21 60       	ori	r18, 0x01	; 1
    1fe0:	fc 01       	movw	r30, r24
    1fe2:	20 83       	st	Z, r18
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
    1fe4:	88 e2       	ldi	r24, 0x28	; 40
    1fe6:	90 e0       	ldi	r25, 0x00	; 0
    1fe8:	28 e2       	ldi	r18, 0x28	; 40
    1fea:	30 e0       	ldi	r19, 0x00	; 0
    1fec:	f9 01       	movw	r30, r18
    1fee:	20 81       	ld	r18, Z
    1ff0:	2d 7f       	andi	r18, 0xFD	; 253
    1ff2:	fc 01       	movw	r30, r24
    1ff4:	20 83       	st	Z, r18
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
    1ff6:	88 e2       	ldi	r24, 0x28	; 40
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	28 e2       	ldi	r18, 0x28	; 40
    1ffc:	30 e0       	ldi	r19, 0x00	; 0
    1ffe:	f9 01       	movw	r30, r18
    2000:	20 81       	ld	r18, Z
    2002:	24 60       	ori	r18, 0x04	; 4
    2004:	fc 01       	movw	r30, r24
    2006:	20 83       	st	Z, r18
    2008:	80 e0       	ldi	r24, 0x00	; 0
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	a0 ea       	ldi	r26, 0xA0	; 160
    200e:	b0 e4       	ldi	r27, 0x40	; 64
    2010:	8a 83       	std	Y+2, r24	; 0x02
    2012:	9b 83       	std	Y+3, r25	; 0x03
    2014:	ac 83       	std	Y+4, r26	; 0x04
    2016:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2018:	26 e6       	ldi	r18, 0x66	; 102
    201a:	36 e6       	ldi	r19, 0x66	; 102
    201c:	46 e6       	ldi	r20, 0x66	; 102
    201e:	55 e4       	ldi	r21, 0x45	; 69
    2020:	6a 81       	ldd	r22, Y+2	; 0x02
    2022:	7b 81       	ldd	r23, Y+3	; 0x03
    2024:	8c 81       	ldd	r24, Y+4	; 0x04
    2026:	9d 81       	ldd	r25, Y+5	; 0x05
    2028:	8f d2       	rcall	.+1310   	; 0x2548 <__mulsf3>
    202a:	dc 01       	movw	r26, r24
    202c:	cb 01       	movw	r24, r22
    202e:	8c 8b       	std	Y+20, r24	; 0x14
    2030:	9d 8b       	std	Y+21, r25	; 0x15
    2032:	ae 8b       	std	Y+22, r26	; 0x16
    2034:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
    2036:	20 e0       	ldi	r18, 0x00	; 0
    2038:	30 e0       	ldi	r19, 0x00	; 0
    203a:	40 e8       	ldi	r20, 0x80	; 128
    203c:	5f e3       	ldi	r21, 0x3F	; 63
    203e:	6c 89       	ldd	r22, Y+20	; 0x14
    2040:	7d 89       	ldd	r23, Y+21	; 0x15
    2042:	8e 89       	ldd	r24, Y+22	; 0x16
    2044:	9f 89       	ldd	r25, Y+23	; 0x17
    2046:	32 d1       	rcall	.+612    	; 0x22ac <__cmpsf2>
    2048:	88 23       	and	r24, r24
    204a:	2c f4       	brge	.+10     	; 0x2056 <lcd_wr_char+0xd4>
		__ticks = 1;
    204c:	81 e0       	ldi	r24, 0x01	; 1
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	99 8f       	std	Y+25, r25	; 0x19
    2052:	88 8f       	std	Y+24, r24	; 0x18
    2054:	3b c0       	rjmp	.+118    	; 0x20cc <lcd_wr_char+0x14a>
	else if (__tmp > 65535)
    2056:	20 e0       	ldi	r18, 0x00	; 0
    2058:	3f ef       	ldi	r19, 0xFF	; 255
    205a:	4f e7       	ldi	r20, 0x7F	; 127
    205c:	57 e4       	ldi	r21, 0x47	; 71
    205e:	6c 89       	ldd	r22, Y+20	; 0x14
    2060:	7d 89       	ldd	r23, Y+21	; 0x15
    2062:	8e 89       	ldd	r24, Y+22	; 0x16
    2064:	9f 89       	ldd	r25, Y+23	; 0x17
    2066:	6c d2       	rcall	.+1240   	; 0x2540 <__gesf2>
    2068:	18 16       	cp	r1, r24
    206a:	3c f5       	brge	.+78     	; 0x20ba <lcd_wr_char+0x138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    206c:	20 e0       	ldi	r18, 0x00	; 0
    206e:	30 e0       	ldi	r19, 0x00	; 0
    2070:	40 e2       	ldi	r20, 0x20	; 32
    2072:	51 e4       	ldi	r21, 0x41	; 65
    2074:	6a 81       	ldd	r22, Y+2	; 0x02
    2076:	7b 81       	ldd	r23, Y+3	; 0x03
    2078:	8c 81       	ldd	r24, Y+4	; 0x04
    207a:	9d 81       	ldd	r25, Y+5	; 0x05
    207c:	65 d2       	rcall	.+1226   	; 0x2548 <__mulsf3>
    207e:	dc 01       	movw	r26, r24
    2080:	cb 01       	movw	r24, r22
    2082:	bc 01       	movw	r22, r24
    2084:	cd 01       	movw	r24, r26
    2086:	7e d1       	rcall	.+764    	; 0x2384 <__fixunssfsi>
    2088:	dc 01       	movw	r26, r24
    208a:	cb 01       	movw	r24, r22
    208c:	99 8f       	std	Y+25, r25	; 0x19
    208e:	88 8f       	std	Y+24, r24	; 0x18
    2090:	0f c0       	rjmp	.+30     	; 0x20b0 <lcd_wr_char+0x12e>
    2092:	80 e7       	ldi	r24, 0x70	; 112
    2094:	91 e0       	ldi	r25, 0x01	; 1
    2096:	9b 8f       	std	Y+27, r25	; 0x1b
    2098:	8a 8f       	std	Y+26, r24	; 0x1a
    209a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    209c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    209e:	01 97       	sbiw	r24, 0x01	; 1
    20a0:	f1 f7       	brne	.-4      	; 0x209e <lcd_wr_char+0x11c>
    20a2:	9b 8f       	std	Y+27, r25	; 0x1b
    20a4:	8a 8f       	std	Y+26, r24	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20a6:	88 8d       	ldd	r24, Y+24	; 0x18
    20a8:	99 8d       	ldd	r25, Y+25	; 0x19
    20aa:	01 97       	sbiw	r24, 0x01	; 1
    20ac:	99 8f       	std	Y+25, r25	; 0x19
    20ae:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20b0:	88 8d       	ldd	r24, Y+24	; 0x18
    20b2:	99 8d       	ldd	r25, Y+25	; 0x19
    20b4:	89 2b       	or	r24, r25
    20b6:	69 f7       	brne	.-38     	; 0x2092 <lcd_wr_char+0x110>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20b8:	13 c0       	rjmp	.+38     	; 0x20e0 <lcd_wr_char+0x15e>
    20ba:	6c 89       	ldd	r22, Y+20	; 0x14
    20bc:	7d 89       	ldd	r23, Y+21	; 0x15
    20be:	8e 89       	ldd	r24, Y+22	; 0x16
    20c0:	9f 89       	ldd	r25, Y+23	; 0x17
    20c2:	60 d1       	rcall	.+704    	; 0x2384 <__fixunssfsi>
    20c4:	dc 01       	movw	r26, r24
    20c6:	cb 01       	movw	r24, r22
    20c8:	99 8f       	std	Y+25, r25	; 0x19
    20ca:	88 8f       	std	Y+24, r24	; 0x18
    20cc:	88 8d       	ldd	r24, Y+24	; 0x18
    20ce:	99 8d       	ldd	r25, Y+25	; 0x19
    20d0:	9d 8f       	std	Y+29, r25	; 0x1d
    20d2:	8c 8f       	std	Y+28, r24	; 0x1c
    20d4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    20d6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    20d8:	01 97       	sbiw	r24, 0x01	; 1
    20da:	f1 f7       	brne	.-4      	; 0x20d8 <lcd_wr_char+0x156>
    20dc:	9d 8f       	std	Y+29, r25	; 0x1d
    20de:	8c 8f       	std	Y+28, r24	; 0x1c
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
    20e0:	88 e2       	ldi	r24, 0x28	; 40
    20e2:	90 e0       	ldi	r25, 0x00	; 0
    20e4:	28 e2       	ldi	r18, 0x28	; 40
    20e6:	30 e0       	ldi	r19, 0x00	; 0
    20e8:	f9 01       	movw	r30, r18
    20ea:	20 81       	ld	r18, Z
    20ec:	2b 7f       	andi	r18, 0xFB	; 251
    20ee:	fc 01       	movw	r30, r24
    20f0:	20 83       	st	Z, r18
	
	alpha_num_char = (alpha_num_char & 0x0F);
    20f2:	88 a1       	ldd	r24, Y+32	; 0x20
    20f4:	8f 70       	andi	r24, 0x0F	; 15
    20f6:	88 a3       	std	Y+32, r24	; 0x20
	alpha_num_char = (alpha_num_char << 4);
    20f8:	88 a1       	ldd	r24, Y+32	; 0x20
    20fa:	82 95       	swap	r24
    20fc:	80 7f       	andi	r24, 0xF0	; 240
    20fe:	88 a3       	std	Y+32, r24	; 0x20
	lcd_data_port_reg &= 0x0F;
    2100:	88 e2       	ldi	r24, 0x28	; 40
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	28 e2       	ldi	r18, 0x28	; 40
    2106:	30 e0       	ldi	r19, 0x00	; 0
    2108:	f9 01       	movw	r30, r18
    210a:	20 81       	ld	r18, Z
    210c:	2f 70       	andi	r18, 0x0F	; 15
    210e:	fc 01       	movw	r30, r24
    2110:	20 83       	st	Z, r18
	lcd_data_port_reg |= alpha_num_char;
    2112:	88 e2       	ldi	r24, 0x28	; 40
    2114:	90 e0       	ldi	r25, 0x00	; 0
    2116:	28 e2       	ldi	r18, 0x28	; 40
    2118:	30 e0       	ldi	r19, 0x00	; 0
    211a:	f9 01       	movw	r30, r18
    211c:	30 81       	ld	r19, Z
    211e:	28 a1       	ldd	r18, Y+32	; 0x20
    2120:	23 2b       	or	r18, r19
    2122:	fc 01       	movw	r30, r24
    2124:	20 83       	st	Z, r18
	
	sbit( lcd_control_port_reg, RS_pin );				// RS = 0 --- Data Input
    2126:	88 e2       	ldi	r24, 0x28	; 40
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	28 e2       	ldi	r18, 0x28	; 40
    212c:	30 e0       	ldi	r19, 0x00	; 0
    212e:	f9 01       	movw	r30, r18
    2130:	20 81       	ld	r18, Z
    2132:	21 60       	ori	r18, 0x01	; 1
    2134:	fc 01       	movw	r30, r24
    2136:	20 83       	st	Z, r18
	cbit( lcd_control_port_reg, RW_pin );				// RW = 0 --- Writing to LCD
    2138:	88 e2       	ldi	r24, 0x28	; 40
    213a:	90 e0       	ldi	r25, 0x00	; 0
    213c:	28 e2       	ldi	r18, 0x28	; 40
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	f9 01       	movw	r30, r18
    2142:	20 81       	ld	r18, Z
    2144:	2d 7f       	andi	r18, 0xFD	; 253
    2146:	fc 01       	movw	r30, r24
    2148:	20 83       	st	Z, r18
	sbit( lcd_control_port_reg, EN_pin );				// Set Enable Pin
    214a:	88 e2       	ldi	r24, 0x28	; 40
    214c:	90 e0       	ldi	r25, 0x00	; 0
    214e:	28 e2       	ldi	r18, 0x28	; 40
    2150:	30 e0       	ldi	r19, 0x00	; 0
    2152:	f9 01       	movw	r30, r18
    2154:	20 81       	ld	r18, Z
    2156:	24 60       	ori	r18, 0x04	; 4
    2158:	fc 01       	movw	r30, r24
    215a:	20 83       	st	Z, r18
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	a0 ea       	ldi	r26, 0xA0	; 160
    2162:	b0 e4       	ldi	r27, 0x40	; 64
    2164:	8e 83       	std	Y+6, r24	; 0x06
    2166:	9f 83       	std	Y+7, r25	; 0x07
    2168:	a8 87       	std	Y+8, r26	; 0x08
    216a:	b9 87       	std	Y+9, r27	; 0x09

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    216c:	26 e6       	ldi	r18, 0x66	; 102
    216e:	36 e6       	ldi	r19, 0x66	; 102
    2170:	46 e6       	ldi	r20, 0x66	; 102
    2172:	55 e4       	ldi	r21, 0x45	; 69
    2174:	6e 81       	ldd	r22, Y+6	; 0x06
    2176:	7f 81       	ldd	r23, Y+7	; 0x07
    2178:	88 85       	ldd	r24, Y+8	; 0x08
    217a:	99 85       	ldd	r25, Y+9	; 0x09
    217c:	e5 d1       	rcall	.+970    	; 0x2548 <__mulsf3>
    217e:	dc 01       	movw	r26, r24
    2180:	cb 01       	movw	r24, r22
    2182:	8a 87       	std	Y+10, r24	; 0x0a
    2184:	9b 87       	std	Y+11, r25	; 0x0b
    2186:	ac 87       	std	Y+12, r26	; 0x0c
    2188:	bd 87       	std	Y+13, r27	; 0x0d
	if (__tmp < 1.0)
    218a:	20 e0       	ldi	r18, 0x00	; 0
    218c:	30 e0       	ldi	r19, 0x00	; 0
    218e:	40 e8       	ldi	r20, 0x80	; 128
    2190:	5f e3       	ldi	r21, 0x3F	; 63
    2192:	6a 85       	ldd	r22, Y+10	; 0x0a
    2194:	7b 85       	ldd	r23, Y+11	; 0x0b
    2196:	8c 85       	ldd	r24, Y+12	; 0x0c
    2198:	9d 85       	ldd	r25, Y+13	; 0x0d
    219a:	88 d0       	rcall	.+272    	; 0x22ac <__cmpsf2>
    219c:	88 23       	and	r24, r24
    219e:	2c f4       	brge	.+10     	; 0x21aa <lcd_wr_char+0x228>
		__ticks = 1;
    21a0:	81 e0       	ldi	r24, 0x01	; 1
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	9f 87       	std	Y+15, r25	; 0x0f
    21a6:	8e 87       	std	Y+14, r24	; 0x0e
	else if (__tmp > 65535)
    21a8:	3b c0       	rjmp	.+118    	; 0x2220 <__stack+0x21>
    21aa:	20 e0       	ldi	r18, 0x00	; 0
    21ac:	3f ef       	ldi	r19, 0xFF	; 255
    21ae:	4f e7       	ldi	r20, 0x7F	; 127
    21b0:	57 e4       	ldi	r21, 0x47	; 71
    21b2:	6a 85       	ldd	r22, Y+10	; 0x0a
    21b4:	7b 85       	ldd	r23, Y+11	; 0x0b
    21b6:	8c 85       	ldd	r24, Y+12	; 0x0c
    21b8:	9d 85       	ldd	r25, Y+13	; 0x0d
    21ba:	c2 d1       	rcall	.+900    	; 0x2540 <__gesf2>
    21bc:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21be:	3c f5       	brge	.+78     	; 0x220e <__stack+0xf>
    21c0:	20 e0       	ldi	r18, 0x00	; 0
    21c2:	30 e0       	ldi	r19, 0x00	; 0
    21c4:	40 e2       	ldi	r20, 0x20	; 32
    21c6:	51 e4       	ldi	r21, 0x41	; 65
    21c8:	6e 81       	ldd	r22, Y+6	; 0x06
    21ca:	7f 81       	ldd	r23, Y+7	; 0x07
    21cc:	88 85       	ldd	r24, Y+8	; 0x08
    21ce:	99 85       	ldd	r25, Y+9	; 0x09
    21d0:	bb d1       	rcall	.+886    	; 0x2548 <__mulsf3>
    21d2:	dc 01       	movw	r26, r24
    21d4:	cb 01       	movw	r24, r22
    21d6:	bc 01       	movw	r22, r24
    21d8:	cd 01       	movw	r24, r26
    21da:	d4 d0       	rcall	.+424    	; 0x2384 <__fixunssfsi>
    21dc:	dc 01       	movw	r26, r24
    21de:	cb 01       	movw	r24, r22
    21e0:	9f 87       	std	Y+15, r25	; 0x0f
    21e2:	8e 87       	std	Y+14, r24	; 0x0e
    21e4:	0f c0       	rjmp	.+30     	; 0x2204 <__stack+0x5>
    21e6:	80 e7       	ldi	r24, 0x70	; 112
    21e8:	91 e0       	ldi	r25, 0x01	; 1
    21ea:	99 8b       	std	Y+17, r25	; 0x11
    21ec:	88 8b       	std	Y+16, r24	; 0x10
    21ee:	88 89       	ldd	r24, Y+16	; 0x10
    21f0:	99 89       	ldd	r25, Y+17	; 0x11
    21f2:	01 97       	sbiw	r24, 0x01	; 1
    21f4:	f1 f7       	brne	.-4      	; 0x21f2 <lcd_wr_char+0x270>
    21f6:	99 8b       	std	Y+17, r25	; 0x11
    21f8:	88 8b       	std	Y+16, r24	; 0x10
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21fa:	8e 85       	ldd	r24, Y+14	; 0x0e
    21fc:	9f 85       	ldd	r25, Y+15	; 0x0f
    21fe:	01 97       	sbiw	r24, 0x01	; 1
    2200:	9f 87       	std	Y+15, r25	; 0x0f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2202:	8e 87       	std	Y+14, r24	; 0x0e
    2204:	8e 85       	ldd	r24, Y+14	; 0x0e
    2206:	9f 85       	ldd	r25, Y+15	; 0x0f
    2208:	89 2b       	or	r24, r25
    220a:	69 f7       	brne	.-38     	; 0x21e6 <lcd_wr_char+0x264>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    220c:	13 c0       	rjmp	.+38     	; 0x2234 <__stack+0x35>
    220e:	6a 85       	ldd	r22, Y+10	; 0x0a
    2210:	7b 85       	ldd	r23, Y+11	; 0x0b
    2212:	8c 85       	ldd	r24, Y+12	; 0x0c
    2214:	9d 85       	ldd	r25, Y+13	; 0x0d
    2216:	b6 d0       	rcall	.+364    	; 0x2384 <__fixunssfsi>
    2218:	dc 01       	movw	r26, r24
    221a:	cb 01       	movw	r24, r22
    221c:	9f 87       	std	Y+15, r25	; 0x0f
    221e:	8e 87       	std	Y+14, r24	; 0x0e
    2220:	8e 85       	ldd	r24, Y+14	; 0x0e
    2222:	9f 85       	ldd	r25, Y+15	; 0x0f
    2224:	9b 8b       	std	Y+19, r25	; 0x13
    2226:	8a 8b       	std	Y+18, r24	; 0x12
    2228:	8a 89       	ldd	r24, Y+18	; 0x12
    222a:	9b 89       	ldd	r25, Y+19	; 0x13
    222c:	01 97       	sbiw	r24, 0x01	; 1
    222e:	f1 f7       	brne	.-4      	; 0x222c <__stack+0x2d>
    2230:	9b 8b       	std	Y+19, r25	; 0x13
    2232:	8a 8b       	std	Y+18, r24	; 0x12
	_delay_ms(5);										// Delay
	cbit( lcd_control_port_reg, EN_pin );				// Clear Enable Pin
    2234:	88 e2       	ldi	r24, 0x28	; 40
    2236:	90 e0       	ldi	r25, 0x00	; 0
    2238:	28 e2       	ldi	r18, 0x28	; 40
    223a:	30 e0       	ldi	r19, 0x00	; 0
    223c:	f9 01       	movw	r30, r18
    223e:	20 81       	ld	r18, Z
    2240:	2b 7f       	andi	r18, 0xFB	; 251
    2242:	fc 01       	movw	r30, r24
    2244:	20 83       	st	Z, r18
}
    2246:	00 00       	nop
    2248:	a0 96       	adiw	r28, 0x20	; 32
    224a:	0f b6       	in	r0, 0x3f	; 63
    224c:	f8 94       	cli
    224e:	de bf       	out	0x3e, r29	; 62
    2250:	0f be       	out	0x3f, r0	; 63
    2252:	cd bf       	out	0x3d, r28	; 61
    2254:	df 91       	pop	r29
    2256:	cf 91       	pop	r28
    2258:	08 95       	ret

0000225a <lcd_string>:
 * Output: This function prints the given string on the LCD at the specified (row, column) position
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
    225a:	cf 93       	push	r28
    225c:	df 93       	push	r29
    225e:	00 d0       	rcall	.+0      	; 0x2260 <lcd_string+0x6>
    2260:	1f 92       	push	r1
    2262:	cd b7       	in	r28, 0x3d	; 61
    2264:	de b7       	in	r29, 0x3e	; 62
    2266:	89 83       	std	Y+1, r24	; 0x01
    2268:	6a 83       	std	Y+2, r22	; 0x02
    226a:	5c 83       	std	Y+4, r21	; 0x04
    226c:	4b 83       	std	Y+3, r20	; 0x03
	while(*str != '\0')
    226e:	10 c0       	rjmp	.+32     	; 0x2290 <lcd_string+0x36>
	{
		lcd_wr_char(row, column, *str);
    2270:	8b 81       	ldd	r24, Y+3	; 0x03
    2272:	9c 81       	ldd	r25, Y+4	; 0x04
    2274:	fc 01       	movw	r30, r24
    2276:	80 81       	ld	r24, Z
    2278:	48 2f       	mov	r20, r24
    227a:	6a 81       	ldd	r22, Y+2	; 0x02
    227c:	89 81       	ldd	r24, Y+1	; 0x01
    227e:	81 de       	rcall	.-766    	; 0x1f82 <lcd_wr_char>
		str++;
    2280:	8b 81       	ldd	r24, Y+3	; 0x03
    2282:	9c 81       	ldd	r25, Y+4	; 0x04
    2284:	01 96       	adiw	r24, 0x01	; 1
    2286:	9c 83       	std	Y+4, r25	; 0x04
    2288:	8b 83       	std	Y+3, r24	; 0x03
		column+=1;
    228a:	8a 81       	ldd	r24, Y+2	; 0x02
    228c:	8f 5f       	subi	r24, 0xFF	; 255
    228e:	8a 83       	std	Y+2, r24	; 0x02
 * Logic: Positions the cursor and prints each character on LCD in a while loop until EOF is reached
 * Example Call: lcd_string(1, 1, "Hello !");
 */
void lcd_string(char row, char column, char *str)
{
	while(*str != '\0')
    2290:	8b 81       	ldd	r24, Y+3	; 0x03
    2292:	9c 81       	ldd	r25, Y+4	; 0x04
    2294:	fc 01       	movw	r30, r24
    2296:	80 81       	ld	r24, Z
    2298:	88 23       	and	r24, r24
    229a:	51 f7       	brne	.-44     	; 0x2270 <lcd_string+0x16>
	{
		lcd_wr_char(row, column, *str);
		str++;
		column+=1;
	}
}
    229c:	00 00       	nop
    229e:	0f 90       	pop	r0
    22a0:	0f 90       	pop	r0
    22a2:	0f 90       	pop	r0
    22a4:	0f 90       	pop	r0
    22a6:	df 91       	pop	r29
    22a8:	cf 91       	pop	r28
    22aa:	08 95       	ret

000022ac <__cmpsf2>:
    22ac:	d4 d0       	rcall	.+424    	; 0x2456 <__fp_cmp>
    22ae:	08 f4       	brcc	.+2      	; 0x22b2 <__cmpsf2+0x6>
    22b0:	81 e0       	ldi	r24, 0x01	; 1
    22b2:	08 95       	ret

000022b4 <__divsf3>:
    22b4:	0c d0       	rcall	.+24     	; 0x22ce <__divsf3x>
    22b6:	0a c1       	rjmp	.+532    	; 0x24cc <__fp_round>
    22b8:	02 d1       	rcall	.+516    	; 0x24be <__fp_pscB>
    22ba:	40 f0       	brcs	.+16     	; 0x22cc <__divsf3+0x18>
    22bc:	f9 d0       	rcall	.+498    	; 0x24b0 <__fp_pscA>
    22be:	30 f0       	brcs	.+12     	; 0x22cc <__divsf3+0x18>
    22c0:	21 f4       	brne	.+8      	; 0x22ca <__divsf3+0x16>
    22c2:	5f 3f       	cpi	r21, 0xFF	; 255
    22c4:	19 f0       	breq	.+6      	; 0x22cc <__divsf3+0x18>
    22c6:	eb c0       	rjmp	.+470    	; 0x249e <__fp_inf>
    22c8:	51 11       	cpse	r21, r1
    22ca:	34 c1       	rjmp	.+616    	; 0x2534 <__fp_szero>
    22cc:	ee c0       	rjmp	.+476    	; 0x24aa <__fp_nan>

000022ce <__divsf3x>:
    22ce:	0f d1       	rcall	.+542    	; 0x24ee <__fp_split3>
    22d0:	98 f3       	brcs	.-26     	; 0x22b8 <__divsf3+0x4>

000022d2 <__divsf3_pse>:
    22d2:	99 23       	and	r25, r25
    22d4:	c9 f3       	breq	.-14     	; 0x22c8 <__divsf3+0x14>
    22d6:	55 23       	and	r21, r21
    22d8:	b1 f3       	breq	.-20     	; 0x22c6 <__divsf3+0x12>
    22da:	95 1b       	sub	r25, r21
    22dc:	55 0b       	sbc	r21, r21
    22de:	bb 27       	eor	r27, r27
    22e0:	aa 27       	eor	r26, r26
    22e2:	62 17       	cp	r22, r18
    22e4:	73 07       	cpc	r23, r19
    22e6:	84 07       	cpc	r24, r20
    22e8:	38 f0       	brcs	.+14     	; 0x22f8 <__divsf3_pse+0x26>
    22ea:	9f 5f       	subi	r25, 0xFF	; 255
    22ec:	5f 4f       	sbci	r21, 0xFF	; 255
    22ee:	22 0f       	add	r18, r18
    22f0:	33 1f       	adc	r19, r19
    22f2:	44 1f       	adc	r20, r20
    22f4:	aa 1f       	adc	r26, r26
    22f6:	a9 f3       	breq	.-22     	; 0x22e2 <__divsf3_pse+0x10>
    22f8:	33 d0       	rcall	.+102    	; 0x2360 <__divsf3_pse+0x8e>
    22fa:	0e 2e       	mov	r0, r30
    22fc:	3a f0       	brmi	.+14     	; 0x230c <__divsf3_pse+0x3a>
    22fe:	e0 e8       	ldi	r30, 0x80	; 128
    2300:	30 d0       	rcall	.+96     	; 0x2362 <__divsf3_pse+0x90>
    2302:	91 50       	subi	r25, 0x01	; 1
    2304:	50 40       	sbci	r21, 0x00	; 0
    2306:	e6 95       	lsr	r30
    2308:	00 1c       	adc	r0, r0
    230a:	ca f7       	brpl	.-14     	; 0x22fe <__divsf3_pse+0x2c>
    230c:	29 d0       	rcall	.+82     	; 0x2360 <__divsf3_pse+0x8e>
    230e:	fe 2f       	mov	r31, r30
    2310:	27 d0       	rcall	.+78     	; 0x2360 <__divsf3_pse+0x8e>
    2312:	66 0f       	add	r22, r22
    2314:	77 1f       	adc	r23, r23
    2316:	88 1f       	adc	r24, r24
    2318:	bb 1f       	adc	r27, r27
    231a:	26 17       	cp	r18, r22
    231c:	37 07       	cpc	r19, r23
    231e:	48 07       	cpc	r20, r24
    2320:	ab 07       	cpc	r26, r27
    2322:	b0 e8       	ldi	r27, 0x80	; 128
    2324:	09 f0       	breq	.+2      	; 0x2328 <__divsf3_pse+0x56>
    2326:	bb 0b       	sbc	r27, r27
    2328:	80 2d       	mov	r24, r0
    232a:	bf 01       	movw	r22, r30
    232c:	ff 27       	eor	r31, r31
    232e:	93 58       	subi	r25, 0x83	; 131
    2330:	5f 4f       	sbci	r21, 0xFF	; 255
    2332:	2a f0       	brmi	.+10     	; 0x233e <__divsf3_pse+0x6c>
    2334:	9e 3f       	cpi	r25, 0xFE	; 254
    2336:	51 05       	cpc	r21, r1
    2338:	68 f0       	brcs	.+26     	; 0x2354 <__divsf3_pse+0x82>
    233a:	b1 c0       	rjmp	.+354    	; 0x249e <__fp_inf>
    233c:	fb c0       	rjmp	.+502    	; 0x2534 <__fp_szero>
    233e:	5f 3f       	cpi	r21, 0xFF	; 255
    2340:	ec f3       	brlt	.-6      	; 0x233c <__divsf3_pse+0x6a>
    2342:	98 3e       	cpi	r25, 0xE8	; 232
    2344:	dc f3       	brlt	.-10     	; 0x233c <__divsf3_pse+0x6a>
    2346:	86 95       	lsr	r24
    2348:	77 95       	ror	r23
    234a:	67 95       	ror	r22
    234c:	b7 95       	ror	r27
    234e:	f7 95       	ror	r31
    2350:	9f 5f       	subi	r25, 0xFF	; 255
    2352:	c9 f7       	brne	.-14     	; 0x2346 <__divsf3_pse+0x74>
    2354:	88 0f       	add	r24, r24
    2356:	91 1d       	adc	r25, r1
    2358:	96 95       	lsr	r25
    235a:	87 95       	ror	r24
    235c:	97 f9       	bld	r25, 7
    235e:	08 95       	ret
    2360:	e1 e0       	ldi	r30, 0x01	; 1
    2362:	66 0f       	add	r22, r22
    2364:	77 1f       	adc	r23, r23
    2366:	88 1f       	adc	r24, r24
    2368:	bb 1f       	adc	r27, r27
    236a:	62 17       	cp	r22, r18
    236c:	73 07       	cpc	r23, r19
    236e:	84 07       	cpc	r24, r20
    2370:	ba 07       	cpc	r27, r26
    2372:	20 f0       	brcs	.+8      	; 0x237c <__divsf3_pse+0xaa>
    2374:	62 1b       	sub	r22, r18
    2376:	73 0b       	sbc	r23, r19
    2378:	84 0b       	sbc	r24, r20
    237a:	ba 0b       	sbc	r27, r26
    237c:	ee 1f       	adc	r30, r30
    237e:	88 f7       	brcc	.-30     	; 0x2362 <__divsf3_pse+0x90>
    2380:	e0 95       	com	r30
    2382:	08 95       	ret

00002384 <__fixunssfsi>:
    2384:	bc d0       	rcall	.+376    	; 0x24fe <__fp_splitA>
    2386:	88 f0       	brcs	.+34     	; 0x23aa <__fixunssfsi+0x26>
    2388:	9f 57       	subi	r25, 0x7F	; 127
    238a:	90 f0       	brcs	.+36     	; 0x23b0 <__fixunssfsi+0x2c>
    238c:	b9 2f       	mov	r27, r25
    238e:	99 27       	eor	r25, r25
    2390:	b7 51       	subi	r27, 0x17	; 23
    2392:	a0 f0       	brcs	.+40     	; 0x23bc <__fixunssfsi+0x38>
    2394:	d1 f0       	breq	.+52     	; 0x23ca <__fixunssfsi+0x46>
    2396:	66 0f       	add	r22, r22
    2398:	77 1f       	adc	r23, r23
    239a:	88 1f       	adc	r24, r24
    239c:	99 1f       	adc	r25, r25
    239e:	1a f0       	brmi	.+6      	; 0x23a6 <__fixunssfsi+0x22>
    23a0:	ba 95       	dec	r27
    23a2:	c9 f7       	brne	.-14     	; 0x2396 <__fixunssfsi+0x12>
    23a4:	12 c0       	rjmp	.+36     	; 0x23ca <__fixunssfsi+0x46>
    23a6:	b1 30       	cpi	r27, 0x01	; 1
    23a8:	81 f0       	breq	.+32     	; 0x23ca <__fixunssfsi+0x46>
    23aa:	c3 d0       	rcall	.+390    	; 0x2532 <__fp_zero>
    23ac:	b1 e0       	ldi	r27, 0x01	; 1
    23ae:	08 95       	ret
    23b0:	c0 c0       	rjmp	.+384    	; 0x2532 <__fp_zero>
    23b2:	67 2f       	mov	r22, r23
    23b4:	78 2f       	mov	r23, r24
    23b6:	88 27       	eor	r24, r24
    23b8:	b8 5f       	subi	r27, 0xF8	; 248
    23ba:	39 f0       	breq	.+14     	; 0x23ca <__fixunssfsi+0x46>
    23bc:	b9 3f       	cpi	r27, 0xF9	; 249
    23be:	cc f3       	brlt	.-14     	; 0x23b2 <__fixunssfsi+0x2e>
    23c0:	86 95       	lsr	r24
    23c2:	77 95       	ror	r23
    23c4:	67 95       	ror	r22
    23c6:	b3 95       	inc	r27
    23c8:	d9 f7       	brne	.-10     	; 0x23c0 <__fixunssfsi+0x3c>
    23ca:	3e f4       	brtc	.+14     	; 0x23da <__fixunssfsi+0x56>
    23cc:	90 95       	com	r25
    23ce:	80 95       	com	r24
    23d0:	70 95       	com	r23
    23d2:	61 95       	neg	r22
    23d4:	7f 4f       	sbci	r23, 0xFF	; 255
    23d6:	8f 4f       	sbci	r24, 0xFF	; 255
    23d8:	9f 4f       	sbci	r25, 0xFF	; 255
    23da:	08 95       	ret

000023dc <__floatunsisf>:
    23dc:	e8 94       	clt
    23de:	09 c0       	rjmp	.+18     	; 0x23f2 <__floatsisf+0x12>

000023e0 <__floatsisf>:
    23e0:	97 fb       	bst	r25, 7
    23e2:	3e f4       	brtc	.+14     	; 0x23f2 <__floatsisf+0x12>
    23e4:	90 95       	com	r25
    23e6:	80 95       	com	r24
    23e8:	70 95       	com	r23
    23ea:	61 95       	neg	r22
    23ec:	7f 4f       	sbci	r23, 0xFF	; 255
    23ee:	8f 4f       	sbci	r24, 0xFF	; 255
    23f0:	9f 4f       	sbci	r25, 0xFF	; 255
    23f2:	99 23       	and	r25, r25
    23f4:	a9 f0       	breq	.+42     	; 0x2420 <__floatsisf+0x40>
    23f6:	f9 2f       	mov	r31, r25
    23f8:	96 e9       	ldi	r25, 0x96	; 150
    23fa:	bb 27       	eor	r27, r27
    23fc:	93 95       	inc	r25
    23fe:	f6 95       	lsr	r31
    2400:	87 95       	ror	r24
    2402:	77 95       	ror	r23
    2404:	67 95       	ror	r22
    2406:	b7 95       	ror	r27
    2408:	f1 11       	cpse	r31, r1
    240a:	f8 cf       	rjmp	.-16     	; 0x23fc <__floatsisf+0x1c>
    240c:	fa f4       	brpl	.+62     	; 0x244c <__floatsisf+0x6c>
    240e:	bb 0f       	add	r27, r27
    2410:	11 f4       	brne	.+4      	; 0x2416 <__floatsisf+0x36>
    2412:	60 ff       	sbrs	r22, 0
    2414:	1b c0       	rjmp	.+54     	; 0x244c <__floatsisf+0x6c>
    2416:	6f 5f       	subi	r22, 0xFF	; 255
    2418:	7f 4f       	sbci	r23, 0xFF	; 255
    241a:	8f 4f       	sbci	r24, 0xFF	; 255
    241c:	9f 4f       	sbci	r25, 0xFF	; 255
    241e:	16 c0       	rjmp	.+44     	; 0x244c <__floatsisf+0x6c>
    2420:	88 23       	and	r24, r24
    2422:	11 f0       	breq	.+4      	; 0x2428 <__floatsisf+0x48>
    2424:	96 e9       	ldi	r25, 0x96	; 150
    2426:	11 c0       	rjmp	.+34     	; 0x244a <__floatsisf+0x6a>
    2428:	77 23       	and	r23, r23
    242a:	21 f0       	breq	.+8      	; 0x2434 <__floatsisf+0x54>
    242c:	9e e8       	ldi	r25, 0x8E	; 142
    242e:	87 2f       	mov	r24, r23
    2430:	76 2f       	mov	r23, r22
    2432:	05 c0       	rjmp	.+10     	; 0x243e <__floatsisf+0x5e>
    2434:	66 23       	and	r22, r22
    2436:	71 f0       	breq	.+28     	; 0x2454 <__floatsisf+0x74>
    2438:	96 e8       	ldi	r25, 0x86	; 134
    243a:	86 2f       	mov	r24, r22
    243c:	70 e0       	ldi	r23, 0x00	; 0
    243e:	60 e0       	ldi	r22, 0x00	; 0
    2440:	2a f0       	brmi	.+10     	; 0x244c <__floatsisf+0x6c>
    2442:	9a 95       	dec	r25
    2444:	66 0f       	add	r22, r22
    2446:	77 1f       	adc	r23, r23
    2448:	88 1f       	adc	r24, r24
    244a:	da f7       	brpl	.-10     	; 0x2442 <__floatsisf+0x62>
    244c:	88 0f       	add	r24, r24
    244e:	96 95       	lsr	r25
    2450:	87 95       	ror	r24
    2452:	97 f9       	bld	r25, 7
    2454:	08 95       	ret

00002456 <__fp_cmp>:
    2456:	99 0f       	add	r25, r25
    2458:	00 08       	sbc	r0, r0
    245a:	55 0f       	add	r21, r21
    245c:	aa 0b       	sbc	r26, r26
    245e:	e0 e8       	ldi	r30, 0x80	; 128
    2460:	fe ef       	ldi	r31, 0xFE	; 254
    2462:	16 16       	cp	r1, r22
    2464:	17 06       	cpc	r1, r23
    2466:	e8 07       	cpc	r30, r24
    2468:	f9 07       	cpc	r31, r25
    246a:	c0 f0       	brcs	.+48     	; 0x249c <__fp_cmp+0x46>
    246c:	12 16       	cp	r1, r18
    246e:	13 06       	cpc	r1, r19
    2470:	e4 07       	cpc	r30, r20
    2472:	f5 07       	cpc	r31, r21
    2474:	98 f0       	brcs	.+38     	; 0x249c <__fp_cmp+0x46>
    2476:	62 1b       	sub	r22, r18
    2478:	73 0b       	sbc	r23, r19
    247a:	84 0b       	sbc	r24, r20
    247c:	95 0b       	sbc	r25, r21
    247e:	39 f4       	brne	.+14     	; 0x248e <__fp_cmp+0x38>
    2480:	0a 26       	eor	r0, r26
    2482:	61 f0       	breq	.+24     	; 0x249c <__fp_cmp+0x46>
    2484:	23 2b       	or	r18, r19
    2486:	24 2b       	or	r18, r20
    2488:	25 2b       	or	r18, r21
    248a:	21 f4       	brne	.+8      	; 0x2494 <__fp_cmp+0x3e>
    248c:	08 95       	ret
    248e:	0a 26       	eor	r0, r26
    2490:	09 f4       	brne	.+2      	; 0x2494 <__fp_cmp+0x3e>
    2492:	a1 40       	sbci	r26, 0x01	; 1
    2494:	a6 95       	lsr	r26
    2496:	8f ef       	ldi	r24, 0xFF	; 255
    2498:	81 1d       	adc	r24, r1
    249a:	81 1d       	adc	r24, r1
    249c:	08 95       	ret

0000249e <__fp_inf>:
    249e:	97 f9       	bld	r25, 7
    24a0:	9f 67       	ori	r25, 0x7F	; 127
    24a2:	80 e8       	ldi	r24, 0x80	; 128
    24a4:	70 e0       	ldi	r23, 0x00	; 0
    24a6:	60 e0       	ldi	r22, 0x00	; 0
    24a8:	08 95       	ret

000024aa <__fp_nan>:
    24aa:	9f ef       	ldi	r25, 0xFF	; 255
    24ac:	80 ec       	ldi	r24, 0xC0	; 192
    24ae:	08 95       	ret

000024b0 <__fp_pscA>:
    24b0:	00 24       	eor	r0, r0
    24b2:	0a 94       	dec	r0
    24b4:	16 16       	cp	r1, r22
    24b6:	17 06       	cpc	r1, r23
    24b8:	18 06       	cpc	r1, r24
    24ba:	09 06       	cpc	r0, r25
    24bc:	08 95       	ret

000024be <__fp_pscB>:
    24be:	00 24       	eor	r0, r0
    24c0:	0a 94       	dec	r0
    24c2:	12 16       	cp	r1, r18
    24c4:	13 06       	cpc	r1, r19
    24c6:	14 06       	cpc	r1, r20
    24c8:	05 06       	cpc	r0, r21
    24ca:	08 95       	ret

000024cc <__fp_round>:
    24cc:	09 2e       	mov	r0, r25
    24ce:	03 94       	inc	r0
    24d0:	00 0c       	add	r0, r0
    24d2:	11 f4       	brne	.+4      	; 0x24d8 <__fp_round+0xc>
    24d4:	88 23       	and	r24, r24
    24d6:	52 f0       	brmi	.+20     	; 0x24ec <__fp_round+0x20>
    24d8:	bb 0f       	add	r27, r27
    24da:	40 f4       	brcc	.+16     	; 0x24ec <__fp_round+0x20>
    24dc:	bf 2b       	or	r27, r31
    24de:	11 f4       	brne	.+4      	; 0x24e4 <__fp_round+0x18>
    24e0:	60 ff       	sbrs	r22, 0
    24e2:	04 c0       	rjmp	.+8      	; 0x24ec <__fp_round+0x20>
    24e4:	6f 5f       	subi	r22, 0xFF	; 255
    24e6:	7f 4f       	sbci	r23, 0xFF	; 255
    24e8:	8f 4f       	sbci	r24, 0xFF	; 255
    24ea:	9f 4f       	sbci	r25, 0xFF	; 255
    24ec:	08 95       	ret

000024ee <__fp_split3>:
    24ee:	57 fd       	sbrc	r21, 7
    24f0:	90 58       	subi	r25, 0x80	; 128
    24f2:	44 0f       	add	r20, r20
    24f4:	55 1f       	adc	r21, r21
    24f6:	59 f0       	breq	.+22     	; 0x250e <__fp_splitA+0x10>
    24f8:	5f 3f       	cpi	r21, 0xFF	; 255
    24fa:	71 f0       	breq	.+28     	; 0x2518 <__fp_splitA+0x1a>
    24fc:	47 95       	ror	r20

000024fe <__fp_splitA>:
    24fe:	88 0f       	add	r24, r24
    2500:	97 fb       	bst	r25, 7
    2502:	99 1f       	adc	r25, r25
    2504:	61 f0       	breq	.+24     	; 0x251e <__fp_splitA+0x20>
    2506:	9f 3f       	cpi	r25, 0xFF	; 255
    2508:	79 f0       	breq	.+30     	; 0x2528 <__fp_splitA+0x2a>
    250a:	87 95       	ror	r24
    250c:	08 95       	ret
    250e:	12 16       	cp	r1, r18
    2510:	13 06       	cpc	r1, r19
    2512:	14 06       	cpc	r1, r20
    2514:	55 1f       	adc	r21, r21
    2516:	f2 cf       	rjmp	.-28     	; 0x24fc <__fp_split3+0xe>
    2518:	46 95       	lsr	r20
    251a:	f1 df       	rcall	.-30     	; 0x24fe <__fp_splitA>
    251c:	08 c0       	rjmp	.+16     	; 0x252e <__fp_splitA+0x30>
    251e:	16 16       	cp	r1, r22
    2520:	17 06       	cpc	r1, r23
    2522:	18 06       	cpc	r1, r24
    2524:	99 1f       	adc	r25, r25
    2526:	f1 cf       	rjmp	.-30     	; 0x250a <__fp_splitA+0xc>
    2528:	86 95       	lsr	r24
    252a:	71 05       	cpc	r23, r1
    252c:	61 05       	cpc	r22, r1
    252e:	08 94       	sec
    2530:	08 95       	ret

00002532 <__fp_zero>:
    2532:	e8 94       	clt

00002534 <__fp_szero>:
    2534:	bb 27       	eor	r27, r27
    2536:	66 27       	eor	r22, r22
    2538:	77 27       	eor	r23, r23
    253a:	cb 01       	movw	r24, r22
    253c:	97 f9       	bld	r25, 7
    253e:	08 95       	ret

00002540 <__gesf2>:
    2540:	8a df       	rcall	.-236    	; 0x2456 <__fp_cmp>
    2542:	08 f4       	brcc	.+2      	; 0x2546 <__gesf2+0x6>
    2544:	8f ef       	ldi	r24, 0xFF	; 255
    2546:	08 95       	ret

00002548 <__mulsf3>:
    2548:	0b d0       	rcall	.+22     	; 0x2560 <__mulsf3x>
    254a:	c0 cf       	rjmp	.-128    	; 0x24cc <__fp_round>
    254c:	b1 df       	rcall	.-158    	; 0x24b0 <__fp_pscA>
    254e:	28 f0       	brcs	.+10     	; 0x255a <__mulsf3+0x12>
    2550:	b6 df       	rcall	.-148    	; 0x24be <__fp_pscB>
    2552:	18 f0       	brcs	.+6      	; 0x255a <__mulsf3+0x12>
    2554:	95 23       	and	r25, r21
    2556:	09 f0       	breq	.+2      	; 0x255a <__mulsf3+0x12>
    2558:	a2 cf       	rjmp	.-188    	; 0x249e <__fp_inf>
    255a:	a7 cf       	rjmp	.-178    	; 0x24aa <__fp_nan>
    255c:	11 24       	eor	r1, r1
    255e:	ea cf       	rjmp	.-44     	; 0x2534 <__fp_szero>

00002560 <__mulsf3x>:
    2560:	c6 df       	rcall	.-116    	; 0x24ee <__fp_split3>
    2562:	a0 f3       	brcs	.-24     	; 0x254c <__mulsf3+0x4>

00002564 <__mulsf3_pse>:
    2564:	95 9f       	mul	r25, r21
    2566:	d1 f3       	breq	.-12     	; 0x255c <__mulsf3+0x14>
    2568:	95 0f       	add	r25, r21
    256a:	50 e0       	ldi	r21, 0x00	; 0
    256c:	55 1f       	adc	r21, r21
    256e:	62 9f       	mul	r22, r18
    2570:	f0 01       	movw	r30, r0
    2572:	72 9f       	mul	r23, r18
    2574:	bb 27       	eor	r27, r27
    2576:	f0 0d       	add	r31, r0
    2578:	b1 1d       	adc	r27, r1
    257a:	63 9f       	mul	r22, r19
    257c:	aa 27       	eor	r26, r26
    257e:	f0 0d       	add	r31, r0
    2580:	b1 1d       	adc	r27, r1
    2582:	aa 1f       	adc	r26, r26
    2584:	64 9f       	mul	r22, r20
    2586:	66 27       	eor	r22, r22
    2588:	b0 0d       	add	r27, r0
    258a:	a1 1d       	adc	r26, r1
    258c:	66 1f       	adc	r22, r22
    258e:	82 9f       	mul	r24, r18
    2590:	22 27       	eor	r18, r18
    2592:	b0 0d       	add	r27, r0
    2594:	a1 1d       	adc	r26, r1
    2596:	62 1f       	adc	r22, r18
    2598:	73 9f       	mul	r23, r19
    259a:	b0 0d       	add	r27, r0
    259c:	a1 1d       	adc	r26, r1
    259e:	62 1f       	adc	r22, r18
    25a0:	83 9f       	mul	r24, r19
    25a2:	a0 0d       	add	r26, r0
    25a4:	61 1d       	adc	r22, r1
    25a6:	22 1f       	adc	r18, r18
    25a8:	74 9f       	mul	r23, r20
    25aa:	33 27       	eor	r19, r19
    25ac:	a0 0d       	add	r26, r0
    25ae:	61 1d       	adc	r22, r1
    25b0:	23 1f       	adc	r18, r19
    25b2:	84 9f       	mul	r24, r20
    25b4:	60 0d       	add	r22, r0
    25b6:	21 1d       	adc	r18, r1
    25b8:	82 2f       	mov	r24, r18
    25ba:	76 2f       	mov	r23, r22
    25bc:	6a 2f       	mov	r22, r26
    25be:	11 24       	eor	r1, r1
    25c0:	9f 57       	subi	r25, 0x7F	; 127
    25c2:	50 40       	sbci	r21, 0x00	; 0
    25c4:	8a f0       	brmi	.+34     	; 0x25e8 <__mulsf3_pse+0x84>
    25c6:	e1 f0       	breq	.+56     	; 0x2600 <__mulsf3_pse+0x9c>
    25c8:	88 23       	and	r24, r24
    25ca:	4a f0       	brmi	.+18     	; 0x25de <__mulsf3_pse+0x7a>
    25cc:	ee 0f       	add	r30, r30
    25ce:	ff 1f       	adc	r31, r31
    25d0:	bb 1f       	adc	r27, r27
    25d2:	66 1f       	adc	r22, r22
    25d4:	77 1f       	adc	r23, r23
    25d6:	88 1f       	adc	r24, r24
    25d8:	91 50       	subi	r25, 0x01	; 1
    25da:	50 40       	sbci	r21, 0x00	; 0
    25dc:	a9 f7       	brne	.-22     	; 0x25c8 <__mulsf3_pse+0x64>
    25de:	9e 3f       	cpi	r25, 0xFE	; 254
    25e0:	51 05       	cpc	r21, r1
    25e2:	70 f0       	brcs	.+28     	; 0x2600 <__mulsf3_pse+0x9c>
    25e4:	5c cf       	rjmp	.-328    	; 0x249e <__fp_inf>
    25e6:	a6 cf       	rjmp	.-180    	; 0x2534 <__fp_szero>
    25e8:	5f 3f       	cpi	r21, 0xFF	; 255
    25ea:	ec f3       	brlt	.-6      	; 0x25e6 <__mulsf3_pse+0x82>
    25ec:	98 3e       	cpi	r25, 0xE8	; 232
    25ee:	dc f3       	brlt	.-10     	; 0x25e6 <__mulsf3_pse+0x82>
    25f0:	86 95       	lsr	r24
    25f2:	77 95       	ror	r23
    25f4:	67 95       	ror	r22
    25f6:	b7 95       	ror	r27
    25f8:	f7 95       	ror	r31
    25fa:	e7 95       	ror	r30
    25fc:	9f 5f       	subi	r25, 0xFF	; 255
    25fe:	c1 f7       	brne	.-16     	; 0x25f0 <__mulsf3_pse+0x8c>
    2600:	fe 2b       	or	r31, r30
    2602:	88 0f       	add	r24, r24
    2604:	91 1d       	adc	r25, r1
    2606:	96 95       	lsr	r25
    2608:	87 95       	ror	r24
    260a:	97 f9       	bld	r25, 7
    260c:	08 95       	ret

0000260e <_exit>:
    260e:	f8 94       	cli

00002610 <__stop_program>:
    2610:	ff cf       	rjmp	.-2      	; 0x2610 <__stop_program>
